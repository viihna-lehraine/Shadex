// File: config/partials/paletteConfig.ts
const number = '\\d+';
const decimal = '[\\d.]+';
const percent = '%?';
const optionalAlpha = '(?:,\\s*([\\d.]+))?';
const colorFunc = (name, args) => {
    return new RegExp(`${name}\\(${args.join(',\\s*')}${optionalAlpha}\\)`, 'i');
};
export const regex = {
    brand: { hex: /^#[0-9A-Fa-f]{8}$/ },
    colors: {
        cmyk: colorFunc('cmyk', [
            number + percent,
            number + percent,
            number + percent,
            number + percent
        ]),
        hex: /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/,
        hsl: colorFunc('hsl', [decimal, decimal + percent, decimal + percent]),
        hsv: colorFunc('hsv', [decimal, decimal + percent, decimal + percent]),
        lab: colorFunc('lab', [decimal, decimal, decimal]),
        rgb: colorFunc('rgb', [decimal, decimal, decimal]),
        xyz: colorFunc('xyz', [decimal, decimal, decimal])
    },
    css: {
        cmyk: colorFunc('cmyk', [
            number + percent,
            number + percent,
            number + percent,
            number + percent
        ]),
        hsl: colorFunc('hsl', [number, number + percent, number + percent]),
        hsv: colorFunc('hsv', [number, number + percent, number + percent]),
        lab: colorFunc('lab', [decimal, decimal, decimal]),
        rgb: colorFunc('rgb', [number, number, number]),
        xyz: colorFunc('xyz', [decimal, decimal, decimal])
    },
    dom: {
        hex: /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{6})$/i,
        hsl: colorFunc('hsl', [number, decimal + percent, decimal + percent]),
        rgb: colorFunc('rgb', [number, number, number])
    },
    stackTrace: {
        anon: /at\s+(.*?):(\d+):(\d+)/,
        chrome: /at\s+(.*?)\s+\((.*?):(\d+):(\d+)\)/,
        electron: /at\s+(.*?)\s+\((.*?):(\d+):(\d+)\)/,
        fallback: /(.*?):(\d+):(\d+)/,
        firefox: /(.*?)@(.*?):(\d+):(\d+)/,
        node: /at\s+(.*?)\s+\((.*?):(\d+):(\d+)\)/,
        safari: /(.*?)@(.*?):(\d+):(\d+)/,
        workers: /at\s+(.*?):(\d+):(\d+)/
    },
    userInput: {
        hex: /^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$/i,
        hsl: colorFunc('hsl', [number, number + percent, number + percent]),
        rgb: colorFunc('rgb', [number, number, number])
    },
    validation: {
        hex: /^#[0-9A-Fa-f]{6}$/,
        hexComponent: /^#[0-9a-fA-F]{2}$/
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29uZmlnL3BhcnRpYWxzL3JlZ2V4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlDQUF5QztBQUl6QyxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUM7QUFDdEIsTUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDO0FBQzFCLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQztBQUNyQixNQUFNLGFBQWEsR0FBRyxxQkFBcUIsQ0FBQztBQUU1QyxNQUFNLFNBQVMsR0FBRyxDQUFDLElBQVksRUFBRSxJQUFjLEVBQVUsRUFBRTtJQUMxRCxPQUFPLElBQUksTUFBTSxDQUNoQixHQUFHLElBQUksTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLGFBQWEsS0FBSyxFQUNwRCxHQUFHLENBQ0gsQ0FBQztBQUNILENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBMEI7SUFDM0MsS0FBSyxFQUFFLEVBQUUsR0FBRyxFQUFFLG1CQUFtQixFQUFFO0lBQ25DLE1BQU0sRUFBRTtRQUNQLElBQUksRUFBRSxTQUFTLENBQUMsTUFBTSxFQUFFO1lBQ3ZCLE1BQU0sR0FBRyxPQUFPO1lBQ2hCLE1BQU0sR0FBRyxPQUFPO1lBQ2hCLE1BQU0sR0FBRyxPQUFPO1lBQ2hCLE1BQU0sR0FBRyxPQUFPO1NBQ2hCLENBQUM7UUFDRixHQUFHLEVBQUUsb0NBQW9DO1FBQ3pDLEdBQUcsRUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sR0FBRyxPQUFPLEVBQUUsT0FBTyxHQUFHLE9BQU8sQ0FBQyxDQUFDO1FBQ3RFLEdBQUcsRUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sR0FBRyxPQUFPLEVBQUUsT0FBTyxHQUFHLE9BQU8sQ0FBQyxDQUFDO1FBQ3RFLEdBQUcsRUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNsRCxHQUFHLEVBQUUsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDbEQsR0FBRyxFQUFFLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0tBQ2xEO0lBQ0QsR0FBRyxFQUFFO1FBQ0osSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNLEVBQUU7WUFDdkIsTUFBTSxHQUFHLE9BQU87WUFDaEIsTUFBTSxHQUFHLE9BQU87WUFDaEIsTUFBTSxHQUFHLE9BQU87WUFDaEIsTUFBTSxHQUFHLE9BQU87U0FDaEIsQ0FBQztRQUNGLEdBQUcsRUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sR0FBRyxPQUFPLEVBQUUsTUFBTSxHQUFHLE9BQU8sQ0FBQyxDQUFDO1FBQ25FLEdBQUcsRUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sR0FBRyxPQUFPLEVBQUUsTUFBTSxHQUFHLE9BQU8sQ0FBQyxDQUFDO1FBQ25FLEdBQUcsRUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNsRCxHQUFHLEVBQUUsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDL0MsR0FBRyxFQUFFLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0tBQ2xEO0lBQ0QsR0FBRyxFQUFFO1FBQ0osR0FBRyxFQUFFLHFDQUFxQztRQUMxQyxHQUFHLEVBQUUsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDLE1BQU0sRUFBRSxPQUFPLEdBQUcsT0FBTyxFQUFFLE9BQU8sR0FBRyxPQUFPLENBQUMsQ0FBQztRQUNyRSxHQUFHLEVBQUUsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDL0M7SUFDRCxVQUFVLEVBQUU7UUFDWCxJQUFJLEVBQUUsd0JBQXdCO1FBQzlCLE1BQU0sRUFBRSxvQ0FBb0M7UUFDNUMsUUFBUSxFQUFFLG9DQUFvQztRQUM5QyxRQUFRLEVBQUUsbUJBQW1CO1FBQzdCLE9BQU8sRUFBRSx5QkFBeUI7UUFDbEMsSUFBSSxFQUFFLG9DQUFvQztRQUMxQyxNQUFNLEVBQUUseUJBQXlCO1FBQ2pDLE9BQU8sRUFBRSx3QkFBd0I7S0FDakM7SUFDRCxTQUFTLEVBQUU7UUFDVixHQUFHLEVBQUUscUNBQXFDO1FBQzFDLEdBQUcsRUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sR0FBRyxPQUFPLEVBQUUsTUFBTSxHQUFHLE9BQU8sQ0FBQyxDQUFDO1FBQ25FLEdBQUcsRUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztLQUMvQztJQUNELFVBQVUsRUFBRTtRQUNYLEdBQUcsRUFBRSxtQkFBbUI7UUFDeEIsWUFBWSxFQUFFLG1CQUFtQjtLQUNqQztDQUNELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiBjb25maWcvcGFydGlhbHMvcGFsZXR0ZUNvbmZpZy50c1xuXG5pbXBvcnQgeyBSZWdleENvbmZpZyB9IGZyb20gJy4uLy4uL3R5cGVzL2luZGV4LmpzJztcblxuY29uc3QgbnVtYmVyID0gJ1xcXFxkKyc7XG5jb25zdCBkZWNpbWFsID0gJ1tcXFxcZC5dKyc7XG5jb25zdCBwZXJjZW50ID0gJyU/JztcbmNvbnN0IG9wdGlvbmFsQWxwaGEgPSAnKD86LFxcXFxzKihbXFxcXGQuXSspKT8nO1xuXG5jb25zdCBjb2xvckZ1bmMgPSAobmFtZTogc3RyaW5nLCBhcmdzOiBzdHJpbmdbXSk6IFJlZ0V4cCA9PiB7XG5cdHJldHVybiBuZXcgUmVnRXhwKFxuXHRcdGAke25hbWV9XFxcXCgke2FyZ3Muam9pbignLFxcXFxzKicpfSR7b3B0aW9uYWxBbHBoYX1cXFxcKWAsXG5cdFx0J2knXG5cdCk7XG59O1xuXG5leHBvcnQgY29uc3QgcmVnZXg6IFJlYWRvbmx5PFJlZ2V4Q29uZmlnPiA9IHtcblx0YnJhbmQ6IHsgaGV4OiAvXiNbMC05QS1GYS1mXXs4fSQvIH0sXG5cdGNvbG9yczoge1xuXHRcdGNteWs6IGNvbG9yRnVuYygnY215aycsIFtcblx0XHRcdG51bWJlciArIHBlcmNlbnQsXG5cdFx0XHRudW1iZXIgKyBwZXJjZW50LFxuXHRcdFx0bnVtYmVyICsgcGVyY2VudCxcblx0XHRcdG51bWJlciArIHBlcmNlbnRcblx0XHRdKSxcblx0XHRoZXg6IC9eIyhbQS1GYS1mMC05XXs2fXxbQS1GYS1mMC05XXs4fSkkLyxcblx0XHRoc2w6IGNvbG9yRnVuYygnaHNsJywgW2RlY2ltYWwsIGRlY2ltYWwgKyBwZXJjZW50LCBkZWNpbWFsICsgcGVyY2VudF0pLFxuXHRcdGhzdjogY29sb3JGdW5jKCdoc3YnLCBbZGVjaW1hbCwgZGVjaW1hbCArIHBlcmNlbnQsIGRlY2ltYWwgKyBwZXJjZW50XSksXG5cdFx0bGFiOiBjb2xvckZ1bmMoJ2xhYicsIFtkZWNpbWFsLCBkZWNpbWFsLCBkZWNpbWFsXSksXG5cdFx0cmdiOiBjb2xvckZ1bmMoJ3JnYicsIFtkZWNpbWFsLCBkZWNpbWFsLCBkZWNpbWFsXSksXG5cdFx0eHl6OiBjb2xvckZ1bmMoJ3h5eicsIFtkZWNpbWFsLCBkZWNpbWFsLCBkZWNpbWFsXSlcblx0fSxcblx0Y3NzOiB7XG5cdFx0Y215azogY29sb3JGdW5jKCdjbXlrJywgW1xuXHRcdFx0bnVtYmVyICsgcGVyY2VudCxcblx0XHRcdG51bWJlciArIHBlcmNlbnQsXG5cdFx0XHRudW1iZXIgKyBwZXJjZW50LFxuXHRcdFx0bnVtYmVyICsgcGVyY2VudFxuXHRcdF0pLFxuXHRcdGhzbDogY29sb3JGdW5jKCdoc2wnLCBbbnVtYmVyLCBudW1iZXIgKyBwZXJjZW50LCBudW1iZXIgKyBwZXJjZW50XSksXG5cdFx0aHN2OiBjb2xvckZ1bmMoJ2hzdicsIFtudW1iZXIsIG51bWJlciArIHBlcmNlbnQsIG51bWJlciArIHBlcmNlbnRdKSxcblx0XHRsYWI6IGNvbG9yRnVuYygnbGFiJywgW2RlY2ltYWwsIGRlY2ltYWwsIGRlY2ltYWxdKSxcblx0XHRyZ2I6IGNvbG9yRnVuYygncmdiJywgW251bWJlciwgbnVtYmVyLCBudW1iZXJdKSxcblx0XHR4eXo6IGNvbG9yRnVuYygneHl6JywgW2RlY2ltYWwsIGRlY2ltYWwsIGRlY2ltYWxdKVxuXHR9LFxuXHRkb206IHtcblx0XHRoZXg6IC9eIyhbQS1GYS1mMC05XXszfXxbQS1GYS1mMC05XXs2fSkkL2ksXG5cdFx0aHNsOiBjb2xvckZ1bmMoJ2hzbCcsIFtudW1iZXIsIGRlY2ltYWwgKyBwZXJjZW50LCBkZWNpbWFsICsgcGVyY2VudF0pLFxuXHRcdHJnYjogY29sb3JGdW5jKCdyZ2InLCBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0pXG5cdH0sXG5cdHN0YWNrVHJhY2U6IHtcblx0XHRhbm9uOiAvYXRcXHMrKC4qPyk6KFxcZCspOihcXGQrKS8sXG5cdFx0Y2hyb21lOiAvYXRcXHMrKC4qPylcXHMrXFwoKC4qPyk6KFxcZCspOihcXGQrKVxcKS8sXG5cdFx0ZWxlY3Ryb246IC9hdFxccysoLio/KVxccytcXCgoLio/KTooXFxkKyk6KFxcZCspXFwpLyxcblx0XHRmYWxsYmFjazogLyguKj8pOihcXGQrKTooXFxkKykvLFxuXHRcdGZpcmVmb3g6IC8oLio/KUAoLio/KTooXFxkKyk6KFxcZCspLyxcblx0XHRub2RlOiAvYXRcXHMrKC4qPylcXHMrXFwoKC4qPyk6KFxcZCspOihcXGQrKVxcKS8sXG5cdFx0c2FmYXJpOiAvKC4qPylAKC4qPyk6KFxcZCspOihcXGQrKS8sXG5cdFx0d29ya2VyczogL2F0XFxzKyguKj8pOihcXGQrKTooXFxkKykvXG5cdH0sXG5cdHVzZXJJbnB1dDoge1xuXHRcdGhleDogL14jKFswLTlBLUZhLWZdezN9fFswLTlBLUZhLWZdezZ9KSQvaSxcblx0XHRoc2w6IGNvbG9yRnVuYygnaHNsJywgW251bWJlciwgbnVtYmVyICsgcGVyY2VudCwgbnVtYmVyICsgcGVyY2VudF0pLFxuXHRcdHJnYjogY29sb3JGdW5jKCdyZ2InLCBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0pXG5cdH0sXG5cdHZhbGlkYXRpb246IHtcblx0XHRoZXg6IC9eI1swLTlBLUZhLWZdezZ9JC8sXG5cdFx0aGV4Q29tcG9uZW50OiAvXiNbMC05YS1mQS1GXXsyfSQvXG5cdH1cbn07XG4iXX0=