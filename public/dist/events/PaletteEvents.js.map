{"version":3,"file":"PaletteEvents.js","sources":["../../../../src/events/PaletteEvents.ts"],"sourcesContent":["// events/PaleteEvents.js\n\nimport {\n\tColorSpace,\n\tPaletteEventsClassInterface,\n\tPaletteItem,\n\tServicesInterface,\n\tUtilitiesInterface\n} from '../types/index.js';\nimport { EventManager } from './EventManager.js';\nimport { PaletteManager } from '../palette/PaletteManager.js';\nimport { PaletteState } from '../state/PaletteState.js';\nimport { StateManager } from '../state/StateManager.js';\nimport { data } from '../data/index.js';\n\nconst classes = data.dom.classes;\nconst ids = data.dom.ids;\nconst timers = data.config.timers;\n\nexport class PaletteEvents implements PaletteEventsClassInterface {\n\tprivate draggedColumn: HTMLElement | null = null;\n\tprivate errors: ServicesInterface['errors'];\n\n\tconstructor(\n\t\tprivate paletteManager: PaletteManager,\n\t\tprivate paletteState: PaletteState,\n\t\tprivate services: ServicesInterface,\n\t\tprivate stateManager: StateManager,\n\t\tprivate utils: UtilitiesInterface\n\t) {\n\t\tthis.errors = services.errors;\n\t}\n\n\tpublic init() {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst paletteContainer = this.utils.core.getElement(\n\t\t\t\t\tids.divs.paletteContainer\n\t\t\t\t);\n\n\t\t\t\tif (!paletteContainer) return;\n\n\t\t\t\tthis.stateManager.setOnStateLoad(() => {\n\t\t\t\t\tthis.initializeColumnPositions();\n\t\t\t\t});\n\n\t\t\t\t// delegated event listener for color input changes\n\t\t\t\tEventManager.add(paletteContainer, 'input', event => {\n\t\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\t\tif (target.matches(classes.colorDisplay)) {\n\t\t\t\t\t\tconst column = target.closest(\n\t\t\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t\t\t) as HTMLElement;\n\t\t\t\t\t\tconst columnID = column?.id.split('-').pop();\n\n\t\t\t\t\t\tif (!column || !columnID) return;\n\n\t\t\t\t\t\tthis.handleColorInputChange(event, column, columnID);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// delegated lock button event listener\n\t\t\t\tEventManager.add(paletteContainer, 'click', event => {\n\t\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\t\tif (target.matches(classes.lockBtn)) {\n\t\t\t\t\t\tthis.toggleLock(target);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// delegated event listener for modals (open/close)\n\t\t\t\tEventManager.add(paletteContainer, 'click', event => {\n\t\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\t\tif (target.matches(classes.colorInputBtn)) {\n\t\t\t\t\t\tthis.toggleColorModal(target);\n\t\t\t\t\t} else if (target.matches(classes.colorInputModal)) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tevent.target !==\n\t\t\t\t\t\t\ttarget.querySelector(classes.colorInputBtn)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\ttarget.classList.add(classes.hidden);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// delegated event listener for resizing columns\n\t\t\t\tEventManager.add(paletteContainer, 'mousedown', ((\n\t\t\t\t\tevent: MouseEvent\n\t\t\t\t) => {\n\t\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\t\tif (target.matches(classes.resizeHandle)) {\n\t\t\t\t\t\tthis.startResize(\n\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\ttarget.closest(classes.paletteColumn) as HTMLElement\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}) as EventListener);\n\n\t\t\t\t// delegated event listener for tooltips (1)\n\t\t\t\tEventManager.add(paletteContainer, 'mouseover', event => {\n\t\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\t\tif (target.matches(classes.tooltipTrigger)) {\n\t\t\t\t\t\tconst tooltipText = target.dataset.tooltip;\n\n\t\t\t\t\t\tif (tooltipText) {\n\t\t\t\t\t\t\tthis.showTooltip(target, tooltipText);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// delegated event listener for tooltips (2)\n\t\t\t\tEventManager.add(paletteContainer, 'mouseout', event => {\n\t\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\t\tif (target.matches(classes.tooltipTrigger)) {\n\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// observe for new elements\n\t\t\t\tthis.createPaletteObserver();\n\t\t\t},\n\t\t\t`Failed to call init()`,\n\t\t\t'PaletteEvents.init()'\n\t\t);\n\t}\n\n\tpublic attachColorCopyHandlers(): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst paletteContainer = this.utils.core.getElement(\n\t\t\t\t\tids.divs.paletteContainer\n\t\t\t\t);\n\t\t\t\tif (!paletteContainer) return;\n\n\t\t\t\tEventManager.add(paletteContainer, 'click', event => {\n\t\t\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\t\t\tif (target.matches(classes.colorDisplay))\n\t\t\t\t\t\tthis.copyToClipboard(target.value, target);\n\t\t\t\t});\n\t\t\t},\n\t\t\t'Failed to attach color copy handlers',\n\t\t\t'PaletteEvents.attachColorCopyHandlers'\n\t\t);\n\t}\n\n\tpublic attachDragAndDropHandlers(): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst paletteContainer = this.utils.core.getElement(\n\t\t\t\t\tids.divs.paletteContainer\n\t\t\t\t);\n\t\t\t\tif (!paletteContainer) {\n\t\t\t\t\tthis.services.log(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Palette container not found! Cannot attach drag-and-drop handlers.`,\n\t\t\t\t\t\t'PaletteEvents.attachDragAndDropHandlers()',\n\t\t\t\t\t\t1\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// drag start\n\t\t\t\tEventManager.add(paletteContainer, 'dragstart', ((\n\t\t\t\t\tevent: DragEvent\n\t\t\t\t) => {\n\t\t\t\t\tconst dragHandle = (event.target as HTMLElement).closest(\n\t\t\t\t\t\tclasses.dragHandle\n\t\t\t\t\t) as HTMLElement;\n\t\t\t\t\tif (!dragHandle) return;\n\n\t\t\t\t\tthis.draggedColumn = dragHandle.closest(\n\t\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t\t) as HTMLElement;\n\t\t\t\t\tif (!this.draggedColumn) return;\n\n\t\t\t\t\tevent.dataTransfer?.setData(\n\t\t\t\t\t\t'text/plain',\n\t\t\t\t\t\tthis.draggedColumn.id\n\t\t\t\t\t);\n\t\t\t\t\tthis.draggedColumn.classList.add('dragging');\n\n\t\t\t\t\tthis.services.log(\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t`Drag started for column: ${this.draggedColumn.id}`,\n\t\t\t\t\t\t'PaletteEvents.attachDragAndDropHandlers()',\n\t\t\t\t\t\t4\n\t\t\t\t\t);\n\t\t\t\t}) as EventListener);\n\n\t\t\t\t// drag over (Allow dropping)\n\t\t\t\tEventManager.add(paletteContainer, 'dragover', ((\n\t\t\t\t\tevent: DragEvent\n\t\t\t\t) => {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tif (event.dataTransfer)\n\t\t\t\t\t\tevent.dataTransfer.dropEffect = 'move';\n\t\t\t\t}) as EventListener);\n\n\t\t\t\t// drop (Swap columns)\n\t\t\t\tEventManager.add(paletteContainer, 'drop', ((\n\t\t\t\t\tevent: DragEvent\n\t\t\t\t) => {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tconst targetColumn = (event.target as HTMLElement).closest(\n\t\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t\t) as HTMLElement;\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.draggedColumn ||\n\t\t\t\t\t\t!targetColumn ||\n\t\t\t\t\t\tthis.draggedColumn === targetColumn\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tconst draggedID = parseInt(\n\t\t\t\t\t\tthis.draggedColumn.id.split('-').pop()!\n\t\t\t\t\t);\n\t\t\t\t\tconst targetID = parseInt(\n\t\t\t\t\t\ttargetColumn.id.split('-').pop()!\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.paletteManager.swapColumns(draggedID, targetID);\n\n\t\t\t\t\t// swap positions in state\n\t\t\t\t\tconst updatedColumns = [\n\t\t\t\t\t\t...this.stateManager.getState().paletteContainer.columns\n\t\t\t\t\t];\n\t\t\t\t\tconst draggedIndex = updatedColumns.findIndex(\n\t\t\t\t\t\tcol => col.id === draggedID\n\t\t\t\t\t);\n\t\t\t\t\tconst targetIndex = updatedColumns.findIndex(\n\t\t\t\t\t\tcol => col.id === targetID\n\t\t\t\t\t);\n\n\t\t\t\t\tif (draggedIndex !== -1 && targetIndex !== -1) {\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tupdatedColumns[draggedIndex].position,\n\t\t\t\t\t\t\tupdatedColumns[targetIndex].position\n\t\t\t\t\t\t] = [\n\t\t\t\t\t\t\tupdatedColumns[targetIndex].position,\n\t\t\t\t\t\t\tupdatedColumns[draggedIndex].position\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\tthis.stateManager.updatePaletteColumns(\n\t\t\t\t\t\t\tupdatedColumns,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t5\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.draggedColumn.classList.remove('dragging');\n\t\t\t\t\tthis.services.log(\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t`Successfully swapped columns: ${this.draggedColumn.id} and ${targetColumn.id}`,\n\t\t\t\t\t\t'PaletteEvents.attachDragAndDropHandlers()',\n\t\t\t\t\t\t4\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.draggedColumn = null;\n\t\t\t\t}) as EventListener);\n\n\t\t\t\t// drag end\n\t\t\t\tEventManager.add(paletteContainer, 'dragend', () => {\n\t\t\t\t\tif (this.draggedColumn) {\n\t\t\t\t\t\tthis.draggedColumn.classList.remove('dragging');\n\t\t\t\t\t\tthis.services.log(\n\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t`Drag ended for column.`,\n\t\t\t\t\t\t\t'PaletteEvents.attachDragAndDropHandlers()',\n\t\t\t\t\t\t\t4\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.draggedColumn = null;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis.services.log(\n\t\t\t\t\t'debug',\n\t\t\t\t\t`Drag and drop event listeners attached`,\n\t\t\t\t\t'PaletteEvents.attachDragAndDropHandlers()',\n\t\t\t\t\t3\n\t\t\t\t);\n\t\t\t},\n\t\t\t'Failed to attach drag-and-drop handlers',\n\t\t\t'PaletteEvents.attachDragAndDropHandlers'\n\t\t);\n\t}\n\n\t// initialiezs column positions on page load\n\tpublic initializeColumnPositions(): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst paletteColumns = this.utils.core.getAllElements(\n\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t);\n\n\t\t\t\tconst updatedColumns = Array.from(paletteColumns).map(\n\t\t\t\t\t(column, index) => ({\n\t\t\t\t\t\tid: parseInt(column.id.split('-').pop() || '0'),\n\t\t\t\t\t\tisLocked: false,\n\t\t\t\t\t\tposition: index + 1,\n\t\t\t\t\t\tsize: column.offsetWidth\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tthis.stateManager.updatePaletteColumns(\n\t\t\t\t\tupdatedColumns,\n\t\t\t\t\tfalse,\n\t\t\t\t\t4\n\t\t\t\t);\n\t\t\t},\n\t\t\t'Failed to initialize column positions',\n\t\t\t'PaletteEvents.initializeColumnPositions'\n\t\t);\n\t}\n\n\t// renders column sizes based on stored state\n\tpublic renderColumnSizeChange(): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst paletteColumns = this.utils.core.getAllElements(\n\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t);\n\t\t\t\tconst columnsState =\n\t\t\t\t\tthis.stateManager.getState().paletteContainer.columns;\n\n\t\t\t\tpaletteColumns.forEach(column => {\n\t\t\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\t\t\t\t\tconst columnData = columnsState.find(\n\t\t\t\t\t\tcol => col.id === columnID\n\t\t\t\t\t);\n\n\t\t\t\t\tif (columnData) {\n\t\t\t\t\t\t(column as HTMLElement).style.width =\n\t\t\t\t\t\t\t`${columnData.size}%`;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t'Failed to render column size changes',\n\t\t\t'PaletteEvents.renderColumnSizeChange'\n\t\t);\n\t}\n\n\tpublic syncColumnColorsWithState(): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst paletteColumns =\n\t\t\t\t\tthis.utils.core.getAllElements<HTMLDivElement>(\n\t\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t\t);\n\t\t\t\tconst currentPalette = this.stateManager\n\t\t\t\t\t.getState()\n\t\t\t\t\t.paletteHistory.at(-1);\n\n\t\t\t\tif (!currentPalette || !currentPalette.items) {\n\t\t\t\t\tthis.services.log(\n\t\t\t\t\t\t'warn',\n\t\t\t\t\t\t'No valid palette data found in history!',\n\t\t\t\t\t\t'PaletteEvents.syncColumnColorsWithState()',\n\t\t\t\t\t\t2\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst userPreference =\n\t\t\t\t\tlocalStorage.getItem('colorPreference') || 'hex';\n\t\t\t\tconst validColorSpace = this.utils.typeGuards.isColorSpace(\n\t\t\t\t\tuserPreference\n\t\t\t\t)\n\t\t\t\t\t? userPreference\n\t\t\t\t\t: 'hex';\n\n\t\t\t\tpaletteColumns.forEach(column => {\n\t\t\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\t\t\t\t\tconst paletteItem = currentPalette.items.find(\n\t\t\t\t\t\titem => item.itemID === columnID\n\t\t\t\t\t);\n\n\t\t\t\t\tif (paletteItem) {\n\t\t\t\t\t\tconst colorValue = this.getColorByPreference(\n\t\t\t\t\t\t\tpaletteItem.css,\n\t\t\t\t\t\t\tvalidColorSpace\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcolumn.style.backgroundColor = colorValue;\n\n\t\t\t\t\t\tconst colorDisplay = column.querySelector(\n\t\t\t\t\t\t\tclasses.colorDisplay\n\t\t\t\t\t\t) as HTMLInputElement;\n\t\t\t\t\t\tif (colorDisplay) colorDisplay.value = colorValue;\n\n\t\t\t\t\t\tthis.services.log(\n\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t`Updated color for column ${columnID}: ${colorValue}`,\n\t\t\t\t\t\t\t'PaletteEvents.syncColumnColorsWithState()',\n\t\t\t\t\t\t\t4\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t'Failed to sync column colors with state',\n\t\t\t'PaletteEvents.syncColumnColorsWithState'\n\t\t);\n\t}\n\n\tprivate copyToClipboard(text: string, targetElement: HTMLElement): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tnavigator.clipboard\n\t\t\t\t\t.writeText(text.trim())\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tthis.showTooltip(targetElement, 'Copied!');\n\t\t\t\t\t\tthis.services.log(\n\t\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t\t`Copied color value: ${text}`,\n\t\t\t\t\t\t\t'PaletteEvents.copyToClipboard()',\n\t\t\t\t\t\t\t4\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsetTimeout(\n\t\t\t\t\t\t\t() => this.removeTooltip(targetElement),\n\t\t\t\t\t\t\ttimers.tooltipFadeOut\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tthis.services.log(\n\t\t\t\t\t\t\t'error',\n\t\t\t\t\t\t\t`Error copying to clipboard: ${err}`,\n\t\t\t\t\t\t\t'PaletteEvents.copyToClipboard()',\n\t\t\t\t\t\t\t1\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t},\n\t\t\t'Failed to copy to clipboard',\n\t\t\t'PaletteEvents.copyToClipboard'\n\t\t);\n\t}\n\n\t// observes palette container for new elements\n\tprivate createPaletteObserver(): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst paletteContainer = this.utils.core.getElement(\n\t\t\t\t\tids.divs.paletteContainer\n\t\t\t\t);\n\t\t\t\tif (!paletteContainer) return;\n\n\t\t\t\tconst observer = new MutationObserver(\n\t\t\t\t\t(mutationsList: MutationRecord[]) => {\n\t\t\t\t\t\tmutationsList.forEach(mutation => {\n\t\t\t\t\t\t\tmutation.addedNodes.forEach(node => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tnode instanceof HTMLElement &&\n\t\t\t\t\t\t\t\t\tnode.classList.contains(\n\t\t\t\t\t\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t!this.stateManager.getState()\n\t\t\t\t\t\t\t\t\t\t\t.paletteContainer\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tthis.services.log(\n\t\t\t\t\t\t\t\t\t\t\t'warn',\n\t\t\t\t\t\t\t\t\t\t\t'Skipping initializeColumnPositions() - State is not ready!',\n\t\t\t\t\t\t\t\t\t\t\t'PaletteEvents.createPaletteObserver()'\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.initializeColumnPositions();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tobserver.observe(paletteContainer, {\n\t\t\t\t\tchildList: true,\n\t\t\t\t\tsubtree: true\n\t\t\t\t});\n\n\t\t\t\tthis.services.log(\n\t\t\t\t\t'info',\n\t\t\t\t\t'Palette Container MutationObserver created',\n\t\t\t\t\t'PaletteEvents.createPaletteObserver()',\n\t\t\t\t\t2\n\t\t\t\t);\n\t\t\t},\n\t\t\t'Failed to create palette observer',\n\t\t\t'PaletteEvents.createPaletteObserver'\n\t\t);\n\t}\n\n\tprivate getColorByPreference(\n\t\tcolorData: PaletteItem['css'],\n\t\tpreference: ColorSpace\n\t): string {\n\t\treturn (\n\t\t\tcolorData[preference as keyof PaletteItem['css']] || colorData.hex\n\t\t);\n\t}\n\n\tprivate handleColorInputChange(\n\t\tevent: Event,\n\t\tcolumn: HTMLElement,\n\t\tcolumnID: string\n\t): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst newColor = (\n\t\t\t\t\tevent.target as HTMLInputElement\n\t\t\t\t).value.trim();\n\t\t\t\tif (!this.utils.validate.userColorInput(newColor)) return;\n\n\t\t\t\tcolumn.style.backgroundColor = newColor;\n\n\t\t\t\tconst colorInput = this.utils.core.getElement(\n\t\t\t\t\t`color-input-${columnID}`\n\t\t\t\t) as HTMLInputElement | null;\n\t\t\t\tif (colorInput) colorInput.value = newColor;\n\n\t\t\t\tconst numericColumnID = parseInt(\n\t\t\t\t\tcolumnID.replace(/\\D/g, ''),\n\t\t\t\t\t10\n\t\t\t\t);\n\t\t\t\tif (!isNaN(numericColumnID)) {\n\t\t\t\t\tthis.paletteState.updatePaletteItemColor(\n\t\t\t\t\t\tnumericColumnID,\n\t\t\t\t\t\tnewColor\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t'Failed to handle color input change',\n\t\t\t'PaletteEvents.handleColorInputChange'\n\t\t);\n\t}\n\n\t// hides tooltip for a given element\n\tprivate hideTooltip(): void {\n\t\tthis.utils.dom.hideTooltip();\n\t}\n\n\tprivate removeTooltip(element: HTMLElement): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst tooltipId = element.dataset.tooltipId;\n\t\t\t\tif (!tooltipId) return;\n\n\t\t\t\tconst tooltip = document.getElementById(tooltipId);\n\t\t\t\tif (tooltip) tooltip.remove();\n\n\t\t\t\tdelete element.dataset.tooltipId;\n\t\t\t},\n\t\t\t'Failed to remove tooltip',\n\t\t\t'PaletteEvents.removeTooltip'\n\t\t);\n\t}\n\n\tprivate showTooltip(element: HTMLElement, text: string): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tthis.removeTooltip(element);\n\n\t\t\t\tconst tooltip = document.createElement('div');\n\t\t\t\ttooltip.classList.add('tooltip');\n\t\t\t\ttooltip.textContent = text;\n\t\t\t\tdocument.body.appendChild(tooltip);\n\n\t\t\t\tconst rect = element.getBoundingClientRect();\n\t\t\t\ttooltip.style.left = `${rect.left + window.scrollX}px`;\n\t\t\t\ttooltip.style.top = `${rect.top + window.scrollY - tooltip.offsetHeight - 5}px`;\n\n\t\t\t\telement.dataset.tooltipId = tooltip.id;\n\t\t\t},\n\t\t\t'Failed to show tooltip',\n\t\t\t'PaletteEvents.showTooltip'\n\t\t);\n\t}\n\n\t// handles resizing of palette columns\n\tprivate startResize(event: MouseEvent, column: HTMLElement): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tif (!column || column.classList.contains(classes.locked))\n\t\t\t\t\treturn;\n\n\t\t\t\tconst startX = event.clientX;\n\t\t\t\tconst startWidth = column.offsetWidth;\n\n\t\t\t\tconst onMouseMove = (moveEvent: MouseEvent) => {\n\t\t\t\t\tconst diff = moveEvent.clientX - startX;\n\t\t\t\t\tconst newSize = startWidth + diff;\n\n\t\t\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\t\t\t\t\tthis.paletteManager.handleColumnResize(columnID, newSize);\n\t\t\t\t};\n\n\t\t\t\tconst onMouseUp = () => {\n\t\t\t\t\twindow.removeEventListener('mousemove', onMouseMove);\n\t\t\t\t\twindow.removeEventListener('mouseup', onMouseUp);\n\n\t\t\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\t\t\t\t\tconst updatedColumns = this.stateManager\n\t\t\t\t\t\t.getState()\n\t\t\t\t\t\t.paletteContainer.columns.map(col =>\n\t\t\t\t\t\t\tcol.id === columnID\n\t\t\t\t\t\t\t\t? { ...col, size: column.offsetWidth }\n\t\t\t\t\t\t\t\t: col\n\t\t\t\t\t\t);\n\n\t\t\t\t\tthis.stateManager.updatePaletteColumns(\n\t\t\t\t\t\tupdatedColumns,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t4\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\twindow.addEventListener('mousemove', onMouseMove);\n\t\t\t\twindow.addEventListener('mouseup', onMouseUp);\n\t\t\t},\n\t\t\t'Failed to start column resize',\n\t\t\t'PaletteEvents.startResize'\n\t\t);\n\t}\n\n\tprivate toggleColorModal(button: HTMLElement): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst modalID = button.dataset.modalID;\n\t\t\t\tif (!modalID) return;\n\t\t\t\tconst modal =\n\t\t\t\t\tthis.utils.core.getElement<HTMLDivElement>(modalID);\n\t\t\t\tmodal?.classList.toggle(classes.hidden);\n\t\t\t},\n\t\t\t'Failed to toggle color modal',\n\t\t\t'PaletteEvents.toggleColorModal'\n\t\t);\n\t}\n\n\t// toggles lock state of a palette column\n\tprivate toggleLock(button: HTMLElement): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst column = button.closest(\n\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t) as HTMLElement | null;\n\t\t\t\tif (!column) return;\n\n\t\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\t\t\t\tthis.paletteManager.handleColumnLock(columnID);\n\t\t\t},\n\t\t\t'Failed to toggle lock state',\n\t\t\t'PaletteEvents.toggleLock'\n\t\t);\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;AAeA,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO;AAChC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG;AACxB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;MAEpB,aAAa,CAAA;AAKhB,IAAA,cAAA;AACA,IAAA,YAAA;AACA,IAAA,QAAA;AACA,IAAA,YAAA;AACA,IAAA,KAAA;IARD,aAAa,GAAuB,IAAI;AACxC,IAAA,MAAM;IAEd,WACS,CAAA,cAA8B,EAC9B,YAA0B,EAC1B,QAA2B,EAC3B,YAA0B,EAC1B,KAAyB,EAAA;QAJzB,IAAc,CAAA,cAAA,GAAd,cAAc;QACd,IAAY,CAAA,YAAA,GAAZ,YAAY;QACZ,IAAQ,CAAA,QAAA,GAAR,QAAQ;QACR,IAAY,CAAA,YAAA,GAAZ,YAAY;QACZ,IAAK,CAAA,KAAA,GAAL,KAAK;AAEb,QAAA,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM;;IAGvB,IAAI,GAAA;AACV,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;AACJ,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAClD,GAAG,CAAC,IAAI,CAAC,gBAAgB,CACzB;AAED,YAAA,IAAI,CAAC,gBAAgB;gBAAE;AAEvB,YAAA,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAK;gBACrC,IAAI,CAAC,yBAAyB,EAAE;AACjC,aAAC,CAAC;;YAGF,YAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,EAAE,KAAK,IAAG;AACnD,gBAAA,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB;gBAE1C,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;oBACzC,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAC5B,OAAO,CAAC,aAAa,CACN;AAChB,oBAAA,MAAM,QAAQ,GAAG,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;AAE5C,oBAAA,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ;wBAAE;oBAE1B,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC;;AAEtD,aAAC,CAAC;;YAGF,YAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,EAAE,KAAK,IAAG;AACnD,gBAAA,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB;gBAE1C,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACpC,oBAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;;AAEzB,aAAC,CAAC;;YAGF,YAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,EAAE,KAAK,IAAG;AACnD,gBAAA,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB;gBAE1C,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;AAC1C,oBAAA,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;;qBACvB,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;oBACnD,IACC,KAAK,CAAC,MAAM;wBACZ,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,EAC1C;wBACD,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;;;AAGvC,aAAC,CAAC;;YAGF,YAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,GAAG,CAChD,KAAiB,KACd;AACH,gBAAA,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB;gBAE1C,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;AACzC,oBAAA,IAAI,CAAC,WAAW,CACf,KAAK,EACL,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAgB,CACpD;;aAEF,EAAmB;;YAGpB,YAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,EAAE,KAAK,IAAG;AACvD,gBAAA,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB;gBAE1C,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;AAC3C,oBAAA,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO;oBAE1C,IAAI,WAAW,EAAE;AAChB,wBAAA,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC;;;AAGxC,aAAC,CAAC;;YAGF,YAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,UAAU,EAAE,KAAK,IAAG;AACtD,gBAAA,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB;gBAE1C,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;oBAC3C,IAAI,CAAC,WAAW,EAAE;;AAEpB,aAAC,CAAC;;YAGF,IAAI,CAAC,qBAAqB,EAAE;AAC7B,SAAC,EACD,CAAA,qBAAA,CAAuB,EACvB,sBAAsB,CACtB;;IAGK,uBAAuB,GAAA;AAC7B,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;AACJ,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAClD,GAAG,CAAC,IAAI,CAAC,gBAAgB,CACzB;AACD,YAAA,IAAI,CAAC,gBAAgB;gBAAE;YAEvB,YAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,EAAE,KAAK,IAAG;AACnD,gBAAA,MAAM,MAAM,GAAG,KAAK,CAAC,MAA0B;AAC/C,gBAAA,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;oBACvC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC;AAC5C,aAAC,CAAC;AACH,SAAC,EACD,sCAAsC,EACtC,uCAAuC,CACvC;;IAGK,yBAAyB,GAAA;AAC/B,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;AACJ,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAClD,GAAG,CAAC,IAAI,CAAC,gBAAgB,CACzB;YACD,IAAI,CAAC,gBAAgB,EAAE;AACtB,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChB,OAAO,EACP,CAAA,kEAAA,CAAoE,EACpE,2CAA2C,EAC3C,CAAC,CACD;gBACD;;;YAID,YAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,GAAG,CAChD,KAAgB,KACb;AACH,gBAAA,MAAM,UAAU,GAAI,KAAK,CAAC,MAAsB,CAAC,OAAO,CACvD,OAAO,CAAC,UAAU,CACH;AAChB,gBAAA,IAAI,CAAC,UAAU;oBAAE;gBAEjB,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,OAAO,CACtC,OAAO,CAAC,aAAa,CACN;gBAChB,IAAI,CAAC,IAAI,CAAC,aAAa;oBAAE;AAEzB,gBAAA,KAAK,CAAC,YAAY,EAAE,OAAO,CAC1B,YAAY,EACZ,IAAI,CAAC,aAAa,CAAC,EAAE,CACrB;gBACD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC;AAE5C,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChB,OAAO,EACP,CAA4B,yBAAA,EAAA,IAAI,CAAC,aAAa,CAAC,EAAE,CAAE,CAAA,EACnD,2CAA2C,EAC3C,CAAC,CACD;aACD,EAAmB;;YAGpB,YAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,UAAU,GAAG,CAC/C,KAAgB,KACb;gBACH,KAAK,CAAC,cAAc,EAAE;gBACtB,IAAI,KAAK,CAAC,YAAY;AACrB,oBAAA,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM;aACvC,EAAmB;;YAGpB,YAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,GAAG,CAC3C,KAAgB,KACb;gBACH,KAAK,CAAC,cAAc,EAAE;AAEtB,gBAAA,MAAM,YAAY,GAAI,KAAK,CAAC,MAAsB,CAAC,OAAO,CACzD,OAAO,CAAC,aAAa,CACN;gBAChB,IACC,CAAC,IAAI,CAAC,aAAa;AACnB,oBAAA,CAAC,YAAY;oBACb,IAAI,CAAC,aAAa,KAAK,YAAY;oBAEnC;AAED,gBAAA,MAAM,SAAS,GAAG,QAAQ,CACzB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAG,CACvC;AACD,gBAAA,MAAM,QAAQ,GAAG,QAAQ,CACxB,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAG,CACjC;gBAED,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,QAAQ,CAAC;;AAGpD,gBAAA,MAAM,cAAc,GAAG;oBACtB,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CAAC;iBACjD;AACD,gBAAA,MAAM,YAAY,GAAG,cAAc,CAAC,SAAS,CAC5C,GAAG,IAAI,GAAG,CAAC,EAAE,KAAK,SAAS,CAC3B;AACD,gBAAA,MAAM,WAAW,GAAG,cAAc,CAAC,SAAS,CAC3C,GAAG,IAAI,GAAG,CAAC,EAAE,KAAK,QAAQ,CAC1B;gBAED,IAAI,YAAY,KAAK,EAAE,IAAI,WAAW,KAAK,EAAE,EAAE;AAC9C,oBAAA;AACC,wBAAA,cAAc,CAAC,YAAY,CAAC,CAAC,QAAQ;AACrC,wBAAA,cAAc,CAAC,WAAW,CAAC,CAAC;qBAC5B,GAAG;AACH,wBAAA,cAAc,CAAC,WAAW,CAAC,CAAC,QAAQ;AACpC,wBAAA,cAAc,CAAC,YAAY,CAAC,CAAC;qBAC7B;oBAED,IAAI,CAAC,YAAY,CAAC,oBAAoB,CACrC,cAAc,EACd,KAAK,EACL,CAAC,CACD;;gBAGF,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC;gBAC/C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChB,OAAO,EACP,CAAiC,8BAAA,EAAA,IAAI,CAAC,aAAa,CAAC,EAAE,CAAA,KAAA,EAAQ,YAAY,CAAC,EAAE,CAAA,CAAE,EAC/E,2CAA2C,EAC3C,CAAC,CACD;AAED,gBAAA,IAAI,CAAC,aAAa,GAAG,IAAI;aACzB,EAAmB;;YAGpB,YAAY,CAAC,GAAG,CAAC,gBAAgB,EAAE,SAAS,EAAE,MAAK;AAClD,gBAAA,IAAI,IAAI,CAAC,aAAa,EAAE;oBACvB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC;AAC/C,oBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChB,OAAO,EACP,CAAA,sBAAA,CAAwB,EACxB,2CAA2C,EAC3C,CAAC,CACD;AACD,oBAAA,IAAI,CAAC,aAAa,GAAG,IAAI;;AAE3B,aAAC,CAAC;AAEF,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChB,OAAO,EACP,CAAA,sCAAA,CAAwC,EACxC,2CAA2C,EAC3C,CAAC,CACD;AACF,SAAC,EACD,yCAAyC,EACzC,yCAAyC,CACzC;;;IAIK,yBAAyB,GAAA;AAC/B,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;AACJ,YAAA,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CACpD,OAAO,CAAC,aAAa,CACrB;AAED,YAAA,MAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CACpD,CAAC,MAAM,EAAE,KAAK,MAAM;AACnB,gBAAA,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;AAC/C,gBAAA,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,KAAK,GAAG,CAAC;gBACnB,IAAI,EAAE,MAAM,CAAC;AACb,aAAA,CAAC,CACF;YAED,IAAI,CAAC,YAAY,CAAC,oBAAoB,CACrC,cAAc,EACd,KAAK,EACL,CAAC,CACD;AACF,SAAC,EACD,uCAAuC,EACvC,yCAAyC,CACzC;;;IAIK,sBAAsB,GAAA;AAC5B,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;AACJ,YAAA,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CACpD,OAAO,CAAC,aAAa,CACrB;AACD,YAAA,MAAM,YAAY,GACjB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CAAC,OAAO;AAEtD,YAAA,cAAc,CAAC,OAAO,CAAC,MAAM,IAAG;AAC/B,gBAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAG,CAAC;AACtD,gBAAA,MAAM,UAAU,GAAG,YAAY,CAAC,IAAI,CACnC,GAAG,IAAI,GAAG,CAAC,EAAE,KAAK,QAAQ,CAC1B;gBAED,IAAI,UAAU,EAAE;oBACd,MAAsB,CAAC,KAAK,CAAC,KAAK;AAClC,wBAAA,CAAA,EAAG,UAAU,CAAC,IAAI,CAAA,CAAA,CAAG;;AAExB,aAAC,CAAC;AACH,SAAC,EACD,sCAAsC,EACtC,sCAAsC,CACtC;;IAGK,yBAAyB,GAAA;AAC/B,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;AACJ,YAAA,MAAM,cAAc,GACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAC7B,OAAO,CAAC,aAAa,CACrB;AACF,YAAA,MAAM,cAAc,GAAG,IAAI,CAAC;AAC1B,iBAAA,QAAQ;AACR,iBAAA,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC;YAEvB,IAAI,CAAC,cAAc,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;AAC7C,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChB,MAAM,EACN,yCAAyC,EACzC,2CAA2C,EAC3C,CAAC,CACD;gBACD;;YAGD,MAAM,cAAc,GACnB,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,KAAK;YACjD,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CACzD,cAAc;AAEd,kBAAE;kBACA,KAAK;AAER,YAAA,cAAc,CAAC,OAAO,CAAC,MAAM,IAAG;AAC/B,gBAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAG,CAAC;AACtD,gBAAA,MAAM,WAAW,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,CAC5C,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ,CAChC;gBAED,IAAI,WAAW,EAAE;AAChB,oBAAA,MAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAC3C,WAAW,CAAC,GAAG,EACf,eAAe,CACf;AACD,oBAAA,MAAM,CAAC,KAAK,CAAC,eAAe,GAAG,UAAU;oBAEzC,MAAM,YAAY,GAAG,MAAM,CAAC,aAAa,CACxC,OAAO,CAAC,YAAY,CACA;AACrB,oBAAA,IAAI,YAAY;AAAE,wBAAA,YAAY,CAAC,KAAK,GAAG,UAAU;AAEjD,oBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChB,OAAO,EACP,CAAA,yBAAA,EAA4B,QAAQ,CAAA,EAAA,EAAK,UAAU,CAAE,CAAA,EACrD,2CAA2C,EAC3C,CAAC,CACD;;AAEH,aAAC,CAAC;AACH,SAAC,EACD,yCAAyC,EACzC,yCAAyC,CACzC;;IAGM,eAAe,CAAC,IAAY,EAAE,aAA0B,EAAA;AAC/D,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;AACJ,YAAA,SAAS,CAAC;AACR,iBAAA,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE;iBACrB,IAAI,CAAC,MAAK;AACV,gBAAA,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,CAAC;AAC1C,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChB,OAAO,EACP,CAAuB,oBAAA,EAAA,IAAI,EAAE,EAC7B,iCAAiC,EACjC,CAAC,CACD;AACD,gBAAA,UAAU,CACT,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EACvC,MAAM,CAAC,cAAc,CACrB;AACF,aAAC;iBACA,KAAK,CAAC,GAAG,IAAG;AACZ,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChB,OAAO,EACP,CAA+B,4BAAA,EAAA,GAAG,EAAE,EACpC,iCAAiC,EACjC,CAAC,CACD;AACF,aAAC,CAAC;AACJ,SAAC,EACD,6BAA6B,EAC7B,+BAA+B,CAC/B;;;IAIM,qBAAqB,GAAA;AAC5B,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;AACJ,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAClD,GAAG,CAAC,IAAI,CAAC,gBAAgB,CACzB;AACD,YAAA,IAAI,CAAC,gBAAgB;gBAAE;YAEvB,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CACpC,CAAC,aAA+B,KAAI;AACnC,gBAAA,aAAa,CAAC,OAAO,CAAC,QAAQ,IAAG;AAChC,oBAAA,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAG;wBAClC,IACC,IAAI,YAAY,WAAW;4BAC3B,IAAI,CAAC,SAAS,CAAC,QAAQ,CACtB,OAAO,CAAC,aAAa,CACrB,EACA;AACD,4BAAA,IACC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ;AACzB,iCAAA,gBAAgB,EACjB;gCACD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChB,MAAM,EACN,4DAA4D,EAC5D,uCAAuC,CACvC;gCACD;;4BAED,IAAI,CAAC,yBAAyB,EAAE;;AAElC,qBAAC,CAAC;AACH,iBAAC,CAAC;AACH,aAAC,CACD;AAED,YAAA,QAAQ,CAAC,OAAO,CAAC,gBAAgB,EAAE;AAClC,gBAAA,SAAS,EAAE,IAAI;AACf,gBAAA,OAAO,EAAE;AACT,aAAA,CAAC;AAEF,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChB,MAAM,EACN,4CAA4C,EAC5C,uCAAuC,EACvC,CAAC,CACD;AACF,SAAC,EACD,mCAAmC,EACnC,qCAAqC,CACrC;;IAGM,oBAAoB,CAC3B,SAA6B,EAC7B,UAAsB,EAAA;QAEtB,QACC,SAAS,CAAC,UAAsC,CAAC,IAAI,SAAS,CAAC,GAAG;;AAI5D,IAAA,sBAAsB,CAC7B,KAAY,EACZ,MAAmB,EACnB,QAAgB,EAAA;AAEhB,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;YACJ,MAAM,QAAQ,GACb,KAAK,CAAC,MACN,CAAC,KAAK,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC;gBAAE;AAEnD,YAAA,MAAM,CAAC,KAAK,CAAC,eAAe,GAAG,QAAQ;AAEvC,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAC5C,CAAA,YAAA,EAAe,QAAQ,CAAA,CAAE,CACE;AAC5B,YAAA,IAAI,UAAU;AAAE,gBAAA,UAAU,CAAC,KAAK,GAAG,QAAQ;AAE3C,YAAA,MAAM,eAAe,GAAG,QAAQ,CAC/B,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAC3B,EAAE,CACF;AACD,YAAA,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE;gBAC5B,IAAI,CAAC,YAAY,CAAC,sBAAsB,CACvC,eAAe,EACf,QAAQ,CACR;;AAEH,SAAC,EACD,qCAAqC,EACrC,sCAAsC,CACtC;;;IAIM,WAAW,GAAA;AAClB,QAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE;;AAGrB,IAAA,aAAa,CAAC,OAAoB,EAAA;AACzC,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;AACJ,YAAA,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,SAAS;AAC3C,YAAA,IAAI,CAAC,SAAS;gBAAE;YAEhB,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;AAClD,YAAA,IAAI,OAAO;gBAAE,OAAO,CAAC,MAAM,EAAE;AAE7B,YAAA,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS;AACjC,SAAC,EACD,0BAA0B,EAC1B,6BAA6B,CAC7B;;IAGM,WAAW,CAAC,OAAoB,EAAE,IAAY,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;AACJ,YAAA,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;YAE3B,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AAC7C,YAAA,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC;AAChC,YAAA,OAAO,CAAC,WAAW,GAAG,IAAI;AAC1B,YAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;AAElC,YAAA,MAAM,IAAI,GAAG,OAAO,CAAC,qBAAqB,EAAE;AAC5C,YAAA,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,CAAG,EAAA,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,IAAI;YACtD,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,CAAG,EAAA,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,GAAG,CAAC,IAAI;YAE/E,OAAO,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,EAAE;AACvC,SAAC,EACD,wBAAwB,EACxB,2BAA2B,CAC3B;;;IAIM,WAAW,CAAC,KAAiB,EAAE,MAAmB,EAAA;AACzD,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;AACJ,YAAA,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;gBACvD;AAED,YAAA,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO;AAC5B,YAAA,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW;AAErC,YAAA,MAAM,WAAW,GAAG,CAAC,SAAqB,KAAI;AAC7C,gBAAA,MAAM,IAAI,GAAG,SAAS,CAAC,OAAO,GAAG,MAAM;AACvC,gBAAA,MAAM,OAAO,GAAG,UAAU,GAAG,IAAI;AAEjC,gBAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAG,CAAC;gBACtD,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,QAAQ,EAAE,OAAO,CAAC;AAC1D,aAAC;YAED,MAAM,SAAS,GAAG,MAAK;AACtB,gBAAA,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAC;AACpD,gBAAA,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC;AAEhD,gBAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAG,CAAC;AACtD,gBAAA,MAAM,cAAc,GAAG,IAAI,CAAC;AAC1B,qBAAA,QAAQ;AACR,qBAAA,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAChC,GAAG,CAAC,EAAE,KAAK;sBACR,EAAE,GAAG,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,WAAW;sBAClC,GAAG,CACN;gBAEF,IAAI,CAAC,YAAY,CAAC,oBAAoB,CACrC,cAAc,EACd,KAAK,EACL,CAAC,CACD;AACF,aAAC;AAED,YAAA,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC;AACjD,YAAA,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC;AAC9C,SAAC,EACD,+BAA+B,EAC/B,2BAA2B,CAC3B;;AAGM,IAAA,gBAAgB,CAAC,MAAmB,EAAA;AAC3C,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;AACJ,YAAA,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO;AACtC,YAAA,IAAI,CAAC,OAAO;gBAAE;AACd,YAAA,MAAM,KAAK,GACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAiB,OAAO,CAAC;YACpD,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;AACxC,SAAC,EACD,8BAA8B,EAC9B,gCAAgC,CAChC;;;AAIM,IAAA,UAAU,CAAC,MAAmB,EAAA;AACrC,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CACjB,MAAK;YACJ,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAC5B,OAAO,CAAC,aAAa,CACC;AACvB,YAAA,IAAI,CAAC,MAAM;gBAAE;AAEb,YAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAG,CAAC;AACtD,YAAA,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,QAAQ,CAAC;AAC/C,SAAC,EACD,6BAA6B,EAC7B,0BAA0B,CAC1B;;AAEF;;;;"}