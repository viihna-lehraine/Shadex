{"version":3,"file":"PaletteEvents.js","sources":["../../../../src/events/PaletteEvents.ts"],"sourcesContent":["// events/PaleteEvents.ts\n\nimport {\n\tColorSpace,\n\tHelpers,\n\tPaletteEventsInterface,\n\tPaletteItem,\n\tServices,\n\tUtilities\n} from '../types/index.js';\nimport { EventManager } from './EventManager.js';\nimport { PaletteManager } from '../palette/PaletteManager.js';\nimport { PaletteState } from '../state/PaletteState.js';\nimport { StateManager } from '../state/StateManager.js';\nimport { domConfig, domIndex } from '../config/index.js';\n\nconst caller = 'PaletteEvents';\nconst classes = domIndex.classes;\nconst ids = domIndex.ids;\n\nexport class PaletteEvents implements PaletteEventsInterface {\n\t#draggedColumn: HTMLElement | null = null;\n\n\t#errors: Services['errors'];\n\n\tconstructor(\n\t\tprivate helpers: Helpers,\n\t\tprivate paletteManager: PaletteManager,\n\t\tprivate paletteState: PaletteState,\n\t\tprivate services: Services,\n\t\tprivate stateManager: StateManager,\n\t\tprivate utils: Utilities\n\t) {\n\t\ttry {\n\t\t\tservices.log(`Constructing PaletteEvents instance`, {\n\t\t\t\tcaller: `${caller} constructor`\n\t\t\t});\n\n\t\t\tthis.#errors = services.errors;\n\t\t} catch (error) {\n\t\t\tthrow new Error(\n\t\t\t\t`[${caller} constructor]: ${error instanceof Error ? error.message : error}`\n\t\t\t);\n\t\t}\n\t}\n\n\tinit() {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst paletteContainer = this.helpers.dom.getElement(\n\t\t\t\tids.divs.paletteContainer\n\t\t\t);\n\n\t\t\tif (!paletteContainer) return;\n\n\t\t\tthis.stateManager.setOnStateLoad(() => {\n\t\t\t\tthis.initializeColumnPositions();\n\t\t\t});\n\n\t\t\t// delegated event listener for color input changes\n\t\t\tEventManager.add(paletteContainer, 'input', event => {\n\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\tif (target.matches(classes.colorDisplay)) {\n\t\t\t\t\tconst column = target.closest(\n\t\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t\t) as HTMLElement;\n\t\t\t\t\tconst columnID = column?.id.split('-').pop();\n\n\t\t\t\t\tif (!column || !columnID) return;\n\n\t\t\t\t\tthis.#handleColorInputChange(event, column, columnID);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// delegated lock button event listener\n\t\t\tEventManager.add(paletteContainer, 'click', event => {\n\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\tif (target.matches(classes.lockBtn)) {\n\t\t\t\t\tthis.#toggleLock(target);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// delegated event listener for modals (open/close)\n\t\t\tEventManager.add(paletteContainer, 'click', event => {\n\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\tif (target.matches(classes.colorInputBtn)) {\n\t\t\t\t\tthis.#toggleColorModal(target);\n\t\t\t\t} else if (target.matches(classes.colorInputModal)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.target !==\n\t\t\t\t\t\ttarget.querySelector(classes.colorInputBtn)\n\t\t\t\t\t) {\n\t\t\t\t\t\ttarget.classList.add(classes.hidden);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// delegated event listener for resizing columns\n\t\t\tEventManager.add(paletteContainer, 'mousedown', ((\n\t\t\t\tevent: MouseEvent\n\t\t\t) => {\n\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\tif (target.matches(classes.resizeHandle)) {\n\t\t\t\t\tthis.#startResize(\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\ttarget.closest(classes.paletteColumn) as HTMLElement\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}) as EventListener);\n\n\t\t\t// delegated event listener for tooltips (1)\n\t\t\tEventManager.add(paletteContainer, 'mouseover', event => {\n\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\tif (target.matches(classes.tooltipTrigger)) {\n\t\t\t\t\tconst tooltipText = target.dataset.tooltip;\n\n\t\t\t\t\tif (tooltipText) {\n\t\t\t\t\t\tthis.#showTooltip(target, tooltipText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// delegated event listener for tooltips (2)\n\t\t\tEventManager.add(paletteContainer, 'mouseout', event => {\n\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\tif (target.matches(classes.tooltipTrigger)) {\n\t\t\t\t\tthis.#hideTooltip();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// observe for new elements\n\t\t\tthis.#createPaletteObserver();\n\t\t}, `[${caller}]: Failed to call init()`);\n\t}\n\n\tattachColorCopyHandlers(): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst paletteContainer = this.helpers.dom.getElement(\n\t\t\t\tids.divs.paletteContainer\n\t\t\t);\n\t\t\tif (!paletteContainer) return;\n\n\t\t\tEventManager.add(paletteContainer, 'click', event => {\n\t\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\t\tif (target.matches(classes.colorDisplay))\n\t\t\t\t\tthis.#copyToClipboard(target.value, target);\n\t\t\t});\n\t\t}, `[${caller}]: Failed to attach color copy handlers.`);\n\t}\n\n\tasync attachDragAndDropHandlers(): Promise<void> {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst paletteContainer = this.helpers.dom.getElement(\n\t\t\t\tids.divs.paletteContainer\n\t\t\t);\n\n\t\t\tif (!paletteContainer) {\n\t\t\t\tthis.services.log(\n\t\t\t\t\t`Palette container not found! Cannot attach drag-and-drop handlers.`,\n\t\t\t\t\t{\n\t\t\t\t\t\tcaller: `${caller}.attachDragAndDropHandlers`,\n\t\t\t\t\t\tlevel: 'warn'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// drag start\n\t\t\tEventManager.add(paletteContainer, 'dragstart', ((\n\t\t\t\tevent: DragEvent\n\t\t\t) => {\n\t\t\t\tconst dragHandle = (event.target as HTMLElement).closest(\n\t\t\t\t\tclasses.dragHandle\n\t\t\t\t) as HTMLElement;\n\n\t\t\t\tif (!dragHandle) return;\n\n\t\t\t\tthis.#draggedColumn = dragHandle.closest(\n\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t) as HTMLElement;\n\n\t\t\t\tif (!this.#draggedColumn) return;\n\n\t\t\t\tevent.dataTransfer?.setData(\n\t\t\t\t\t'text/plain',\n\t\t\t\t\tthis.#draggedColumn.id\n\t\t\t\t);\n\n\t\t\t\tthis.#draggedColumn.classList.add('dragging');\n\n\t\t\t\tthis.services.log(\n\t\t\t\t\t`Drag started for column: ${this.#draggedColumn.id}`,\n\t\t\t\t\t{\n\t\t\t\t\t\tcaller: `${caller}.attachDragAndDropHandlers`,\n\t\t\t\t\t\tlevel: 'debug'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}) as EventListener);\n\n\t\t\t// drag over (Allow dropping)\n\t\t\tEventManager.add(paletteContainer, 'dragover', ((\n\t\t\t\tevent: DragEvent\n\t\t\t) => {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif (event.dataTransfer) event.dataTransfer.dropEffect = 'move';\n\t\t\t}) as EventListener);\n\n\t\t\t// drop - handles dropping columns and updates positions atomically\n\t\t\tEventManager.add(paletteContainer, 'drop', (event: Event) => {\n\t\t\t\t// call inside a non-async wrapper\n\t\t\t\tvoid (async (dragEvent: DragEvent) => {\n\t\t\t\t\tdragEvent.preventDefault();\n\n\t\t\t\t\tconst targetColumn = (\n\t\t\t\t\t\tdragEvent.target as HTMLElement\n\t\t\t\t\t).closest(classes.paletteColumn) as HTMLElement;\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.#draggedColumn ||\n\t\t\t\t\t\t!targetColumn ||\n\t\t\t\t\t\tthis.#draggedColumn === targetColumn\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tconst draggedID = parseInt(\n\t\t\t\t\t\tthis.#draggedColumn.id.split('-').pop()!\n\t\t\t\t\t);\n\t\t\t\t\tconst targetID = parseInt(\n\t\t\t\t\t\ttargetColumn.id.split('-').pop()!\n\t\t\t\t\t);\n\n\t\t\t\t\tawait this.stateManager.batchUpdate(state => {\n\t\t\t\t\t\tconst updatedColumns = [\n\t\t\t\t\t\t\t...state.paletteContainer.columns\n\t\t\t\t\t\t];\n\t\t\t\t\t\tconst draggedIndex = updatedColumns.findIndex(\n\t\t\t\t\t\t\tcol => col.id === draggedID\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst targetIndex = updatedColumns.findIndex(\n\t\t\t\t\t\t\tcol => col.id === targetID\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (draggedIndex !== -1 && targetIndex !== -1) {\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tupdatedColumns[draggedIndex].position,\n\t\t\t\t\t\t\t\tupdatedColumns[targetIndex].position\n\t\t\t\t\t\t\t] = [\n\t\t\t\t\t\t\t\tupdatedColumns[targetIndex].position,\n\t\t\t\t\t\t\t\tupdatedColumns[draggedIndex].position\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tpaletteContainer: {\n\t\t\t\t\t\t\t\t...state.paletteContainer,\n\t\t\t\t\t\t\t\tcolumns: updatedColumns\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.#draggedColumn.classList.remove('dragging');\n\n\t\t\t\t\tthis.services.log(\n\t\t\t\t\t\t`Swapped columns: ${draggedID} and ${targetID}`,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcaller: `${caller}.attachDragAndDropHandlers`,\n\t\t\t\t\t\t\tlevel: 'debug'\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.#draggedColumn = null;\n\t\t\t\t})(event as DragEvent);\n\t\t\t});\n\n\t\t\t// drag end\n\t\t\tEventManager.add(paletteContainer, 'dragend', () => {\n\t\t\t\tif (this.#draggedColumn) {\n\t\t\t\t\tthis.#draggedColumn.classList.remove('dragging');\n\n\t\t\t\t\tthis.services.log('Drag ended for column.', {\n\t\t\t\t\t\tcaller: `${caller}.attachDragAndDropHandlers`,\n\t\t\t\t\t\tlevel: 'debug'\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.#draggedColumn = null;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.services.log(`Drag and drop event listeners attached`, {\n\t\t\t\tcaller: `${caller}.attachDragAndDropHandlers`,\n\t\t\t\tlevel: 'debug'\n\t\t\t});\n\t\t}, `[${caller}]: Failed to attach drag-and-drop handlers`);\n\t}\n\n\t// initialiezs column positions on page load\n\tasync initializeColumnPositions(): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tconst paletteColumns = this.helpers.dom.getAllElements(\n\t\t\t\tclasses.paletteColumn\n\t\t\t);\n\n\t\t\t// create updated column data based on DOM elements\n\t\t\tconst updatedColumns = Array.from(paletteColumns).map(\n\t\t\t\t(column, index) => ({\n\t\t\t\t\tid: parseInt(column.id.split('-').pop() || '0'),\n\t\t\t\t\tisLocked: false,\n\t\t\t\t\tposition: index + 1,\n\t\t\t\t\tsize: column.offsetWidth\n\t\t\t\t})\n\t\t\t);\n\n\t\t\t// atomically update state using batchUpdate\n\t\t\tawait this.stateManager.batchUpdate(state => ({\n\t\t\t\tpaletteContainer: {\n\t\t\t\t\t...state.paletteContainer,\n\t\t\t\t\tcolumns: updatedColumns\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis.services.log('Initialized column positions.', {\n\t\t\t\tcaller: `${caller}.initializeColumnPositions`,\n\t\t\t\tlevel: 'debug'\n\t\t\t});\n\t\t}, `[${caller}]: Failed to initialize column positions.`);\n\t}\n\n\t// renders column sizes based on stored state\n\tasync renderColumnSizeChange(): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tconst paletteColumns = this.helpers.dom.getAllElements(\n\t\t\t\tclasses.paletteColumn\n\t\t\t);\n\n\t\t\t// safely retrieve the latest state\n\t\t\tconst { paletteContainer } = await this.stateManager.getState();\n\n\t\t\t// update DOM based on state\n\t\t\tpaletteColumns.forEach(column => {\n\t\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\t\t\t\tconst columnData = paletteContainer.columns.find(\n\t\t\t\t\tcol => col.id === columnID\n\t\t\t\t);\n\n\t\t\t\tif (columnData) {\n\t\t\t\t\t(column as HTMLElement).style.width = `${columnData.size}%`;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.services.log('Rendered column size changes.', {\n\t\t\t\tcaller: `${caller}.renderColumnSizeChange`,\n\t\t\t\tlevel: 'debug'\n\t\t\t});\n\t\t}, `[${caller}]: Failed to render column size changes.`);\n\t}\n\n\tasync syncColumnColorsWithState(): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tconst paletteColumns =\n\t\t\t\tthis.helpers.dom.getAllElements<HTMLDivElement>(\n\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t);\n\n\t\t\t// retrieve the most recent palette from state\n\t\t\tconst { paletteHistory } = await this.stateManager.getState();\n\t\t\tconst currentPalette = paletteHistory.at(-1);\n\n\t\t\tif (!currentPalette?.items) {\n\t\t\t\tthis.services.log('No valid palette data found in history!', {\n\t\t\t\t\tcaller: `${caller}.syncColumnColorsWithState`,\n\t\t\t\t\tlevel: 'warn'\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userPreference =\n\t\t\t\tlocalStorage.getItem('colorPreference') || 'hex';\n\t\t\tconst validColorSpace = this.helpers.typeguards.isColorSpace(\n\t\t\t\tuserPreference\n\t\t\t)\n\t\t\t\t? userPreference\n\t\t\t\t: 'hex';\n\n\t\t\t// update each column's color based on state\n\t\t\tpaletteColumns.forEach(column => {\n\t\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\t\t\t\tconst paletteItem = currentPalette.items.find(\n\t\t\t\t\titem => item.itemID === columnID\n\t\t\t\t);\n\n\t\t\t\tif (paletteItem) {\n\t\t\t\t\tconst colorValue = this.#getColorByPreference(\n\t\t\t\t\t\tpaletteItem.css,\n\t\t\t\t\t\tvalidColorSpace\n\t\t\t\t\t);\n\t\t\t\t\tcolumn.style.backgroundColor = colorValue;\n\n\t\t\t\t\tconst colorDisplay = column.querySelector(\n\t\t\t\t\t\tclasses.colorDisplay\n\t\t\t\t\t) as HTMLInputElement;\n\t\t\t\t\tif (colorDisplay) colorDisplay.value = colorValue;\n\n\t\t\t\t\tthis.services.log(\n\t\t\t\t\t\t`Updated color for column ${columnID}: ${colorValue}`,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcaller: `${caller}.syncColumnColorsWithState`,\n\t\t\t\t\t\t\tlevel: 'debug'\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}, `[${caller}]: Failed to sync column colors with state.`);\n\t}\n\n\t#copyToClipboard(text: string, targetElement: HTMLElement): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tnavigator.clipboard\n\t\t\t\t.writeText(text.trim())\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.#showTooltip(targetElement, 'Copied!');\n\t\t\t\t\tthis.services.log(`Copied color value: ${text}`, {\n\t\t\t\t\t\tcaller: `${caller}.#copyToClipboard`,\n\t\t\t\t\t\tlevel: 'debug'\n\t\t\t\t\t});\n\n\t\t\t\t\tsetTimeout(\n\t\t\t\t\t\t() => this.#removeTooltip(targetElement),\n\t\t\t\t\t\tdomConfig.tooltipFadeOut\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tthis.services.log(`Error copying to clipboard: ${err}`, {\n\t\t\t\t\t\tcaller: `${caller}.#copyToClipboard`,\n\t\t\t\t\t\tlevel: 'error'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}, `[${caller}]: Failed to copy to clipboard.`);\n\t}\n\n\t// observes palette container for new elements\n\tasync #createPaletteObserver(): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tconst paletteContainer = this.helpers.dom.getElement(\n\t\t\t\tids.divs.paletteContainer\n\t\t\t);\n\t\t\tif (!paletteContainer) return;\n\n\t\t\tconst observer = new MutationObserver(\n\t\t\t\t(mutationsList: MutationRecord[]) => {\n\t\t\t\t\t// TODO: figure out what the hell is going on here\n\t\t\t\t\tvoid (async () => {\n\t\t\t\t\t\tfor (const mutation of mutationsList) {\n\t\t\t\t\t\t\tfor (const node of mutation.addedNodes) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tnode instanceof HTMLElement &&\n\t\t\t\t\t\t\t\t\tnode.classList.contains(\n\t\t\t\t\t\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tconst state =\n\t\t\t\t\t\t\t\t\t\tawait this.stateManager.getState();\n\n\t\t\t\t\t\t\t\t\tif (!state.paletteContainer) {\n\t\t\t\t\t\t\t\t\t\tthis.services.log(\n\t\t\t\t\t\t\t\t\t\t\t'Skipping execution of initializeColumnPositions - State is not ready!',\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcaller: `${caller}.createPaletteObserver`,\n\t\t\t\t\t\t\t\t\t\t\t\tlevel: 'warn'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tthis.initializeColumnPositions();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tobserver.observe(paletteContainer, {\n\t\t\t\tchildList: true,\n\t\t\t\tsubtree: true\n\t\t\t});\n\n\t\t\tthis.services.log('Palette Container MutationObserver created.', {\n\t\t\t\tcaller: `${caller}.createPaletteObserver`\n\t\t\t});\n\t\t}, `[${caller}]: Failed to create palette observer.`);\n\t}\n\n\t#getColorByPreference(\n\t\tcolorData: PaletteItem['css'],\n\t\tpreference: ColorSpace\n\t): string {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\treturn (\n\t\t\t\tcolorData[preference as keyof PaletteItem['css']] ||\n\t\t\t\tcolorData.hex\n\t\t\t);\n\t\t}, `[${caller}]: Failed to retrieve color by preference.`);\n\t}\n\n\t#handleColorInputChange(\n\t\tevent: Event,\n\t\tcolumn: HTMLElement,\n\t\tcolumnID: string\n\t): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst newColor = (event.target as HTMLInputElement).value.trim();\n\t\t\tif (!this.utils.validate.userColorInput(newColor)) return;\n\n\t\t\tcolumn.style.backgroundColor = newColor;\n\n\t\t\tconst colorInput = this.helpers.dom.getElement(\n\t\t\t\t`color-input-${columnID}`\n\t\t\t) as HTMLInputElement | null;\n\t\t\tif (colorInput) colorInput.value = newColor;\n\n\t\t\tconst numericColumnID = parseInt(columnID.replace(/\\D/g, ''), 10);\n\t\t\tif (!isNaN(numericColumnID)) {\n\t\t\t\tthis.paletteState.updatePaletteItemColor(\n\t\t\t\t\tnumericColumnID,\n\t\t\t\t\tnewColor\n\t\t\t\t);\n\t\t\t}\n\t\t}, `[${caller}]: Failed to handle color input change.`);\n\t}\n\n\t// hides tooltip for a given element\n\t#hideTooltip(): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tthis.utils.dom.hideTooltip();\n\t\t}, `[${caller}]: Failed to hide tooltip.`);\n\t}\n\n\t#removeTooltip(element: HTMLElement): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst tooltipId = element.dataset.tooltipId;\n\t\t\tif (!tooltipId) return;\n\n\t\t\tconst tooltip = document.getElementById(tooltipId);\n\t\t\tif (tooltip) tooltip.remove();\n\n\t\t\tdelete element.dataset.tooltipId;\n\t\t}, `[${caller}]: Failed to remove tooltip.`);\n\t}\n\n\t#showTooltip(element: HTMLElement, text: string): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tthis.#removeTooltip(element);\n\n\t\t\tconst tooltip = document.createElement('div');\n\t\t\ttooltip.classList.add('tooltip');\n\t\t\ttooltip.textContent = text;\n\t\t\tdocument.body.appendChild(tooltip);\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\t\t\ttooltip.style.left = `${rect.left + window.scrollX}px`;\n\t\t\ttooltip.style.top = `${rect.top + window.scrollY - tooltip.offsetHeight - 5}px`;\n\n\t\t\telement.dataset.tooltipId = tooltip.id;\n\t\t}, `[${caller}]: Failed to show tooltip.`);\n\t}\n\n\t// handles resizing of palette columns\n\tasync #startResize(event: MouseEvent, column: HTMLElement): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tif (!column || column.classList.contains(classes.locked)) return;\n\n\t\t\tconst startX = event.clientX;\n\t\t\tconst startWidth = column.offsetWidth;\n\n\t\t\t// update column size dynamically as user drags\n\t\t\tconst onMouseMove = (moveEvent: MouseEvent) => {\n\t\t\t\tconst diff = moveEvent.clientX - startX;\n\t\t\t\tconst newSize = startWidth + diff;\n\t\t\t\tcolumn.style.width = `${newSize}px`; // live feedback while resizing\n\t\t\t};\n\n\t\t\t// finalize size on mouse release and update state atomically\n\t\t\tconst onMouseUp = async () => {\n\t\t\t\twindow.removeEventListener('mousemove', onMouseMove);\n\t\t\t\twindow.removeEventListener('mouseup', onMouseUp);\n\n\t\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\n\t\t\t\tawait this.stateManager.batchUpdate(state => ({\n\t\t\t\t\tpaletteContainer: {\n\t\t\t\t\t\t...state.paletteContainer,\n\t\t\t\t\t\tcolumns: state.paletteContainer.columns.map(col =>\n\t\t\t\t\t\t\tcol.id === columnID\n\t\t\t\t\t\t\t\t? { ...col, size: column.offsetWidth }\n\t\t\t\t\t\t\t\t: col\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis.services.log(\n\t\t\t\t\t`Resized column ${columnID} to ${column.offsetWidth}px`,\n\t\t\t\t\t{\n\t\t\t\t\t\tcaller: `${caller}.#startResize`,\n\t\t\t\t\t\tlevel: 'debug'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t};\n\n\t\t\twindow.addEventListener('mousemove', onMouseMove);\n\t\t\twindow.addEventListener('mouseup', onMouseUp);\n\t\t}, `[${caller}]: Failed to start column resize.`);\n\t}\n\n\t#toggleColorModal(button: HTMLElement): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst modalID = button.dataset.modalID;\n\n\t\t\tif (!modalID) return;\n\n\t\t\tconst modal = this.helpers.dom.getElement<HTMLDivElement>(modalID);\n\n\t\t\tmodal?.classList.toggle(classes.hidden);\n\t\t}, `[${caller}]: Failed to toggle color modal.`);\n\t}\n\n\t// toggles lock state of a palette column\n\t#toggleLock(button: HTMLElement): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst column = button.closest(\n\t\t\t\tclasses.paletteColumn\n\t\t\t) as HTMLElement | null;\n\n\t\t\tif (!column) return;\n\n\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\n\t\t\tthis.paletteManager.handleColumnLock(columnID);\n\t\t}, `[${caller}]: Failed to toggle lock state.`);\n\t}\n}\n"],"names":[],"mappings":"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"}