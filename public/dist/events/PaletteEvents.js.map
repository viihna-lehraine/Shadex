{"version":3,"file":"PaletteEvents.js","sources":["../../../../src/events/PaletteEvents.ts"],"sourcesContent":["// events/PaleteEvents.js\n\nimport { ServicesInterface, UtilitiesInterface } from '../types/index.js';\nimport { EventManager } from './EventManager.js';\nimport { PaletteState } from '../state/PaletteState.js';\nimport { StateManager } from '../state/StateManager.js';\nimport { constsData as consts } from '../data/consts.js';\nimport { domData } from '../data/dom.js';\n\nconst classes = domData.classes;\nconst ids = domData.ids;\nconst timers = consts.timers;\n\nexport class PaletteEvents {\n\tprivate draggedColumn: HTMLElement | null = null;\n\n\tconstructor(\n\t\tprivate paletteState: PaletteState,\n\t\tprivate services: ServicesInterface,\n\t\tprivate stateManager: StateManager,\n\t\tprivate utils: UtilitiesInterface\n\t) {}\n\n\tpublic init() {\n\t\tconst paletteContainer = this.utils.core.getElement(\n\t\t\tids.divs.paletteContainer\n\t\t);\n\n\t\tif (!paletteContainer) return;\n\n\t\t// delegated event listener for color input changes\n\t\tEventManager.add(paletteContainer, 'input', event => {\n\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\tif (target.matches(domData.classes.colorDisplay)) {\n\t\t\t\tconst column = target.closest(\n\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t) as HTMLElement;\n\t\t\t\tconst columnID = column?.id.split('-').pop();\n\n\t\t\t\tif (!column || !columnID) return;\n\n\t\t\t\tthis.handleColorInputChange(event, column, columnID);\n\t\t\t}\n\t\t});\n\n\t\t// delegated lock button event listener\n\t\tEventManager.add(paletteContainer, 'click', event => {\n\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\tif (target.matches(classes.lockBtn)) {\n\t\t\t\tthis.toggleLock(target);\n\t\t\t}\n\t\t});\n\n\t\t// delegated event listener for modals (open/close)\n\t\tEventManager.add(paletteContainer, 'click', event => {\n\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\tif (target.matches(classes.colorInputBtn)) {\n\t\t\t\tthis.toggleColorModal(target);\n\t\t\t} else if (target.matches(classes.colorInputModal)) {\n\t\t\t\tif (\n\t\t\t\t\tevent.target !== target.querySelector(classes.colorInputBtn)\n\t\t\t\t) {\n\t\t\t\t\ttarget.classList.add(classes.hidden);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// delegated event listener for resizing columns\n\t\tEventManager.add(paletteContainer, 'mousedown', ((\n\t\t\tevent: MouseEvent\n\t\t) => {\n\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\tif (target.matches(classes.resizeHandle)) {\n\t\t\t\tthis.startResize(\n\t\t\t\t\tevent,\n\t\t\t\t\ttarget.closest(classes.paletteColumn) as HTMLElement\n\t\t\t\t);\n\t\t\t}\n\t\t}) as EventListener);\n\n\t\t// delegated event listener for tooltips (1)\n\t\tEventManager.add(paletteContainer, 'mouseover', event => {\n\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\tif (target.matches(classes.tooltipTrigger)) {\n\t\t\t\tconst tooltipText = target.dataset.tooltip;\n\n\t\t\t\tif (tooltipText) {\n\t\t\t\t\tthis.showTooltip(target, tooltipText);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// delegated event listener for tooltips (2)\n\t\tEventManager.add(paletteContainer, 'mouseout', event => {\n\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\tif (target.matches(classes.tooltipTrigger)) {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t});\n\n\t\t// observe for new elements\n\t\tthis.createPaletteObserver();\n\n\t\t// automatically initialize column positions\n\t\tthis.initializeColumnPositions();\n\t}\n\n\tpublic attachColorCopyHandlers(): void {\n\t\tconst paletteContainer = this.utils.core.getElement(\n\t\t\tids.divs.paletteContainer\n\t\t);\n\n\t\tif (!paletteContainer) return;\n\n\t\tEventManager.add(paletteContainer, 'click', ((event: MouseEvent) => {\n\t\t\tconst target = event.target as HTMLInputElement;\n\n\t\t\tif (!target.matches(classes.colorDisplay)) return;\n\n\t\t\tthis.copyToClipboard(target.value, target);\n\t\t}) as EventListener);\n\t}\n\n\tpublic attachDragAndDropHandlers(): void {\n\t\tconst paletteContainer = this.utils.core.getElement(\n\t\t\tids.divs.paletteContainer\n\t\t);\n\n\t\tif (!paletteContainer) {\n\t\t\tthis.services.app.log(\n\t\t\t\t'error',\n\t\t\t\t`Palette container not found! Cannot attach drag-and-drop handlers.`,\n\t\t\t\t'PaletteEvents.attachDragAndDropHandlers()',\n\t\t\t\t1\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\t// drag start\n\t\tEventManager.add(paletteContainer, 'dragstart', ((event: DragEvent) => {\n\t\t\tconst dragHandle = (event.target as HTMLElement).closest(\n\t\t\t\tdomData.classes.dragHandle\n\t\t\t) as HTMLElement;\n\t\t\tif (!dragHandle) return;\n\n\t\t\tthis.draggedColumn = dragHandle.closest(\n\t\t\t\tdomData.classes.paletteColumn\n\t\t\t) as HTMLElement;\n\t\t\tif (!this.draggedColumn) return;\n\n\t\t\tevent.dataTransfer?.setData('text/plain', this.draggedColumn.id);\n\t\t\tthis.draggedColumn.classList.add('dragging');\n\t\t\tthis.services.app.log(\n\t\t\t\t'debug',\n\t\t\t\t`Drag started for column: ${this.draggedColumn.id}`,\n\t\t\t\t'PaletteEvents.attachDragAndDropHandlers()',\n\t\t\t\t4\n\t\t\t);\n\t\t}) as EventListener);\n\n\t\t// drag over (Allow dropping)\n\t\tEventManager.add(paletteContainer, 'dragover', ((event: DragEvent) => {\n\t\t\tevent.preventDefault();\n\t\t\tevent.dataTransfer!.dropEffect = 'move';\n\t\t}) as EventListener);\n\n\t\t// drop (Swap columns)\n\t\tEventManager.add(paletteContainer, 'drop', ((event: DragEvent) => {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst targetColumn = (event.target as HTMLElement).closest(\n\t\t\t\tdomData.classes.paletteColumn\n\t\t\t) as HTMLElement;\n\t\t\tif (\n\t\t\t\t!this.draggedColumn ||\n\t\t\t\t!targetColumn ||\n\t\t\t\tthis.draggedColumn === targetColumn\n\t\t\t)\n\t\t\t\treturn;\n\n\t\t\tconst parent = targetColumn.parentElement;\n\t\t\tif (!parent) return;\n\n\t\t\t// swap columns in the DOM\n\t\t\tconst draggedNext = this.draggedColumn.nextElementSibling;\n\t\t\tconst targetNext = targetColumn.nextElementSibling;\n\t\t\tparent.insertBefore(this.draggedColumn, targetNext);\n\t\t\tparent.insertBefore(targetColumn, draggedNext);\n\n\t\t\t// swap positions in State\n\t\t\tconst updatedColumns = [\n\t\t\t\t...this.stateManager.getState().paletteContainer.columns\n\t\t\t];\n\t\t\tconst draggedIndex = updatedColumns.findIndex(\n\t\t\t\tcol =>\n\t\t\t\t\tcol.id ===\n\t\t\t\t\tparseInt(this.draggedColumn!.id.split('-').pop() || '0')\n\t\t\t);\n\t\t\tconst targetIndex = updatedColumns.findIndex(\n\t\t\t\tcol =>\n\t\t\t\t\tcol.id === parseInt(targetColumn.id.split('-').pop() || '0')\n\t\t\t);\n\n\t\t\tif (draggedIndex !== -1 && targetIndex !== -1) {\n\t\t\t\t[\n\t\t\t\t\tupdatedColumns[draggedIndex].position,\n\t\t\t\t\tupdatedColumns[targetIndex].position\n\t\t\t\t] = [\n\t\t\t\t\tupdatedColumns[targetIndex].position,\n\t\t\t\t\tupdatedColumns[draggedIndex].position\n\t\t\t\t];\n\n\t\t\t\tthis.stateManager.updatePaletteColumns(\n\t\t\t\t\tupdatedColumns,\n\t\t\t\t\tfalse,\n\t\t\t\t\t5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.draggedColumn.classList.remove('dragging');\n\t\t\tthis.services.app.log(\n\t\t\t\t'debug',\n\t\t\t\t`Successfully swapped columns: ${this.draggedColumn.id} and ${targetColumn.id}`,\n\t\t\t\t'PaletteEvents.attachDragAndDropHandlers()',\n\t\t\t\t4\n\t\t\t);\n\n\t\t\tthis.draggedColumn = null;\n\t\t}) as EventListener);\n\n\t\t// drag end\n\t\tEventManager.add(paletteContainer, 'dragend', () => {\n\t\t\tif (this.draggedColumn) {\n\t\t\t\tthis.draggedColumn.classList.remove('dragging');\n\t\t\t\tthis.services.app.log(\n\t\t\t\t\t'debug',\n\t\t\t\t\t`Drag ended for column.`,\n\t\t\t\t\t'PaletteEvents.attachDnDHandlers()',\n\t\t\t\t\t4\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\t// initialiezs column positions on page load\n\tpublic initializeColumnPositions(): void {\n\t\tconst paletteColumns = this.utils.core.getAllElements(\n\t\t\tclasses.paletteColumn\n\t\t);\n\n\t\tconst updatedColumns = Array.from(paletteColumns).map(\n\t\t\t(column, index) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: parseInt(column.id.split('-').pop() || '0'),\n\t\t\t\t\tisLocked: false,\n\t\t\t\t\tposition: index + 1,\n\t\t\t\t\tsize: column.offsetWidth\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.stateManager.updatePaletteColumns(updatedColumns, false, 4);\n\t}\n\n\t// renders column sizes based on stored state\n\tpublic renderColumnSizeChange(): void {\n\t\tconst paletteColumns = this.utils.core.getAllElements(\n\t\t\tclasses.paletteColumn\n\t\t);\n\t\tconst columnsState =\n\t\t\tthis.stateManager.getState().paletteContainer.columns;\n\n\t\tpaletteColumns.forEach(column => {\n\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\t\t\tconst columnData = columnsState.find(col => col.id === columnID);\n\n\t\t\tif (columnData) {\n\t\t\t\t(column as HTMLElement).style.width = `${columnData.size}%`;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate copyToClipboard(text: string, targetElement: HTMLElement): void {\n\t\tnavigator.clipboard\n\t\t\t.writeText(text.trim())\n\t\t\t.then(() => {\n\t\t\t\t// show tooltip with \"Copied!\" message\n\t\t\t\tthis.showTooltip(targetElement, 'Copied!');\n\n\t\t\t\tthis.services.app.log(\n\t\t\t\t\t'debug',\n\t\t\t\t\t`Copied color value: ${text}`,\n\t\t\t\t\t'PaletteEvents.copyToClipboard()',\n\t\t\t\t\t4\n\t\t\t\t);\n\n\t\t\t\t// ensure tooltip is removed after the timeout\n\t\t\t\tsetTimeout(\n\t\t\t\t\t() => this.removeTooltip(targetElement),\n\t\t\t\t\ttimers.tooltipFadeOut\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tthis.services.app.log(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Error copying to clipboard: ${err}`,\n\t\t\t\t\t'PaletteEvents.copyToClipboard()',\n\t\t\t\t\t1\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\t// observes palette container for new elements\n\tprivate createPaletteObserver(): void {\n\t\tconst paletteContainer = this.utils.core.getElement(\n\t\t\tdomData.ids.divs.paletteContainer\n\t\t);\n\t\tif (!paletteContainer) return;\n\n\t\tconst observer = new MutationObserver(\n\t\t\t(mutationsList: MutationRecord[]) => {\n\t\t\t\tmutationsList.forEach(mutation => {\n\t\t\t\t\tmutation.addedNodes.forEach(node => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tnode instanceof HTMLElement &&\n\t\t\t\t\t\t\tnode.classList.contains(\n\t\t\t\t\t\t\t\tdomData.classes.paletteColumn\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.initializeColumnPositions();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\n\t\tobserver.observe(paletteContainer, { childList: true, subtree: true });\n\t\tthis.services.app.log(\n\t\t\t'info',\n\t\t\t'Palette Container MutationObserver created',\n\t\t\t'PaletteEvents.createPaletteObserver()',\n\t\t\t2\n\t\t);\n\t}\n\n\t// handles color changes in palette columns\n\tprivate handleColorInputChange(\n\t\tevent: Event,\n\t\tcolumn: HTMLElement,\n\t\tcolumnID: string\n\t): void {\n\t\tconst newColor = (event.target as HTMLInputElement).value.trim();\n\t\tif (!this.utils.validate.userColorInput(newColor)) return;\n\n\t\tcolumn.style.backgroundColor = newColor;\n\n\t\tconst colorInput = this.utils.core.getElement(\n\t\t\t`color-input-${columnID}`\n\t\t) as HTMLInputElement | null;\n\t\tif (colorInput) colorInput.value = newColor;\n\n\t\t// extract numeric ID from columnID\n\t\tconst numericColumnID = parseInt(columnID.replace(/\\D/g, ''), 10);\n\t\tif (isNaN(numericColumnID)) return;\n\n\t\tthis.paletteState.updatePaletteItemColor(numericColumnID, newColor);\n\t}\n\n\t// hides tooltip for a given element\n\tprivate hideTooltip(): void {\n\t\tthis.utils.dom.hideTooltip();\n\t}\n\n\tprivate removeTooltip(element: HTMLElement): void {\n\t\tconst tooltipId = element.dataset.tooltipId;\n\t\tif (!tooltipId) return;\n\n\t\tconst tooltip = document.getElementById(tooltipId);\n\t\tif (tooltip) tooltip.remove();\n\n\t\t// cleanup\n\t\tdelete element.dataset.tooltipId;\n\t}\n\n\t// displays tooltip for a given element\n\tprivate showTooltip(element: HTMLElement, text: string): void {\n\t\t// if tooltip already exists on this element, remove it\n\t\tthis.removeTooltip(element);\n\n\t\t// create tooltip element\n\t\tconst tooltip = document.createElement('div');\n\t\ttooltip.classList.add('tooltip');\n\t\ttooltip.textContent = text;\n\t\tdocument.body.appendChild(tooltip);\n\n\t\t// position tooltip near the element\n\t\tconst rect = element.getBoundingClientRect();\n\t\ttooltip.style.left = `${rect.left + window.scrollX}px`;\n\t\ttooltip.style.top = `${rect.top + window.scrollY - tooltip.offsetHeight - 5}px`;\n\n\t\t// associate tooltip with the element\n\t\telement.dataset.tooltipId = tooltip.id;\n\t}\n\n\t// handles resizing of palette columns\n\tprivate startResize(event: MouseEvent, column: HTMLElement): void {\n\t\tif (!column || column.classList.contains(classes.locked)) return;\n\n\t\tconst startX = event.clientX;\n\t\tconst startWidth = column.offsetWidth;\n\n\t\tconst onMouseMove = (moveEvent: MouseEvent) => {\n\t\t\tconst diff = moveEvent.clientX - startX;\n\t\t\tcolumn.style.width = `${startWidth + diff}px`;\n\t\t};\n\n\t\tconst onMouseUp = () => {\n\t\t\twindow.removeEventListener('mousemove', onMouseMove);\n\t\t\twindow.removeEventListener('mouseup', onMouseUp);\n\n\t\t\t// save new size to state\n\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\t\t\tconst updatedColumns = this.stateManager\n\t\t\t\t.getState()\n\t\t\t\t.paletteContainer.columns.map(col =>\n\t\t\t\t\tcol.id === columnID\n\t\t\t\t\t\t? { ...col, size: column.offsetWidth }\n\t\t\t\t\t\t: col\n\t\t\t\t);\n\n\t\t\tthis.stateManager.updatePaletteColumns(updatedColumns, false, 4);\n\t\t};\n\n\t\twindow.addEventListener('mousemove', onMouseMove);\n\t\twindow.addEventListener('mouseup', onMouseUp);\n\t}\n\n\t// toggles color input modal\n\tprivate toggleColorModal(button: HTMLElement): void {\n\t\tconst modalID = button.dataset.modalID;\n\t\tif (!modalID) return;\n\t\tconst modal = this.utils.core.getElement<HTMLDivElement>(modalID);\n\t\tmodal?.classList.toggle(classes.hidden);\n\t}\n\n\t// toggles lock state of a palette column\n\tprivate toggleLock(button: HTMLElement): void {\n\t\tconst column = button.closest(\n\t\t\tclasses.paletteColumn\n\t\t) as HTMLElement | null;\n\n\t\tif (!column) return;\n\n\t\tconst isLocked = column.classList.toggle(classes.locked);\n\t\tcolumn.draggable = !isLocked;\n\n\t\tconst input = column.querySelector('input') as HTMLInputElement | null;\n\n\t\tif (input) input.disabled = isLocked;\n\t}\n}\n"],"names":["consts"],"mappings":"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"}