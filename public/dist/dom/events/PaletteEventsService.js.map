{"version":3,"file":"PaletteEventsService.js","sources":["../../../../../src/dom/events/PaletteEventsService.ts"],"sourcesContent":["import {\n\tColorSpace,\n\tHelpers,\n\tPaletteEventsContract,\n\tPaletteItem,\n\tServices,\n\tState,\n\tUtilities\n} from '../../types/index.js';\nimport { DOMStore } from '../DOMStore.js';\nimport { EventManager } from './EventManager.js';\nimport { PaletteHistoryManager } from '../../palette/PaletteHistoryManager.js';\nimport { PaletteRendererService } from '../PaletteRendererService.js';\nimport { PaletteStateService } from '../../state/PaletteStateService.js';\nimport { StateManager } from '../../state/StateManager.js';\nimport { domConfig, domIndex } from '../../config/index.js';\n\nconst caller = 'PaletteEventsService';\nconst classes = domIndex.classes;\n\nexport class PaletteEventsService implements PaletteEventsContract {\n\tstatic #instance: PaletteEventsService | null = null;\n\n\t#draggedColumn: HTMLElement | null = null;\n\n\t#domStore: DOMStore;\n\t#errors: Services['errors'];\n\t#helpers: Helpers;\n\t#log: Services['log'];\n\t#paletteHistory: PaletteHistoryManager;\n\t#paletteRenderer: PaletteRendererService;\n\t#paletteState: PaletteStateService;\n\t#stateManager: StateManager;\n\t#utils: Utilities;\n\n\tprivate constructor(\n\t\tdomStore: DOMStore,\n\t\thelpers: Helpers,\n\t\tpaletteRenderer: PaletteRendererService,\n\t\tpaletteState: PaletteStateService,\n\t\tservices: Services,\n\t\tstateManager: StateManager,\n\t\tutils: Utilities\n\t) {\n\t\ttry {\n\t\t\tservices.log.info(\n\t\t\t\t`Constructing PaletteEvents instance`,\n\t\t\t\t`${caller} constructor`\n\t\t\t);\n\n\t\t\tthis.#errors = services.errors;\n\t\t\tthis.#helpers = helpers;\n\t\t\tthis.#log = services.log;\n\t\t\tthis.#utils = utils;\n\n\t\t\tthis.#domStore = domStore;\n\t\t\tthis.#paletteRenderer = paletteRenderer;\n\t\t\tthis.#paletteState = paletteState;\n\t\t\tthis.#stateManager = stateManager;\n\n\t\t\tthis.#paletteHistory = PaletteHistoryManager.getInstance(\n\t\t\t\thelpers,\n\t\t\t\tservices\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tthrow new Error(\n\t\t\t\t`[${caller} constructor]: ${error instanceof Error ? error.message : error}`\n\t\t\t);\n\t\t}\n\t}\n\n\tstatic getInstance(\n\t\tdomStore: DOMStore,\n\t\thelpers: Helpers,\n\t\tpaletteRenderer: PaletteRendererService,\n\t\tpaletteState: PaletteStateService,\n\t\tservices: Services,\n\t\tstateManager: StateManager,\n\t\tutils: Utilities\n\t): PaletteEventsService {\n\t\treturn services.errors.handleSync(() => {\n\t\t\tif (!PaletteEventsService.#instance) {\n\t\t\t\tservices.log.info(\n\t\t\t\t\t`Creating PaletteEvents instance`,\n\t\t\t\t\t`${caller}.getInstance`\n\t\t\t\t);\n\n\t\t\t\tPaletteEventsService.#instance = new PaletteEventsService(\n\t\t\t\t\tdomStore,\n\t\t\t\t\thelpers,\n\t\t\t\t\tpaletteRenderer,\n\t\t\t\t\tpaletteState,\n\t\t\t\t\tservices,\n\t\t\t\t\tstateManager,\n\t\t\t\t\tutils\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tservices.log.info(\n\t\t\t\t`Returning PaletteEvents instance`,\n\t\t\t\t`${caller}.getInstance`\n\t\t\t);\n\n\t\t\treturn PaletteEventsService.#instance;\n\t\t}, `[${caller}.getInstance]: Failed to create instance.`);\n\t}\n\n\tinit() {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst paletteContainer = this.#domStore.getElement(\n\t\t\t\t'divs',\n\t\t\t\t'paletteContainer'\n\t\t\t);\n\n\t\t\tif (!paletteContainer) return;\n\n\t\t\t// delegated event listener for color input changes\n\t\t\tEventManager.add(paletteContainer, 'input', event => {\n\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\tif (target.matches(classes.colorDisplay)) {\n\t\t\t\t\tconst column = target.closest(\n\t\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t\t) as HTMLElement;\n\t\t\t\t\tconst columnID = column?.id.split('-').pop();\n\n\t\t\t\t\tif (!column || !columnID) return;\n\n\t\t\t\t\tthis.#handleColorInputChange(event, column, columnID);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// delegated lock button event listener\n\t\t\tEventManager.add(paletteContainer, 'click', event => {\n\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\tif (target.matches(classes.lockBtn)) {\n\t\t\t\t\tthis.#toggleLock(target);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// delegated event listener for modals (open/close)\n\t\t\tEventManager.add(paletteContainer, 'click', event => {\n\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\tif (target.matches(classes.colorInputBtn)) {\n\t\t\t\t\tthis.#toggleColorModal(target);\n\t\t\t\t} else if (target.matches(classes.colorInputModal)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.target !==\n\t\t\t\t\t\ttarget.querySelector(classes.colorInputBtn)\n\t\t\t\t\t) {\n\t\t\t\t\t\ttarget.classList.add(classes.hidden);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// delegated event listener for resizing columns\n\t\t\tEventManager.add(paletteContainer, 'mousedown', ((\n\t\t\t\tevent: MouseEvent\n\t\t\t) => {\n\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\tif (target.matches(classes.resizeHandle)) {\n\t\t\t\t\tthis.#startResize(\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\ttarget.closest(classes.paletteColumn) as HTMLElement\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}) as EventListener);\n\n\t\t\t// delegated event listener for tooltips (1)\n\t\t\tEventManager.add(paletteContainer, 'mouseover', event => {\n\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\tif (target.matches(classes.tooltipTrigger)) {\n\t\t\t\t\tconst tooltipText = target.dataset.tooltip;\n\n\t\t\t\t\tif (tooltipText) {\n\t\t\t\t\t\tthis.#showTooltip(target, tooltipText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// delegated event listener for tooltips (2)\n\t\t\tEventManager.add(paletteContainer, 'mouseout', event => {\n\t\t\t\tconst target = event.target as HTMLElement;\n\n\t\t\t\tif (target.matches(classes.tooltipTrigger)) {\n\t\t\t\t\tthis.#hideTooltip();\n\t\t\t\t}\n\t\t\t});\n\t\t}, `[${caller}]: Failed to call init()`);\n\t}\n\n\tattachColorCopyHandlers(): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst paletteContainer = this.#domStore.getElement(\n\t\t\t\t'divs',\n\t\t\t\t'paletteContainer'\n\t\t\t);\n\n\t\t\tif (!paletteContainer) return;\n\n\t\t\tEventManager.add(paletteContainer, 'click', event => {\n\t\t\t\tconst target = event.target as HTMLInputElement;\n\n\t\t\t\tif (target.matches(classes.colorDisplay))\n\t\t\t\t\tthis.#copyToClipboard(target.value, target);\n\t\t\t});\n\t\t}, `[${caller}]: Failed to attach color copy handlers.`);\n\t}\n\n\tasync attachDragAndDropHandlers(): Promise<void> {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst paletteContainer = this.#domStore.getElement(\n\t\t\t\t'divs',\n\t\t\t\t'paletteContainer'\n\t\t\t);\n\n\t\t\tif (!paletteContainer) {\n\t\t\t\tthis.#log.warn(\n\t\t\t\t\t`Palette container not found! Cannot attach drag-and-drop handlers.`,\n\t\t\t\t\t`${caller}.attachDragAndDropHandlers`\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// drag start\n\t\t\tEventManager.add(paletteContainer, 'dragstart', ((\n\t\t\t\tevent: DragEvent\n\t\t\t) => {\n\t\t\t\tconst dragHandle = (event.target as HTMLElement).closest(\n\t\t\t\t\tclasses.dragHandle\n\t\t\t\t) as HTMLElement;\n\n\t\t\t\tif (!dragHandle) return;\n\n\t\t\t\tthis.#draggedColumn = dragHandle.closest(\n\t\t\t\t\tclasses.paletteColumn\n\t\t\t\t) as HTMLElement;\n\n\t\t\t\tif (!this.#draggedColumn) return;\n\n\t\t\t\tevent.dataTransfer?.setData(\n\t\t\t\t\t'text/plain',\n\t\t\t\t\tthis.#draggedColumn.id\n\t\t\t\t);\n\n\t\t\t\tthis.#draggedColumn.classList.add('dragging');\n\n\t\t\t\tthis.#log.debug(\n\t\t\t\t\t`Drag started for column: ${this.#draggedColumn.id}`,\n\t\t\t\t\t`${caller}.attachDragAndDropHandlers`\n\t\t\t\t);\n\t\t\t}) as EventListener);\n\n\t\t\t// drag over (Allow dropping)\n\t\t\tEventManager.add(paletteContainer, 'dragover', ((\n\t\t\t\tevent: DragEvent\n\t\t\t) => {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif (event.dataTransfer) event.dataTransfer.dropEffect = 'move';\n\t\t\t}) as EventListener);\n\n\t\t\t// drop - handles dropping columns and updates positions atomically\n\t\t\tEventManager.add(paletteContainer, 'drop', (event: Event) => {\n\t\t\t\t// call inside a non-async wrapper\n\t\t\t\tvoid (async (dragEvent: DragEvent) => {\n\t\t\t\t\tdragEvent.preventDefault();\n\n\t\t\t\t\tconst targetColumn = (\n\t\t\t\t\t\tdragEvent.target as HTMLElement\n\t\t\t\t\t).closest(classes.paletteColumn) as HTMLElement;\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.#draggedColumn ||\n\t\t\t\t\t\t!targetColumn ||\n\t\t\t\t\t\tthis.#draggedColumn === targetColumn\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tconst draggedID = parseInt(\n\t\t\t\t\t\tthis.#draggedColumn.id.split('-').pop()!\n\t\t\t\t\t);\n\t\t\t\t\tconst targetID = parseInt(\n\t\t\t\t\t\ttargetColumn.id.split('-').pop()!\n\t\t\t\t\t);\n\n\t\t\t\t\tconst paletteContainer = this.#stateManager.get(\n\t\t\t\t\t\t'paletteContainer'\n\t\t\t\t\t) as State['paletteContainer'];\n\n\t\t\t\t\tconst updatedColumns = paletteContainer.columns\n\t\t\t\t\t\t.map(col => {\n\t\t\t\t\t\t\tif (col.id === draggedID)\n\t\t\t\t\t\t\t\treturn { ...col, position: targetID };\n\t\t\t\t\t\t\tif (col.id === targetID)\n\t\t\t\t\t\t\t\treturn { ...col, position: draggedID };\n\t\t\t\t\t\t\treturn col;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.sort((a, b) => a.position - b.position);\n\n\t\t\t\t\tawait this.#stateManager.batchUpdate(currentState => ({\n\t\t\t\t\t\tpaletteContainer: {\n\t\t\t\t\t\t\t...currentState.paletteContainer,\n\t\t\t\t\t\t\tcolumns: updatedColumns\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\n\t\t\t\t\tthis.#draggedColumn.classList.remove('dragging');\n\n\t\t\t\t\tthis.#log.debug(\n\t\t\t\t\t\t`Swapped columns: ${draggedID} and ${targetID}`,\n\t\t\t\t\t\t`${caller}.attachDragAndDropHandlers`\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.#draggedColumn = null;\n\t\t\t\t})(event as DragEvent);\n\t\t\t});\n\n\t\t\t// drag end\n\t\t\tEventManager.add(paletteContainer, 'dragend', () => {\n\t\t\t\tif (this.#draggedColumn) {\n\t\t\t\t\tthis.#draggedColumn.classList.remove('dragging');\n\n\t\t\t\t\tthis.#log.debug(\n\t\t\t\t\t\t'Drag ended for column.',\n\t\t\t\t\t\t`${caller}.attachDragAndDropHandlers`\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.#draggedColumn = null;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.#log.debug(\n\t\t\t\t`Drag and drop event listeners attached`,\n\t\t\t\t`${caller}.attachDragAndDropHandlers`\n\t\t\t);\n\t\t}, `[${caller}]: Failed to attach drag-and-drop handlers`);\n\t}\n\n\t// initialiezs column positions on page load\n\tasync initializeColumnPositions(): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tthis.#log.debug(\n\t\t\t\t`Initializing column positions...`,\n\t\t\t\t`${caller}.initializeColumnPositions`\n\t\t\t);\n\n\t\t\tconst paletteColumns = this.#helpers.dom.getAllElements(\n\t\t\t\t`.${classes.paletteColumn}`\n\t\t\t);\n\n\t\t\t// create updated column data based on DOM elements\n\t\t\tconst updatedColumns = Array.from(paletteColumns).map(\n\t\t\t\t(column, index) => ({\n\t\t\t\t\tid: index + 1,\n\t\t\t\t\tisLocked: false,\n\t\t\t\t\tposition: index + 1,\n\t\t\t\t\tsize: column.offsetWidth\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tawait this.#stateManager.batchUpdate(currentState => ({\n\t\t\t\tpaletteContainer: {\n\t\t\t\t\t...currentState.paletteContainer,\n\t\t\t\t\tcolumns: updatedColumns.slice(0, 5)\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis.#log.debug(\n\t\t\t\t'Initialized column positions.',\n\t\t\t\t`${caller}.initializeColumnPositions`\n\t\t\t);\n\t\t}, `[${caller}]: Failed to initialize column positions.`);\n\t}\n\n\t// renders column sizes based on stored state\n\tasync renderColumnSizeChange(): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tconst paletteColumns = this.#helpers.dom.getAllElements(\n\t\t\t\t`.${classes.paletteColumn}`\n\t\t\t);\n\n\t\t\t// safely retrieve the latest state\n\t\t\tconst paletteContainer = this.#stateManager.get(\n\t\t\t\t'paletteContainer'\n\t\t\t) as State['paletteContainer'];\n\n\t\t\t// update DOM based on state\n\t\t\tpaletteColumns.forEach((column, index) => {\n\t\t\t\tconst columnData = paletteContainer.columns[index];\n\n\t\t\t\tif (columnData) {\n\t\t\t\t\tcolumn.style.width = `${columnData.size}%`;\n\t\t\t\t\tcolumn.classList.remove('hidden');\n\t\t\t\t} else {\n\t\t\t\t\tcolumn.classList.add('hidden');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.#log.debug(\n\t\t\t\t'Rendered column size changes.',\n\t\t\t\t`${caller}.renderColumnSizeChange`\n\t\t\t);\n\t\t}, `[${caller}]: Failed to render column size changes.`);\n\t}\n\n\tasync syncColumnColorsWithState(): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tconst paletteColumns =\n\t\t\t\tthis.#helpers.dom.getAllElements<HTMLElement>(\n\t\t\t\t\t`.${classes.paletteColumn}`\n\t\t\t\t);\n\n\t\t\tconst currentPalette = this.#paletteHistory.getCurrentPalette();\n\n\t\t\tif (!currentPalette?.items) {\n\t\t\t\tthis.#log.warn(\n\t\t\t\t\t'No valid palette data found in history!',\n\t\t\t\t\t`${caller}.syncColumnColorsWithState`\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userPreference =\n\t\t\t\tlocalStorage.getItem('colorPreference') || 'hex';\n\t\t\tconst validColorSpace = this.#helpers.typeGuards.isColorSpace(\n\t\t\t\tuserPreference\n\t\t\t)\n\t\t\t\t? userPreference\n\t\t\t\t: 'hex';\n\n\t\t\tpaletteColumns.forEach((column, index) => {\n\t\t\t\tconst paletteItem = currentPalette.items[index];\n\n\t\t\t\tif (paletteItem) {\n\t\t\t\t\tconst colorValue = this.#getColorByPreference(\n\t\t\t\t\t\tpaletteItem.css,\n\t\t\t\t\t\tvalidColorSpace\n\t\t\t\t\t);\n\t\t\t\t\tcolumn.style.backgroundColor = colorValue;\n\n\t\t\t\t\tconst colorDisplay = column.querySelector(\n\t\t\t\t\t\tclasses.colorDisplay\n\t\t\t\t\t) as HTMLInputElement;\n\t\t\t\t\tif (colorDisplay) colorDisplay.value = colorValue;\n\t\t\t\t} else {\n\t\t\t\t\tcolumn.classList.add('hidden');\n\t\t\t\t}\n\t\t\t});\n\t\t}, `[${caller}]: Failed to sync column colors with state.`);\n\t}\n\n\t#copyToClipboard(text: string, targetElement: HTMLElement): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tnavigator.clipboard\n\t\t\t\t.writeText(text.trim())\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.#showTooltip(targetElement, 'Copied!');\n\t\t\t\t\tthis.#log.debug(\n\t\t\t\t\t\t`Copied color value: ${text}`,\n\t\t\t\t\t\t`${caller}.#copyToClipboard`\n\t\t\t\t\t);\n\n\t\t\t\t\tsetTimeout(\n\t\t\t\t\t\t() => this.#removeTooltip(targetElement),\n\t\t\t\t\t\tdomConfig.tooltipFadeOut\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tthis.#log.error(\n\t\t\t\t\t\t`Error copying to clipboard: ${err}`,\n\t\t\t\t\t\t`${caller}.#copyToClipboard`\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t}, `[${caller}]: Failed to copy to clipboard.`);\n\t}\n\n\t#getColorByPreference(\n\t\tcolorData: PaletteItem['css'],\n\t\tpreference: ColorSpace\n\t): string {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\treturn (\n\t\t\t\tcolorData[preference as keyof PaletteItem['css']] ||\n\t\t\t\tcolorData.hex\n\t\t\t);\n\t\t}, `[${caller}]: Failed to retrieve color by preference.`);\n\t}\n\n\tasync #handleColorInputChange(\n\t\tevent: Event,\n\t\tcolumn: HTMLElement,\n\t\tcolumnID: string\n\t): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tconst state = this.#stateManager.get() as State;\n\t\t\tconst newColor = (event.target as HTMLInputElement).value.trim();\n\n\t\t\tif (!this.#utils.validate.colorInput(newColor)) return;\n\n\t\t\tcolumn.style.backgroundColor = newColor;\n\n\t\t\tconst colorInput = this.#helpers.dom.getElement(\n\t\t\t\t`color-input-${columnID}`\n\t\t\t) as HTMLInputElement | null;\n\n\t\t\tif (colorInput) colorInput.value = newColor;\n\n\t\t\tconst numericColumnID = parseInt(columnID.replace(/\\D/g, ''), 10);\n\n\t\t\tif (!isNaN(numericColumnID)) {\n\t\t\t\tthis.#paletteRenderer.updatePaletteItemColor(\n\t\t\t\t\tnumericColumnID,\n\t\t\t\t\tnewColor,\n\t\t\t\t\tstate\n\t\t\t\t);\n\t\t\t}\n\t\t}, `[${caller}]: Failed to handle color input change.`);\n\t}\n\n\t// hides tooltip for a given element\n\t#hideTooltip(): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tthis.#utils.dom.hideTooltip();\n\t\t}, `[${caller}]: Failed to hide tooltip.`);\n\t}\n\n\t#removeTooltip(element: HTMLElement): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst tooltipId = element.dataset.tooltipId;\n\t\t\tif (!tooltipId) return;\n\n\t\t\tconst tooltip = document.getElementById(tooltipId);\n\t\t\tif (tooltip) tooltip.remove();\n\n\t\t\tdelete element.dataset.tooltipId;\n\t\t}, `[${caller}]: Failed to remove tooltip.`);\n\t}\n\n\t#showTooltip(element: HTMLElement, text: string): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tthis.#removeTooltip(element);\n\n\t\t\tconst tooltip = document.createElement('div');\n\t\t\ttooltip.classList.add('tooltip');\n\t\t\ttooltip.textContent = text;\n\t\t\tdocument.body.appendChild(tooltip);\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\t\t\ttooltip.style.left = `${rect.left + window.scrollX}px`;\n\t\t\ttooltip.style.top = `${rect.top + window.scrollY - tooltip.offsetHeight - 5}px`;\n\n\t\t\telement.dataset.tooltipId = tooltip.id;\n\t\t}, `[${caller}]: Failed to show tooltip.`);\n\t}\n\n\t// handles resizing of palette columns\n\tasync #startResize(event: MouseEvent, column: HTMLElement): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tif (!column || column.classList.contains(classes.locked)) return;\n\n\t\t\tconst startX = event.clientX;\n\t\t\tconst startWidth = column.offsetWidth;\n\n\t\t\tconst onMouseMove = (moveEvent: MouseEvent) => {\n\t\t\t\tconst diff = moveEvent.clientX - startX;\n\t\t\t\tconst newSize = startWidth + diff;\n\t\t\t\tcolumn.style.width = `${newSize}px`; // live feedback\n\t\t\t};\n\n\t\t\tconst onMouseUp = async () => {\n\t\t\t\twindow.removeEventListener('mousemove', onMouseMove);\n\t\t\t\twindow.removeEventListener('mouseup', onMouseUp);\n\n\t\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\t\t\t\tconst paletteContainer = this.#stateManager.get(\n\t\t\t\t\t'paletteContainer'\n\t\t\t\t) as State['paletteContainer'];\n\n\t\t\t\t// ensure resizing doesn't break 5-column structure\n\t\t\t\tconst updatedColumns = paletteContainer.columns.map(col =>\n\t\t\t\t\tcol.id === columnID\n\t\t\t\t\t\t? { ...col, size: column.offsetWidth }\n\t\t\t\t\t\t: col\n\t\t\t\t);\n\n\t\t\t\tawait this.#stateManager.batchUpdate(currentState => ({\n\t\t\t\t\tpaletteContainer: {\n\t\t\t\t\t\t...currentState.paletteContainer,\n\t\t\t\t\t\tcolumns: updatedColumns.slice(0, 5)\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis.#log.debug(\n\t\t\t\t\t`Resized column ${columnID} to ${column.offsetWidth}px`,\n\t\t\t\t\t`${caller}.#startResize`\n\t\t\t\t);\n\t\t\t};\n\n\t\t\twindow.addEventListener('mousemove', onMouseMove);\n\t\t\twindow.addEventListener('mouseup', onMouseUp);\n\t\t}, `[${caller}]: Failed to start column resize.`);\n\t}\n\n\t#toggleColorModal(button: HTMLElement): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst modalID = button.dataset.modalID;\n\n\t\t\tif (!modalID) return;\n\n\t\t\tconst modal = this.#helpers.dom.getElement<HTMLDivElement>(modalID);\n\n\t\t\tmodal?.classList.toggle(classes.hidden);\n\t\t}, `[${caller}]: Failed to toggle color modal.`);\n\t}\n\n\t// toggles lock state of a palette column\n\t#toggleLock(button: HTMLElement): void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tconst column = button.closest(\n\t\t\t\tclasses.paletteColumn\n\t\t\t) as HTMLElement | null;\n\n\t\t\tif (!column) return;\n\n\t\t\tconst columnID = parseInt(column.id.split('-').pop()!);\n\n\t\t\tthis.#paletteState.handleColumnLock(columnID);\n\t\t}, `[${caller}]: Failed to toggle lock state.`);\n\t}\n}\n"],"names":[],"mappings":"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"}