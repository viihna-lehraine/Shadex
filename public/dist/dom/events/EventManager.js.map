{"version":3,"file":"EventManager.js","sources":["../../../../../src/dom/events/EventManager.ts"],"sourcesContent":["// File: dom/events/EventManager.ts\n\nimport { Services } from '../../types/index.js';\n\nconst caller = 'EventManager';\n\nexport class EventManager {\n\tstatic #instance: EventManager | null = null;\n\n\tstatic #listeners: Map<\n\t\tstring,\n\t\t{\n\t\t\telement: Element | Document;\n\t\t\thandler: EventListenerOrEventListenerObject;\n\t\t}\n\t> = new Map();\n\n\tstatic #errors: Services['errors'];\n\tstatic #log: Services['log'];\n\n\tprivate constructor(services: Services) {\n\t\ttry {\n\t\t\tservices.log.info(\n\t\t\t\t`Constructing EventManager instance`,\n\t\t\t\t`${caller} constructor`\n\t\t\t);\n\n\t\t\tEventManager.#errors = services.errors;\n\n\t\t\tEventManager.#log = services.log;\n\t\t} catch (error) {\n\t\t\tthrow new Error(\n\t\t\t\t`[${caller} constructor]: ${error instanceof Error ? error.message : error}`\n\t\t\t);\n\t\t}\n\t}\n\n\tstatic getInstance(services: Services): EventManager {\n\t\treturn services.errors.handleSync(() => {\n\t\t\tif (!EventManager.#instance) {\n\t\t\t\tEventManager.#instance = new EventManager(services);\n\t\t\t}\n\n\t\t\treturn EventManager.#instance;\n\t\t}, `[${caller}.getInstance]: Failed to create EventManager instance.`);\n\t}\n\n\tstatic add(\n\t\telement: Element | Document,\n\t\teventType: string,\n\t\thandler: EventListenerOrEventListenerObject\n\t): void {\n\t\treturn EventManager.#errors.handleSync(() => {\n\t\t\telement.addEventListener(eventType, handler);\n\n\t\t\tEventManager.#listeners.set(`${eventType}_${handler}`, {\n\t\t\t\telement,\n\t\t\t\thandler\n\t\t\t});\n\t\t}, `[${caller}]: Failed to add event listener for ${eventType}.`);\n\t}\n\n\tstatic async listAll(): Promise<void> {\n\t\treturn await EventManager.#errors.handleAsync(async () => {\n\t\t\tif (!EventManager.#listeners.size) {\n\t\t\t\tEventManager.#log.info(\n\t\t\t\t\t'No active listeners found.',\n\t\t\t\t\t`${caller}.listAll`\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconsole.groupCollapsed('Active Listeners:');\n\n\t\t\tEventManager.#listeners.forEach(({ element, handler }, key) => {\n\t\t\t\tEventManager.#log.info(\n\t\t\t\t\t`Event: ${key.split('_')[0]}`,\n\t\t\t\t\t`${caller}.listAll`\n\t\t\t\t);\n\n\t\t\t\tconsole.log({ element, handler });\n\t\t\t});\n\t\t\tconsole.groupEnd();\n\t\t}, `[${caller}]: Failed to list all event listeners.`);\n\t}\n\n\tstatic async listByType(eventType: string): Promise<void> {\n\t\treturn await EventManager.#errors.handleAsync(async () => {\n\t\t\tconst listeners = Array.from(EventManager.#listeners.entries()).filter(\n\t\t\t\t([key]) => key.startsWith(`${eventType}_`)\n\t\t\t);\n\n\t\t\tif (listeners.length === 0) {\n\t\t\t\tEventManager.#log.info(\n\t\t\t\t\t`No listeners found for event type \"${eventType}\".`,\n\t\t\t\t\t`${caller}.listByType`\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconsole.groupCollapsed(`🛠️ Event Listeners for: ${eventType}`);\n\n\t\t\tlisteners.forEach(([_, { element, handler }]) => {\n\t\t\t\tEventManager.#log.info(\n\t\t\t\t\t`Listener for ${eventType}`,\n\t\t\t\t\t`${caller}.listByType`\n\t\t\t\t);\n\n\t\t\t\tconsole.log({ element, handler });\n\t\t\t});\n\t\t\tconsole.groupEnd();\n\t\t}, `[${caller}]: Failed to list event listeners for ${eventType}.`);\n\t}\n\n\tstatic async remove(\n\t\telement: Element | Document,\n\t\teventType: string,\n\t\thandler: EventListenerOrEventListenerObject\n\t): Promise<void> {\n\t\treturn await EventManager.#errors.handleAsync(async () => {\n\t\t\telement.removeEventListener(eventType, handler);\n\n\t\t\tconst listenerKey = `${eventType}_${handler}`;\n\t\t\tconst wasRemoved = EventManager.#listeners.delete(listenerKey);\n\n\t\t\tif (wasRemoved) {\n\t\t\t\tEventManager.#log.info(\n\t\t\t\t\t`Removed listener for ${eventType}`,\n\t\t\t\t\t`${caller}.remove`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tEventManager.#log.info(\n\t\t\t\t\t`No matching listener found for ${eventType}`,\n\t\t\t\t\t`${caller}.remove`\n\t\t\t\t);\n\t\t\t}\n\t\t}, `[${caller}]: Failed to remove event listener for ${eventType}.`);\n\t}\n\n\tstatic async removeAll(): Promise<void> {\n\t\treturn await EventManager.#errors.handleAsync(async () => {\n\t\t\tif (EventManager.#listeners.size === 0) {\n\t\t\t\tEventManager.#log.info(\n\t\t\t\t\t'No active listeners to remove.',\n\t\t\t\t\t`${caller}.removeAll`\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEventManager.#listeners.forEach(({ element, handler }, key) => {\n\t\t\t\tconst [eventType] = key.split('_');\n\n\t\t\t\telement.removeEventListener(eventType, handler);\n\n\t\t\t\tEventManager.#log.debug(\n\t\t\t\t\t`Removed listener: ${eventType}`,\n\t\t\t\t\t`${caller}.removeAll`\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tEventManager.#listeners.clear();\n\n\t\t\tEventManager.#log.info(\n\t\t\t\t'All listeners have been removed.',\n\t\t\t\t`${caller}.removeAll`\n\t\t\t);\n\t\t}, `[${caller}]: Failed to remove all event listeners.`);\n\t}\n}\n"],"names":[],"mappings":"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"}