{"version":3,"file":"data.js","sources":["../../../../../src/common/helpers/data.ts"],"sourcesContent":["// File: common/helpers/data.ts\n\nimport { DataHelpers } from '../../types/index.js';\nimport { regex } from '../../config/index.js';\n\nexport const dataHelpersFactory = (): DataHelpers =>\n\t({\n\t\tclone<T>(value: T): T {\n\t\t\treturn structuredClone(value);\n\t\t},\n\t\tgetCallerInfo: (): string => {\n\t\t\tconst stack = new Error().stack;\n\n\t\t\tif (stack) {\n\t\t\t\tconst stackLines = stack.split('\\n');\n\t\t\t\tfor (const line of stackLines) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!line.includes('Logger') &&\n\t\t\t\t\t\t!line.includes('ErrorHandler') &&\n\t\t\t\t\t\t!line.includes('serviceFactory') &&\n\t\t\t\t\t\tline.includes('at ')\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst match =\n\t\t\t\t\t\t\tline.match(regex.stackTrace.withFn) ||\n\t\t\t\t\t\t\tline.match(regex.stackTrace.withoutFn);\n\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\treturn match[1]\n\t\t\t\t\t\t\t\t? `${match[1]} (${match[2]}:${match[3]})`\n\t\t\t\t\t\t\t\t: `${match[2]}:${match[3]}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 'UNKNOWN CALLER';\n\t\t},\n\t\tgetFormattedTimestamp(): string {\n\t\t\tconst now = new Date();\n\t\t\tconst year = now.getFullYear();\n\t\t\tconst month = String(now.getMonth() + 1).padStart(2, '0');\n\t\t\tconst day = String(now.getDate()).padStart(2, '0');\n\t\t\tconst hours = String(now.getHours()).padStart(2, '0');\n\t\t\tconst minutes = String(now.getMinutes()).padStart(2, '0');\n\t\t\tconst seconds = String(now.getSeconds()).padStart(2, '0');\n\n\t\t\treturn `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n\t\t},\n\t\tparseValue: (value: string | number): number =>\n\t\t\ttypeof value === 'string' && value.endsWith('%')\n\t\t\t\t? parseFloat(value.slice(0, -1))\n\t\t\t\t: Number(value),\n\t\tasync tracePromise(\n\t\t\tpromise: Promise<unknown>,\n\t\t\tlabel: string\n\t\t): Promise<unknown> {\n\t\t\treturn promise\n\t\t\t\t.then(result => {\n\t\t\t\t\tconsole.log(`[TRACE SUCCESS] ${label}:`, result);\n\t\t\t\t\treturn result;\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.error(`[TRACE ERROR] ${label}:`, error);\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t}\n\t}) as const;\n"],"names":[],"mappings":"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"}