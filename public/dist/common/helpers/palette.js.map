{"version":3,"file":"palette.js","sources":["../../../../../src/common/helpers/palette.ts"],"sourcesContent":["// File: common/helpers/palette.js\n\nimport {\n\tHSL,\n\tPaletteConfig,\n\tPaletteHelpersInterface,\n\tServicesInterface,\n\tUtilitiesInterface\n} from '../../types/index.js';\nimport { paletteConfig } from '../../config/index.js';\n\nexport function createPaletteHelpers(\n\tservices: ServicesInterface,\n\tutils: UtilitiesInterface\n): PaletteHelpersInterface {\n\tfunction isHSLTooDark(hsl: HSL): boolean {\n\t\tconst log = services.log;\n\n\t\tif (!utils.validate.colorValue(hsl)) {\n\t\t\tlog(`Invalid HSL value ${JSON.stringify(hsl)}`, 'error');\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\tutils.core.clone(hsl).value.lightness <\n\t\t\tpaletteConfig.thresholds.dark\n\t\t);\n\t}\n\n\tfunction isHSLTooGray(hsl: HSL): boolean {\n\t\tconst log = services.log;\n\n\t\tif (!utils.validate.colorValue(hsl)) {\n\t\t\tlog(`Invalid HSL value ${JSON.stringify(hsl)}`, 'error');\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\tutils.core.clone(hsl).value.saturation <\n\t\t\tpaletteConfig.thresholds.gray\n\t\t);\n\t}\n\n\tfunction isHSLTooLight(hsl: HSL): boolean {\n\t\tconst log = services.log;\n\n\t\tif (!utils.validate.colorValue(hsl)) {\n\t\t\tlog('Invalid HSL value ${JSON.stringify(hsl)}', 'error');\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\tutils.core.clone(hsl).value.lightness >\n\t\t\tpaletteConfig.thresholds.light\n\t\t);\n\t}\n\n\treturn {\n\t\tisHSLTooDark,\n\t\tisHSLTooGray,\n\t\tisHSLTooLight,\n\t\tgetWeightedRandomInterval(\n\t\t\tdistributionType: keyof PaletteConfig['probabilities']\n\t\t): number {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\t// select appropriate type\n\t\t\t\tconst { weights, values } =\n\t\t\t\t\tpaletteConfig.probabilities[distributionType];\n\n\t\t\t\t// compute cumulative probabilities\n\t\t\t\tconst cumulativeProbabilities: number[] = values.reduce(\n\t\t\t\t\t(acc: number[], prob: number, i: number) => {\n\t\t\t\t\t\tacc[i] = (acc[i - 1] || 0) + prob;\n\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t},\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t\tconst random = Math.random();\n\n\t\t\t\t// find corresponding weighted value\n\t\t\t\tfor (let i = 0; i < cumulativeProbabilities.length; i++) {\n\t\t\t\t\tif (random < cumulativeProbabilities[i]) return weights[i];\n\t\t\t\t}\n\n\t\t\t\t// fallback in case of error\n\t\t\t\treturn weights[weights.length - 1];\n\t\t\t} catch (error) {\n\t\t\t\tlog(\n\t\t\t\t\t`Error generating weighted random interval: ${error}`,\n\t\t\t\t\t'error'\n\t\t\t\t);\n\n\t\t\t\treturn 50; // default fallback value\n\t\t\t}\n\t\t},\n\t\tisHSLInBounds(hsl: HSL): boolean {\n\t\t\tconst log = services.log;\n\n\t\t\tif (!utils.validate.colorValue(hsl)) {\n\t\t\t\tlog(`Invalid HSL value ${JSON.stringify(hsl)}`, 'error');\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isHSLTooDark(hsl) || isHSLTooGray(hsl) || isHSLTooLight(hsl);\n\t\t}\n\t};\n}\n"],"names":[],"mappings":"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"}