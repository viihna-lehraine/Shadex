{"version":3,"file":"color.js","sources":["../../../../../src/common/helpers/color.ts"],"sourcesContent":["// File: common/helpers/color.js\n\nimport {\n\tCMYK,\n\tColorUtilHelpersInterface,\n\tHex,\n\tHSL,\n\tHSV,\n\tLAB,\n\tRGB,\n\tServicesInterface,\n\tSL,\n\tSV,\n\tUtilitiesInterface,\n\tXYZ,\n\tXYZ_X,\n\tXYZ_Y,\n\tXYZ_Z\n} from '../../types/index.js';\nimport { data } from '../../data/index.js';\n\nconst math = data.math;\nconst limits = math.limits;\n\nconst defaults = data.defaults;\n\nconst defaultCMYK = defaults.colors.cmyk;\nconst defaultHex = defaults.colors.hex;\nconst defaultHSL = defaults.colors.hsl;\nconst defaultHSV = defaults.colors.hsv;\nconst defaultLAB = defaults.colors.lab;\nconst defaultRGB = defaults.colors.rgb;\nconst defaultSL = defaults.colors.sl;\nconst defaultSV = defaults.colors.sv;\nconst defaultXYZ = defaults.colors.xyz;\n\nexport function createColorHelpers(\n\tservices: ServicesInterface,\n\tutils: UtilitiesInterface\n): ColorUtilHelpersInterface {\n\tfunction cmykToRGB(cmyk: CMYK): RGB {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(cmyk)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid CMYK value ${JSON.stringify(cmyk)}`,\n\t\t\t\t\t'cmykToRGB()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultRGB;\n\t\t\t}\n\n\t\t\tconst clonedCMYK = utils.core.clone(cmyk);\n\t\t\tconst r =\n\t\t\t\t255 *\n\t\t\t\t(1 - clonedCMYK.value.cyan / 100) *\n\t\t\t\t(1 - clonedCMYK.value.key / 100);\n\t\t\tconst g =\n\t\t\t\t255 *\n\t\t\t\t(1 - clonedCMYK.value.magenta / 100) *\n\t\t\t\t(1 - clonedCMYK.value.key / 100);\n\t\t\tconst b =\n\t\t\t\t255 *\n\t\t\t\t(1 - clonedCMYK.value.yellow / 100) *\n\t\t\t\t(1 - clonedCMYK.value.key / 100);\n\t\t\tconst rgb: RGB = {\n\t\t\t\tvalue: {\n\t\t\t\t\tred: utils.brand.asByteRange(utils.sanitize.percentile(r)),\n\t\t\t\t\tgreen: utils.brand.asByteRange(\n\t\t\t\t\t\tutils.sanitize.percentile(g)\n\t\t\t\t\t),\n\t\t\t\t\tblue: utils.brand.asByteRange(utils.sanitize.percentile(b))\n\t\t\t\t},\n\t\t\t\tformat: 'rgb'\n\t\t\t};\n\n\t\t\treturn utils.adjust.clampRGB(rgb);\n\t\t} catch (error) {\n\t\t\tlog('error', `Error: ${error}`, 'cmykToRGB()');\n\n\t\t\treturn defaultRGB;\n\t\t}\n\t}\n\n\tfunction hexToHSL(hex: Hex): HSL {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(hex)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid Hex value ${JSON.stringify(hex)}`,\n\t\t\t\t\t'hexToHSL()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultHSL;\n\t\t\t}\n\n\t\t\treturn rgbToHSL(hexToRGB(utils.core.clone(hex)));\n\t\t} catch (error) {\n\t\t\tlog('error', `Error: ${error}`, 'hexToHSL()');\n\n\t\t\treturn defaultHSL;\n\t\t}\n\t}\n\n\tfunction hexToRGB(hex: Hex): RGB {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(hex)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid Hex value ${JSON.stringify(hex)}`,\n\t\t\t\t\t'hexToRGB()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultRGB;\n\t\t\t}\n\n\t\t\tconst clonedHex = utils.core.clone(hex);\n\t\t\tconst strippedHex =\n\t\t\t\tutils.format.stripHashFromHex(clonedHex).value.hex;\n\t\t\tconst bigint = parseInt(strippedHex, 16);\n\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\tred: utils.brand.asByteRange(\n\t\t\t\t\t\tutils.sanitize.percentile((bigint >> 16) & 255)\n\t\t\t\t\t),\n\t\t\t\t\tgreen: utils.brand.asByteRange(\n\t\t\t\t\t\tutils.sanitize.percentile((bigint >> 8) & 255)\n\t\t\t\t\t),\n\t\t\t\t\tblue: utils.brand.asByteRange(\n\t\t\t\t\t\tutils.sanitize.percentile(bigint & 255)\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\tformat: 'rgb'\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tlog('error', `Error: ${error}`, 'hexToRGB()');\n\n\t\t\treturn defaultRGB;\n\t\t}\n\t}\n\n\tfunction hslToLAB(hsl: HSL): LAB {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(hsl)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid HSL value ${JSON.stringify(hsl)}`,\n\t\t\t\t\t'hslToLAB()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultLAB;\n\t\t\t}\n\n\t\t\treturn xyzToLAB(rgbToXYZ(hslToRGB(utils.core.clone(hsl))));\n\t\t} catch (error) {\n\t\t\tlog('error', `Error: ${error}`, 'hslToLAB()');\n\n\t\t\treturn defaultLAB;\n\t\t}\n\t}\n\n\tfunction hslToRGB(hsl: HSL): RGB {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(hsl)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid HSL value ${JSON.stringify(hsl)}`,\n\t\t\t\t\t'hslToRGB()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultRGB;\n\t\t\t}\n\n\t\t\tconst clonedHSL = utils.core.clone(hsl);\n\t\t\tconst hue = clonedHSL.value.hue / 360;\n\n\t\t\tconst s = clonedHSL.value.saturation / 100;\n\t\t\tconst l = clonedHSL.value.lightness / 100;\n\t\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\tconst p = 2 * l - q;\n\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\tred: utils.brand.asByteRange(\n\t\t\t\t\t\tutils.sanitize.percentile(\n\t\t\t\t\t\t\tutils.color.hueToRGB(p, q, hue + 1 / 3) * 255\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tgreen: utils.brand.asByteRange(\n\t\t\t\t\t\tutils.sanitize.percentile(\n\t\t\t\t\t\t\tutils.color.hueToRGB(p, q, hue) * 255\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tblue: utils.brand.asByteRange(\n\t\t\t\t\t\tutils.sanitize.percentile(\n\t\t\t\t\t\t\tutils.color.hueToRGB(p, q, hue - 1 / 3) * 255\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\tformat: 'rgb'\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tlog('error', `Error: ${error}`, 'hslToRGB()');\n\n\t\t\treturn defaultRGB;\n\t\t}\n\t}\n\n\tfunction hsvToSV(hsv: HSV): SV {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(hsv)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid HSV value ${JSON.stringify(hsv)}`,\n\t\t\t\t\t'hsvToSV()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultSV;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\tsaturation: hsv.value.saturation,\n\t\t\t\t\tvalue: hsv.value.value\n\t\t\t\t},\n\t\t\t\tformat: 'sv' as 'sv'\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tlog('error', `Error: ${error}`, 'hsvToSV()');\n\n\t\t\treturn defaultSV;\n\t\t}\n\t}\n\n\tfunction labToRGB(lab: LAB): RGB {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(lab)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid LAB value ${JSON.stringify(lab)}`,\n\t\t\t\t\t'labToRGB()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultRGB;\n\t\t\t}\n\n\t\t\treturn xyzToRGB(labToXYZ(utils.core.clone(lab)));\n\t\t} catch (error) {\n\t\t\tlog('error', `Eerror: ${error}`, 'labToRGB()');\n\n\t\t\treturn defaultRGB;\n\t\t}\n\t}\n\n\tfunction labToXYZ(lab: LAB): XYZ {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(lab)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid LAB value ${JSON.stringify(lab)}`,\n\t\t\t\t\t'labToXYZ()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultXYZ;\n\t\t\t}\n\n\t\t\tconst clonedLAB = utils.core.clone(lab);\n\t\t\tconst refX = 95.047,\n\t\t\t\trefY = 100.0,\n\t\t\t\trefZ = 108.883;\n\n\t\t\tlet y = (clonedLAB.value.l + 16) / 116;\n\t\t\tlet x = clonedLAB.value.a / 500 + y;\n\t\t\tlet z = y - clonedLAB.value.b / 200;\n\n\t\t\tconst pow = Math.pow;\n\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\tx: utils.brand.asXYZ_X(\n\t\t\t\t\t\tutils.sanitize.percentile(\n\t\t\t\t\t\t\trefX *\n\t\t\t\t\t\t\t\t(pow(x, 3) > 0.008856\n\t\t\t\t\t\t\t\t\t? pow(x, 3)\n\t\t\t\t\t\t\t\t\t: (x - 16 / 116) / 7.787)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\ty: utils.brand.asXYZ_Y(\n\t\t\t\t\t\tutils.sanitize.percentile(\n\t\t\t\t\t\t\trefY *\n\t\t\t\t\t\t\t\t(pow(y, 3) > 0.008856\n\t\t\t\t\t\t\t\t\t? pow(y, 3)\n\t\t\t\t\t\t\t\t\t: (y - 16 / 116) / 7.787)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tz: utils.brand.asXYZ_Z(\n\t\t\t\t\t\tutils.sanitize.percentile(\n\t\t\t\t\t\t\trefZ *\n\t\t\t\t\t\t\t\t(pow(z, 3) > 0.008856\n\t\t\t\t\t\t\t\t\t? pow(z, 3)\n\t\t\t\t\t\t\t\t\t: (z - 16 / 116) / 7.787)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\tformat: 'xyz'\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tlog('error', `Error: ${error}`, 'labToXYZ()');\n\n\t\t\treturn defaultXYZ;\n\t\t}\n\t}\n\n\tfunction rgbToCMYK(rgb: RGB): CMYK {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(rgb)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid RGB value ${JSON.stringify(rgb)}`,\n\t\t\t\t\t'rgbToCMYK()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultCMYK;\n\t\t\t}\n\n\t\t\tconst clonedRGB = utils.core.clone(rgb);\n\n\t\t\tconst redPrime = clonedRGB.value.red / 255;\n\t\t\tconst greenPrime = clonedRGB.value.green / 255;\n\t\t\tconst bluePrime = clonedRGB.value.blue / 255;\n\n\t\t\tconst key = utils.sanitize.percentile(\n\t\t\t\tutils.sanitize.percentile(\n\t\t\t\t\t1 - Math.max(redPrime, greenPrime, bluePrime)\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst cyan = utils.sanitize.percentile(\n\t\t\t\tutils.sanitize.percentile((1 - redPrime - key) / (1 - key) || 0)\n\t\t\t);\n\t\t\tconst magenta = utils.sanitize.percentile(\n\t\t\t\tutils.sanitize.percentile(\n\t\t\t\t\t(1 - greenPrime - key) / (1 - key) || 0\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst yellow = utils.sanitize.percentile(\n\t\t\t\tutils.sanitize.percentile(\n\t\t\t\t\t(1 - bluePrime - key) / (1 - key) || 0\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst format: 'cmyk' = 'cmyk';\n\n\t\t\tconst cmyk = { value: { cyan, magenta, yellow, key }, format };\n\n\t\t\tlog(\n\t\t\t\t'debug',\n\t\t\t\t`Converted RGB ${JSON.stringify(clonedRGB)} to CMYK: ${JSON.stringify(utils.core.clone(cmyk))}`,\n\t\t\t\t'rgbToCMYK()',\n\t\t\t\t5\n\t\t\t);\n\n\t\t\treturn cmyk;\n\t\t} catch (error) {\n\t\t\tlog('error', `Error: ${error}`, 'rgbToCMYK()');\n\n\t\t\treturn defaultCMYK;\n\t\t}\n\t}\n\n\tfunction rgbToHex(rgb: RGB): Hex {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(rgb)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid RGB value ${JSON.stringify(rgb)}`,\n\t\t\t\t\t'rgbToHex()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultHex;\n\t\t\t}\n\n\t\t\tconst clonedRGB = utils.core.clone(rgb);\n\n\t\t\tif (\n\t\t\t\t[\n\t\t\t\t\tclonedRGB.value.red,\n\t\t\t\t\tclonedRGB.value.green,\n\t\t\t\t\tclonedRGB.value.blue\n\t\t\t\t].some(v => isNaN(v) || v < 0 || v > 255)\n\t\t\t) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid RGB values:\\nR=${JSON.stringify(clonedRGB.value.red)}\\nG=${JSON.stringify(clonedRGB.value.green)}\\nB=${JSON.stringify(clonedRGB.value.blue)}`,\n\t\t\t\t\t'rgbToHex()'\n\t\t\t\t);\n\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thex: utils.brand.asHexSet('#000000FF')\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hex' as 'hex'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\thex: utils.brand.asHexSet(\n\t\t\t\t\t\t`#${utils.format.componentToHex(clonedRGB.value.red)}${utils.format.componentToHex(clonedRGB.value.green)}${utils.format.componentToHex(clonedRGB.value.blue)}`\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\tformat: 'hex' as 'hex'\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tlog('error', `Error: ${error}`, 'rgbToHex()');\n\n\t\t\treturn defaultHex;\n\t\t}\n\t}\n\n\tfunction rgbToHSL(rgb: RGB): HSL {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(rgb)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid RGB value ${JSON.stringify(rgb)}`,\n\t\t\t\t\t'rgbToHSL()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultHSL;\n\t\t\t}\n\n\t\t\tconst clonedRGB = utils.core.clone(rgb);\n\n\t\t\tconst red = (clonedRGB.value.red as unknown as number) / 255;\n\t\t\tconst green = (clonedRGB.value.green as unknown as number) / 255;\n\t\t\tconst blue = (clonedRGB.value.blue as unknown as number) / 255;\n\n\t\t\tconst max = Math.max(red, green, blue);\n\t\t\tconst min = Math.min(red, green, blue);\n\n\t\t\tlet hue = 0,\n\t\t\t\tsaturation = 0,\n\t\t\t\tlightness = (max + min) / 2;\n\n\t\t\tif (max !== min) {\n\t\t\t\tconst delta = max - min;\n\n\t\t\t\tsaturation =\n\t\t\t\t\tlightness > 0.5\n\t\t\t\t\t\t? delta / (2 - max - min)\n\t\t\t\t\t\t: delta / (max + min);\n\n\t\t\t\tswitch (max) {\n\t\t\t\t\tcase red:\n\t\t\t\t\t\thue = (green - blue) / delta + (green < blue ? 6 : 0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase green:\n\t\t\t\t\t\thue = (blue - red) / delta + 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase blue:\n\t\t\t\t\t\thue = (red - green) / delta + 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\thue *= 60;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\thue: utils.brand.asRadial(utils.sanitize.percentile(hue)),\n\t\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\t\tutils.sanitize.percentile(saturation * 100)\n\t\t\t\t\t),\n\t\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\t\tutils.sanitize.percentile(lightness * 100)\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\tformat: 'hsl'\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tlog('error', `Error: ${error}`, 'rgbToHSL()');\n\n\t\t\treturn defaultHSL;\n\t\t}\n\t}\n\n\tfunction rgbToHSV(rgb: RGB): HSV {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(rgb)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid RGB value ${JSON.stringify(rgb)}`,\n\t\t\t\t\t'rgbToHSV()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultHSV;\n\t\t\t}\n\n\t\t\tconst red = (rgb.value.red as unknown as number) / 255;\n\t\t\tconst green = (rgb.value.green as unknown as number) / 255;\n\t\t\tconst blue = (rgb.value.blue as unknown as number) / 255;\n\n\t\t\tconst max = Math.max(red, green, blue);\n\t\t\tconst min = Math.min(red, green, blue);\n\t\t\tconst delta = max - min;\n\n\t\t\tlet hue = 0;\n\n\t\t\tconst value = max;\n\t\t\tconst saturation = max === 0 ? 0 : delta / max;\n\n\t\t\tif (max !== min) {\n\t\t\t\tswitch (max) {\n\t\t\t\t\tcase red:\n\t\t\t\t\t\thue = (green - blue) / delta + (green < blue ? 6 : 0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase green:\n\t\t\t\t\t\thue = (blue - red) / delta + 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase blue:\n\t\t\t\t\t\thue = (red - green) / delta + 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\thue *= 60;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tvalue: {\n\t\t\t\t\thue: utils.brand.asRadial(utils.sanitize.percentile(hue)),\n\t\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\t\tutils.sanitize.percentile(saturation * 100)\n\t\t\t\t\t),\n\t\t\t\t\tvalue: utils.brand.asPercentile(\n\t\t\t\t\t\tutils.sanitize.percentile(value * 100)\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\tformat: 'hsv'\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tlog('error', `Error: ${error}`, 'rgbToHSV()');\n\n\t\t\treturn defaultHSV;\n\t\t}\n\t}\n\n\tfunction rgbToXYZ(rgb: RGB): XYZ {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(rgb)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid RGB value ${JSON.stringify(rgb)}`,\n\t\t\t\t\t'rgbToXYZ()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultXYZ;\n\t\t\t}\n\n\t\t\t// convert RGB values to linear space\n\t\t\tconst red = (rgb.value.red as number) / 255;\n\t\t\tconst green = (rgb.value.green as number) / 255;\n\t\t\tconst blue = (rgb.value.blue as number) / 255;\n\n\t\t\tconst linearRed =\n\t\t\t\tred > 0.04045\n\t\t\t\t\t? Math.pow((red + 0.055) / 1.055, 2.4)\n\t\t\t\t\t: red / 12.92;\n\t\t\tconst linearGreen =\n\t\t\t\tgreen > 0.04045\n\t\t\t\t\t? Math.pow((green + 0.055) / 1.055, 2.4)\n\t\t\t\t\t: green / 12.92;\n\t\t\tconst linearBlue =\n\t\t\t\tblue > 0.04045\n\t\t\t\t\t? Math.pow((blue + 0.055) / 1.055, 2.4)\n\t\t\t\t\t: blue / 12.92;\n\n\t\t\t// scale to 100\n\t\t\tconst scaledRed = linearRed * 100;\n\t\t\tconst scaledGreen = linearGreen * 100;\n\t\t\tconst scaledBlue = linearBlue * 100;\n\n\t\t\tconst x = utils.brand.asXYZ_X(\n\t\t\t\tutils.adjust.clampXYZ(\n\t\t\t\t\tscaledRed * 0.4124 +\n\t\t\t\t\t\tscaledGreen * 0.3576 +\n\t\t\t\t\t\tscaledBlue * 0.1805,\n\t\t\t\t\tlimits.maxX\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst y = utils.brand.asXYZ_Y(\n\t\t\t\tutils.adjust.clampXYZ(\n\t\t\t\t\tscaledRed * 0.2126 +\n\t\t\t\t\t\tscaledGreen * 0.7152 +\n\t\t\t\t\t\tscaledBlue * 0.0722,\n\t\t\t\t\tlimits.maxY\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst z = utils.brand.asXYZ_Z(\n\t\t\t\tutils.adjust.clampXYZ(\n\t\t\t\t\tscaledRed * 0.0193 +\n\t\t\t\t\t\tscaledGreen * 0.1192 +\n\t\t\t\t\t\tscaledBlue * 0.9505,\n\t\t\t\t\tlimits.maxZ\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tconst xyz: XYZ = { value: { x, y, z }, format: 'xyz' };\n\n\t\t\treturn utils.validate.colorValue(xyz) ? xyz : defaultXYZ;\n\t\t} catch (error) {\n\t\t\tlog('error', `Error: ${error}`, 'rgbToXYZ()');\n\n\t\t\treturn defaultXYZ;\n\t\t}\n\t}\n\n\tfunction xyzToLAB(xyz: XYZ): LAB {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(xyz)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid XYZ value ${JSON.stringify(xyz)}`,\n\t\t\t\t\t'xyzToLAB()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultLAB;\n\t\t\t}\n\n\t\t\tconst clonedXYZ = utils.core.clone(xyz);\n\t\t\tconst refX = limits.maxX,\n\t\t\t\trefY = limits.maxY,\n\t\t\t\trefZ = limits.maxZ;\n\n\t\t\tclonedXYZ.value.x = utils.adjust.normalizeXYZ(\n\t\t\t\tclonedXYZ.value.x,\n\t\t\t\trefX\n\t\t\t) as XYZ_X;\n\t\t\tclonedXYZ.value.y = utils.adjust.normalizeXYZ(\n\t\t\t\tclonedXYZ.value.y,\n\t\t\t\trefY\n\t\t\t) as XYZ_Y;\n\t\t\tclonedXYZ.value.z = utils.adjust.normalizeXYZ(\n\t\t\t\tclonedXYZ.value.z,\n\t\t\t\trefZ\n\t\t\t) as XYZ_Z;\n\n\t\t\tclonedXYZ.value.x =\n\t\t\t\tclonedXYZ.value.x > 0.008856\n\t\t\t\t\t? (Math.pow(clonedXYZ.value.x, 1 / 3) as XYZ_X)\n\t\t\t\t\t: ((7.787 * clonedXYZ.value.x + 16 / 116) as XYZ_X);\n\t\t\tclonedXYZ.value.y =\n\t\t\t\tclonedXYZ.value.y > 0.008856\n\t\t\t\t\t? (Math.pow(clonedXYZ.value.y, 1 / 3) as XYZ_Y)\n\t\t\t\t\t: ((7.787 * clonedXYZ.value.y + 16 / 116) as XYZ_Y);\n\t\t\tclonedXYZ.value.z =\n\t\t\t\tclonedXYZ.value.z > 0.008856\n\t\t\t\t\t? (Math.pow(clonedXYZ.value.z, 1 / 3) as XYZ_Z)\n\t\t\t\t\t: ((7.787 * clonedXYZ.value.z + 16 / 116) as XYZ_Z);\n\n\t\t\tconst l = utils.sanitize.percentile(\n\t\t\t\tparseFloat((116 * clonedXYZ.value.y - 16).toFixed(2))\n\t\t\t);\n\t\t\tconst a = utils.sanitize.lab(\n\t\t\t\tparseFloat(\n\t\t\t\t\t(500 * (clonedXYZ.value.x - clonedXYZ.value.y)).toFixed(2)\n\t\t\t\t),\n\t\t\t\t'a'\n\t\t\t);\n\t\t\tconst b = utils.sanitize.lab(\n\t\t\t\tparseFloat(\n\t\t\t\t\t(200 * (clonedXYZ.value.y - clonedXYZ.value.z)).toFixed(2)\n\t\t\t\t),\n\t\t\t\t'b'\n\t\t\t);\n\n\t\t\tconst lab: LAB = {\n\t\t\t\tvalue: {\n\t\t\t\t\tl: utils.brand.asLAB_L(utils.sanitize.percentile(l)),\n\t\t\t\t\ta: utils.brand.asLAB_A(utils.sanitize.percentile(a)),\n\t\t\t\t\tb: utils.brand.asLAB_B(utils.sanitize.percentile(b))\n\t\t\t\t},\n\t\t\t\tformat: 'lab'\n\t\t\t};\n\n\t\t\tif (!utils.validate.colorValue(lab)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid LAB value ${JSON.stringify(lab)}`,\n\t\t\t\t\t'labToXYZ()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultLAB;\n\t\t\t}\n\n\t\t\treturn lab;\n\t\t} catch (error) {\n\t\t\tlog('error', `${error}`, 'xyzToLAB');\n\n\t\t\treturn defaultLAB;\n\t\t}\n\t}\n\n\tfunction xyzToRGB(xyz: XYZ): RGB {\n\t\tconst log = services.log;\n\n\t\ttry {\n\t\t\tif (!utils.validate.colorValue(xyz)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid XYZ value ${JSON.stringify(xyz)}`,\n\t\t\t\t\t'colorUtils > helpers.xyzToRGB()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultRGB;\n\t\t\t}\n\n\t\t\tconst x = (xyz.value.x as unknown as number) / 100;\n\t\t\tconst y = (xyz.value.y as unknown as number) / 100;\n\t\t\tconst z = (xyz.value.z as unknown as number) / 100;\n\n\t\t\tlet red = x * 3.2406 + y * -1.5372 + z * -0.4986;\n\t\t\tlet green = x * -0.9689 + y * 1.8758 + z * 0.0415;\n\t\t\tlet blue = x * 0.0557 + y * -0.204 + z * 1.057;\n\n\t\t\tred = utils.adjust.applyGammaCorrection(red);\n\t\t\tgreen = utils.adjust.applyGammaCorrection(green);\n\t\t\tblue = utils.adjust.applyGammaCorrection(blue);\n\n\t\t\tconst rgb: RGB = utils.adjust.clampRGB({\n\t\t\t\tvalue: {\n\t\t\t\t\tred: utils.brand.asByteRange(\n\t\t\t\t\t\tutils.sanitize.percentile(red)\n\t\t\t\t\t),\n\t\t\t\t\tgreen: utils.brand.asByteRange(\n\t\t\t\t\t\tutils.sanitize.percentile(green)\n\t\t\t\t\t),\n\t\t\t\t\tblue: utils.brand.asByteRange(\n\t\t\t\t\t\tutils.sanitize.percentile(blue)\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\tformat: 'rgb'\n\t\t\t});\n\n\t\t\treturn rgb;\n\t\t} catch (error) {\n\t\t\tlog('warn', `Error: ${error}`, 'xyzToRGB()');\n\n\t\t\treturn defaultRGB;\n\t\t}\n\t}\n\n\treturn {\n\t\tcmykToRGB,\n\t\thexToHSL,\n\t\thexToRGB,\n\t\thslToLAB,\n\t\thslToRGB,\n\t\thsvToSV,\n\t\tlabToRGB,\n\t\tlabToXYZ,\n\t\trgbToCMYK,\n\t\trgbToHex,\n\t\trgbToHSL,\n\t\trgbToHSV,\n\t\trgbToXYZ,\n\t\txyzToRGB,\n\t\txyzToLAB,\n\t\tcmykToHSL(cmyk: CMYK): HSL {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(cmyk)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Invalid CMYK value ${JSON.stringify(cmyk)}`,\n\t\t\t\t\t\t'cmykToHSL()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn defaultHSL;\n\t\t\t\t}\n\n\t\t\t\treturn rgbToHSL(cmykToRGB(utils.core.clone(cmyk)));\n\t\t\t} catch (error) {\n\t\t\t\tlog('error', `Error: ${error}`, 'cmykToHSL()');\n\n\t\t\t\treturn defaultHSL;\n\t\t\t}\n\t\t},\n\t\thexToHSLWrapper(input: string | Hex): HSL {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tconst clonedInput = utils.core.clone(input);\n\n\t\t\t\tconst hex: Hex =\n\t\t\t\t\ttypeof clonedInput === 'string'\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t\thex: utils.brand.asHexSet(clonedInput)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tformat: 'hex'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t\thex: utils.brand.asHexSet(\n\t\t\t\t\t\t\t\t\t\tclonedInput.value.hex\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tformat: 'hex'\n\t\t\t\t\t\t\t};\n\t\t\t\treturn hexToHSL(hex);\n\t\t\t} catch (error) {\n\t\t\t\tlog('error', `Error: ${error}`, 'hexToHSLWrapper()');\n\n\t\t\t\treturn defaultHSL;\n\t\t\t}\n\t\t},\n\t\thslToCMYK(hsl: HSL): CMYK {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(hsl)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Invalid HSL value ${JSON.stringify(hsl)}`,\n\t\t\t\t\t\t'hslToCMYK()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn defaultCMYK;\n\t\t\t\t}\n\n\t\t\t\treturn rgbToCMYK(hslToRGB(utils.core.clone(hsl)));\n\t\t\t} catch (error) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Error converting HSL ${JSON.stringify(hsl)} to CMYK: ${error}`,\n\t\t\t\t\t'colorUtils > helpers.hslToCMYK()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultCMYK;\n\t\t\t}\n\t\t},\n\t\thslToHex(hsl: HSL): Hex {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(hsl)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Invalid HSL value ${JSON.stringify(hsl)}`,\n\t\t\t\t\t\t'hslToHex()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn defaultHex;\n\t\t\t\t}\n\n\t\t\t\treturn rgbToHex(hslToRGB(utils.core.clone(hsl)));\n\t\t\t} catch (error) {\n\t\t\t\tlog('error', `Error: ${error}`, 'hslToHex()');\n\n\t\t\t\treturn defaultHex;\n\t\t\t}\n\t\t},\n\t\thslToHSV(hsl: HSL): HSV {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(hsl)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Invalid HSL value ${JSON.stringify(hsl)}`,\n\t\t\t\t\t\t'hslToHSV()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn defaultHSV;\n\t\t\t\t}\n\n\t\t\t\tconst clonedHSL = utils.core.clone(hsl);\n\t\t\t\tconst s = clonedHSL.value.saturation / 100;\n\t\t\t\tconst l = clonedHSL.value.lightness / 100;\n\t\t\t\tconst value = l + s * Math.min(l, 1 - 1);\n\t\t\t\tconst newSaturation = value === 0 ? 0 : 2 * (1 - l / value);\n\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: utils.brand.asRadial(\n\t\t\t\t\t\t\tutils.sanitize.percentile(clonedHSL.value.hue)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\t\t\tutils.sanitize.percentile(newSaturation * 100)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tvalue: utils.brand.asPercentile(\n\t\t\t\t\t\t\tutils.sanitize.percentile(value * 100)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsv'\n\t\t\t\t};\n\t\t\t} catch (error) {\n\t\t\t\tlog('error', `Error: ${error}`, 'hslToHSV()');\n\n\t\t\t\treturn defaultHSV;\n\t\t\t}\n\t\t},\n\t\thslToSL(hsl: HSL): SL {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(hsl)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Invalid HSL value ${JSON.stringify(hsl)}`,\n\t\t\t\t\t\t'hslToSL()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn defaultSL;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tsaturation: hsl.value.saturation,\n\t\t\t\t\t\tlightness: hsl.value.lightness\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'sl' as 'sl'\n\t\t\t\t};\n\t\t\t} catch (error) {\n\t\t\t\tlog('error', `Error: ${error}`, 'hslToSL()');\n\n\t\t\t\treturn defaultSL;\n\t\t\t}\n\t\t},\n\t\thslToSV(hsl: HSL): SV {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(hsl)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Invalid HSL value ${JSON.stringify(hsl)}`,\n\t\t\t\t\t\t'hslToSV()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn defaultSV;\n\t\t\t\t}\n\n\t\t\t\treturn hsvToSV(rgbToHSV(hslToRGB(utils.core.clone(hsl))));\n\t\t\t} catch (error) {\n\t\t\t\tlog('error', `Error: ${error}`, 'hsvToSV()');\n\n\t\t\t\treturn defaultSV;\n\t\t\t}\n\t\t},\n\t\thslToXYZ(hsl: HSL): XYZ {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(hsl)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Invalid HSL value ${JSON.stringify(hsl)}`,\n\t\t\t\t\t\t'hslToXYZ()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn defaultXYZ;\n\t\t\t\t}\n\n\t\t\t\treturn labToXYZ(hslToLAB(utils.core.clone(hsl)));\n\t\t\t} catch (error) {\n\t\t\t\tlog('error', `hslToXYZ error: ${error}`, 'labToXYZ()');\n\n\t\t\t\treturn defaultXYZ;\n\t\t\t}\n\t\t},\n\t\thsvToHSL(hsv: HSV): HSL {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(hsv)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Invalid HSV value ${JSON.stringify(hsv)}`,\n\t\t\t\t\t\t'hsvToHSL()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn defaultHSL;\n\t\t\t\t}\n\n\t\t\t\tconst clonedHSV = utils.core.clone(hsv);\n\n\t\t\t\tconst s = clonedHSV.value.saturation / 100;\n\t\t\t\tconst v = clonedHSV.value.value / 100;\n\t\t\t\tconst l = v * (1 - s / 2);\n\n\t\t\t\tconst newSaturation =\n\t\t\t\t\tl === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n\t\t\t\tconst lightness =\n\t\t\t\t\tclonedHSV.value.value *\n\t\t\t\t\t(1 - clonedHSV.value.saturation / 200);\n\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: utils.brand.asRadial(\n\t\t\t\t\t\t\tutils.sanitize.percentile(clonedHSV.value.hue)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\t\t\tutils.sanitize.percentile(newSaturation * 100)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\t\t\tutils.sanitize.percentile(lightness)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t};\n\t\t\t} catch (error) {\n\t\t\t\tlog('error', `Error: ${error}`, 'hsvToHSL()');\n\n\t\t\t\treturn defaultHSL;\n\t\t\t}\n\t\t},\n\t\tlabToHSL(lab: LAB): HSL {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(lab)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Invalid LAB value ${JSON.stringify(lab)}`,\n\t\t\t\t\t\t'labToHSL()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn defaultHSL;\n\t\t\t\t}\n\n\t\t\t\treturn rgbToHSL(labToRGB(utils.core.clone(lab)));\n\t\t\t} catch (error) {\n\t\t\t\tlog('error', `Error: ${error}`, 'labToHSL()');\n\n\t\t\t\treturn defaultHSL;\n\t\t\t}\n\t\t},\n\t\txyzToHSL(xyz: XYZ): HSL {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(xyz)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Invalid XYZ value ${JSON.stringify(xyz)}`,\n\t\t\t\t\t\t'xyzToHSL()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn defaultHSL;\n\t\t\t\t}\n\n\t\t\t\treturn rgbToHSL(xyzToRGB(utils.core.clone(xyz)));\n\t\t\t} catch (error) {\n\t\t\t\tlog('error', `Error: ${error}`, 'xyzToHSL()');\n\n\t\t\t\treturn defaultHSL;\n\t\t\t}\n\t\t}\n\t};\n}\n"],"names":[],"mappings":";;AAAA;AAqBA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI;AACtB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM;AAE1B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAE9B,MAAM,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI;AACxC,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG;AACtC,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG;AACtC,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG;AACtC,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG;AACtC,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG;AACtC,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAE;AACpC,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAE;AACpC,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG;AAEtB,SAAA,kBAAkB,CACjC,QAA2B,EAC3B,KAAyB,EAAA;IAEzB,SAAS,SAAS,CAAC,IAAU,EAAA;AAC5B,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AACrC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,mBAAA,EAAsB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA,CAAE,EAC5C,aAAa,CACb;AAED,gBAAA,OAAO,UAAU;;YAGlB,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACzC,MAAM,CAAC,GACN,GAAG;iBACF,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;iBAChC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;YACjC,MAAM,CAAC,GACN,GAAG;iBACF,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;iBACnC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;YACjC,MAAM,CAAC,GACN,GAAG;iBACF,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;iBAClC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;AACjC,YAAA,MAAM,GAAG,GAAQ;AAChB,gBAAA,KAAK,EAAE;AACN,oBAAA,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC1D,oBAAA,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAC7B,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAC5B;AACD,oBAAA,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1D,iBAAA;AACD,gBAAA,MAAM,EAAE;aACR;YAED,OAAO,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC;;QAChC,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,aAAa,CAAC;AAE9C,YAAA,OAAO,UAAU;;;IAInB,SAAS,QAAQ,CAAC,GAAQ,EAAA;AACzB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,gBAAA,OAAO,UAAU;;AAGlB,YAAA,OAAO,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;QAC/C,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,YAAA,OAAO,UAAU;;;IAInB,SAAS,QAAQ,CAAC,GAAQ,EAAA;AACzB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,gBAAA,OAAO,UAAU;;YAGlB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACvC,YAAA,MAAM,WAAW,GAChB,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,GAAG;YACnD,MAAM,MAAM,GAAG,QAAQ,CAAC,WAAW,EAAE,EAAE,CAAC;YAExC,OAAO;AACN,gBAAA,KAAK,EAAE;oBACN,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAC3B,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,MAAM,IAAI,EAAE,IAAI,GAAG,CAAC,CAC/C;oBACD,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAC7B,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,CAC9C;AACD,oBAAA,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAC5B,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,GAAG,CAAC;AAExC,iBAAA;AACD,gBAAA,MAAM,EAAE;aACR;;QACA,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,YAAA,OAAO,UAAU;;;IAInB,SAAS,QAAQ,CAAC,GAAQ,EAAA;AACzB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,gBAAA,OAAO,UAAU;;AAGlB,YAAA,OAAO,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;QACzD,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,YAAA,OAAO,UAAU;;;IAInB,SAAS,QAAQ,CAAC,GAAQ,EAAA;AACzB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,gBAAA,OAAO,UAAU;;YAGlB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;YACvC,MAAM,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG;YAErC,MAAM,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG;YAC1C,MAAM,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG;YACzC,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AAC/C,YAAA,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;YAEnB,OAAO;AACN,gBAAA,KAAK,EAAE;AACN,oBAAA,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAC3B,KAAK,CAAC,QAAQ,CAAC,UAAU,CACxB,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAC7C,CACD;AACD,oBAAA,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAC7B,KAAK,CAAC,QAAQ,CAAC,UAAU,CACxB,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CACrC,CACD;AACD,oBAAA,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAC5B,KAAK,CAAC,QAAQ,CAAC,UAAU,CACxB,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAC7C;AAEF,iBAAA;AACD,gBAAA,MAAM,EAAE;aACR;;QACA,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,YAAA,OAAO,UAAU;;;IAInB,SAAS,OAAO,CAAC,GAAQ,EAAA;AACxB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,WAAW,CACX;AAED,gBAAA,OAAO,SAAS;;YAGjB,OAAO;AACN,gBAAA,KAAK,EAAE;AACN,oBAAA,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU;AAChC,oBAAA,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC;AACjB,iBAAA;AACD,gBAAA,MAAM,EAAE;aACR;;QACA,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,WAAW,CAAC;AAE5C,YAAA,OAAO,SAAS;;;IAIlB,SAAS,QAAQ,CAAC,GAAQ,EAAA;AACzB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,gBAAA,OAAO,UAAU;;AAGlB,YAAA,OAAO,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;QAC/C,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,QAAA,EAAW,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE9C,YAAA,OAAO,UAAU;;;IAInB,SAAS,QAAQ,CAAC,GAAQ,EAAA;AACzB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,gBAAA,OAAO,UAAU;;YAGlB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;YACvC,MAAM,IAAI,GAAG,MAAM,EAClB,IAAI,GAAG,KAAK,EACZ,IAAI,GAAG,OAAO;AAEf,YAAA,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG;YACtC,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;YACnC,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG;AAEnC,YAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG;YAEpB,OAAO;AACN,gBAAA,KAAK,EAAE;AACN,oBAAA,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CACrB,KAAK,CAAC,QAAQ,CAAC,UAAU,CACxB,IAAI;AACH,yBAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG;AACZ,8BAAE,GAAG,CAAC,CAAC,EAAE,CAAC;AACV,8BAAE,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,KAAK,CAAC,CAC3B,CACD;AACD,oBAAA,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CACrB,KAAK,CAAC,QAAQ,CAAC,UAAU,CACxB,IAAI;AACH,yBAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG;AACZ,8BAAE,GAAG,CAAC,CAAC,EAAE,CAAC;AACV,8BAAE,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,KAAK,CAAC,CAC3B,CACD;AACD,oBAAA,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CACrB,KAAK,CAAC,QAAQ,CAAC,UAAU,CACxB,IAAI;AACH,yBAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG;AACZ,8BAAE,GAAG,CAAC,CAAC,EAAE,CAAC;AACV,8BAAE,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,KAAK,CAAC,CAC3B;AAEF,iBAAA;AACD,gBAAA,MAAM,EAAE;aACR;;QACA,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,YAAA,OAAO,UAAU;;;IAInB,SAAS,SAAS,CAAC,GAAQ,EAAA;AAC1B,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,aAAa,CACb;AAED,gBAAA,OAAO,WAAW;;YAGnB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;YAEvC,MAAM,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG;YAC1C,MAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG;YAC9C,MAAM,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG;AAE5C,YAAA,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,CACpC,KAAK,CAAC,QAAQ,CAAC,UAAU,CACxB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC,CAC7C,CACD;AACD,YAAA,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,CACrC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAChE;AACD,YAAA,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,CACxC,KAAK,CAAC,QAAQ,CAAC,UAAU,CACxB,CAAC,CAAC,GAAG,UAAU,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CACvC,CACD;AACD,YAAA,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,CACvC,KAAK,CAAC,QAAQ,CAAC,UAAU,CACxB,CAAC,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CACtC,CACD;YACD,MAAM,MAAM,GAAW,MAAM;AAE7B,YAAA,MAAM,IAAI,GAAG,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE;AAE9D,YAAA,GAAG,CACF,OAAO,EACP,CAAA,cAAA,EAAiB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAa,UAAA,EAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAA,CAAE,EAC/F,aAAa,EACb,CAAC,CACD;AAED,YAAA,OAAO,IAAI;;QACV,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,aAAa,CAAC;AAE9C,YAAA,OAAO,WAAW;;;IAIpB,SAAS,QAAQ,CAAC,GAAQ,EAAA;AACzB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,gBAAA,OAAO,UAAU;;YAGlB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;YAEvC,IACC;gBACC,SAAS,CAAC,KAAK,CAAC,GAAG;gBACnB,SAAS,CAAC,KAAK,CAAC,KAAK;gBACrB,SAAS,CAAC,KAAK,CAAC;aAChB,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EACxC;AACD,gBAAA,GAAG,CACF,OAAO,EACP,0BAA0B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EACtJ,YAAY,CACZ;gBAED,OAAO;AACN,oBAAA,KAAK,EAAE;wBACN,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW;AACrC,qBAAA;AACD,oBAAA,MAAM,EAAE;iBACR;;YAGF,OAAO;AACN,gBAAA,KAAK,EAAE;oBACN,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,CACxB,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,EAAG,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA,EAAG,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,CAAE;AAEhK,iBAAA;AACD,gBAAA,MAAM,EAAE;aACR;;QACA,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,YAAA,OAAO,UAAU;;;IAInB,SAAS,QAAQ,CAAC,GAAQ,EAAA;AACzB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,gBAAA,OAAO,UAAU;;YAGlB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;YAEvC,MAAM,GAAG,GAAI,SAAS,CAAC,KAAK,CAAC,GAAyB,GAAG,GAAG;YAC5D,MAAM,KAAK,GAAI,SAAS,CAAC,KAAK,CAAC,KAA2B,GAAG,GAAG;YAChE,MAAM,IAAI,GAAI,SAAS,CAAC,KAAK,CAAC,IAA0B,GAAG,GAAG;AAE9D,YAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC;AACtC,YAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC;AAEtC,YAAA,IAAI,GAAG,GAAG,CAAC,EACV,UAAU,GAAG,CAAC,EACd,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC;AAE5B,YAAA,IAAI,GAAG,KAAK,GAAG,EAAE;AAChB,gBAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG;gBAEvB,UAAU;AACT,oBAAA,SAAS,GAAG;0BACT,KAAK,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG;0BACtB,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;gBAEvB,QAAQ,GAAG;AACV,oBAAA,KAAK,GAAG;wBACP,GAAG,GAAG,CAAC,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;wBACrD;AACD,oBAAA,KAAK,KAAK;wBACT,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,KAAK,GAAG,CAAC;wBAC9B;AACD,oBAAA,KAAK,IAAI;wBACR,GAAG,GAAG,CAAC,GAAG,GAAG,KAAK,IAAI,KAAK,GAAG,CAAC;wBAC/B;;gBAEF,GAAG,IAAI,EAAE;;YAGV,OAAO;AACN,gBAAA,KAAK,EAAE;AACN,oBAAA,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACzD,oBAAA,UAAU,EAAE,KAAK,CAAC,KAAK,CAAC,YAAY,CACnC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,GAAG,GAAG,CAAC,CAC3C;AACD,oBAAA,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,YAAY,CAClC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,GAAG,GAAG,CAAC;AAE3C,iBAAA;AACD,gBAAA,MAAM,EAAE;aACR;;QACA,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,YAAA,OAAO,UAAU;;;IAInB,SAAS,QAAQ,CAAC,GAAQ,EAAA;AACzB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,gBAAA,OAAO,UAAU;;YAGlB,MAAM,GAAG,GAAI,GAAG,CAAC,KAAK,CAAC,GAAyB,GAAG,GAAG;YACtD,MAAM,KAAK,GAAI,GAAG,CAAC,KAAK,CAAC,KAA2B,GAAG,GAAG;YAC1D,MAAM,IAAI,GAAI,GAAG,CAAC,KAAK,CAAC,IAA0B,GAAG,GAAG;AAExD,YAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC;AACtC,YAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC;AACtC,YAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG;YAEvB,IAAI,GAAG,GAAG,CAAC;YAEX,MAAM,KAAK,GAAG,GAAG;AACjB,YAAA,MAAM,UAAU,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG;AAE9C,YAAA,IAAI,GAAG,KAAK,GAAG,EAAE;gBAChB,QAAQ,GAAG;AACV,oBAAA,KAAK,GAAG;wBACP,GAAG,GAAG,CAAC,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;wBACrD;AACD,oBAAA,KAAK,KAAK;wBACT,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,KAAK,GAAG,CAAC;wBAC9B;AACD,oBAAA,KAAK,IAAI;wBACR,GAAG,GAAG,CAAC,GAAG,GAAG,KAAK,IAAI,KAAK,GAAG,CAAC;wBAC/B;;gBAGF,GAAG,IAAI,EAAE;;YAGV,OAAO;AACN,gBAAA,KAAK,EAAE;AACN,oBAAA,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACzD,oBAAA,UAAU,EAAE,KAAK,CAAC,KAAK,CAAC,YAAY,CACnC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,GAAG,GAAG,CAAC,CAC3C;AACD,oBAAA,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,YAAY,CAC9B,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC;AAEvC,iBAAA;AACD,gBAAA,MAAM,EAAE;aACR;;QACA,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,YAAA,OAAO,UAAU;;;IAInB,SAAS,QAAQ,CAAC,GAAQ,EAAA;AACzB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,gBAAA,OAAO,UAAU;;;YAIlB,MAAM,GAAG,GAAI,GAAG,CAAC,KAAK,CAAC,GAAc,GAAG,GAAG;YAC3C,MAAM,KAAK,GAAI,GAAG,CAAC,KAAK,CAAC,KAAgB,GAAG,GAAG;YAC/C,MAAM,IAAI,GAAI,GAAG,CAAC,KAAK,CAAC,IAAe,GAAG,GAAG;AAE7C,YAAA,MAAM,SAAS,GACd,GAAG,GAAG;AACL,kBAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG;AACrC,kBAAE,GAAG,GAAG,KAAK;AACf,YAAA,MAAM,WAAW,GAChB,KAAK,GAAG;AACP,kBAAE,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG;AACvC,kBAAE,KAAK,GAAG,KAAK;AACjB,YAAA,MAAM,UAAU,GACf,IAAI,GAAG;AACN,kBAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG;AACtC,kBAAE,IAAI,GAAG,KAAK;;AAGhB,YAAA,MAAM,SAAS,GAAG,SAAS,GAAG,GAAG;AACjC,YAAA,MAAM,WAAW,GAAG,WAAW,GAAG,GAAG;AACrC,YAAA,MAAM,UAAU,GAAG,UAAU,GAAG,GAAG;AAEnC,YAAA,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAC5B,KAAK,CAAC,MAAM,CAAC,QAAQ,CACpB,SAAS,GAAG,MAAM;AACjB,gBAAA,WAAW,GAAG,MAAM;gBACpB,UAAU,GAAG,MAAM,EACpB,MAAM,CAAC,IAAI,CACX,CACD;AACD,YAAA,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAC5B,KAAK,CAAC,MAAM,CAAC,QAAQ,CACpB,SAAS,GAAG,MAAM;AACjB,gBAAA,WAAW,GAAG,MAAM;gBACpB,UAAU,GAAG,MAAM,EACpB,MAAM,CAAC,IAAI,CACX,CACD;AACD,YAAA,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAC5B,KAAK,CAAC,MAAM,CAAC,QAAQ,CACpB,SAAS,GAAG,MAAM;AACjB,gBAAA,WAAW,GAAG,MAAM;gBACpB,UAAU,GAAG,MAAM,EACpB,MAAM,CAAC,IAAI,CACX,CACD;AAED,YAAA,MAAM,GAAG,GAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;AAEtD,YAAA,OAAO,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,UAAU;;QACvD,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,YAAA,OAAO,UAAU;;;IAInB,SAAS,QAAQ,CAAC,GAAQ,EAAA;AACzB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,gBAAA,OAAO,UAAU;;YAGlB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACvC,YAAA,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,EACvB,IAAI,GAAG,MAAM,CAAC,IAAI,EAClB,IAAI,GAAG,MAAM,CAAC,IAAI;AAEnB,YAAA,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAC5C,SAAS,CAAC,KAAK,CAAC,CAAC,EACjB,IAAI,CACK;AACV,YAAA,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAC5C,SAAS,CAAC,KAAK,CAAC,CAAC,EACjB,IAAI,CACK;AACV,YAAA,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAC5C,SAAS,CAAC,KAAK,CAAC,CAAC,EACjB,IAAI,CACK;YAEV,SAAS,CAAC,KAAK,CAAC,CAAC;AAChB,gBAAA,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG;AACnB,sBAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;AACpC,uBAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,CAAW;YACrD,SAAS,CAAC,KAAK,CAAC,CAAC;AAChB,gBAAA,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG;AACnB,sBAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;AACpC,uBAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,CAAW;YACrD,SAAS,CAAC,KAAK,CAAC,CAAC;AAChB,gBAAA,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG;AACnB,sBAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;AACpC,uBAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,CAAW;AAErD,YAAA,MAAM,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,CAClC,UAAU,CAAC,CAAC,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CACrD;AACD,YAAA,MAAM,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAC3B,UAAU,CACT,CAAC,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAC1D,EACD,GAAG,CACH;AACD,YAAA,MAAM,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAC3B,UAAU,CACT,CAAC,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAC1D,EACD,GAAG,CACH;AAED,YAAA,MAAM,GAAG,GAAQ;AAChB,gBAAA,KAAK,EAAE;AACN,oBAAA,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACpD,oBAAA,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACpD,oBAAA,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;AACnD,iBAAA;AACD,gBAAA,MAAM,EAAE;aACR;YAED,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,gBAAA,OAAO,UAAU;;AAGlB,YAAA,OAAO,GAAG;;QACT,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,OAAO,EAAE,CAAA,EAAG,KAAK,CAAE,CAAA,EAAE,UAAU,CAAC;AAEpC,YAAA,OAAO,UAAU;;;IAInB,SAAS,QAAQ,CAAC,GAAQ,EAAA;AACzB,QAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,QAAA,IAAI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,iCAAiC,CACjC;AAED,gBAAA,OAAO,UAAU;;YAGlB,MAAM,CAAC,GAAI,GAAG,CAAC,KAAK,CAAC,CAAuB,GAAG,GAAG;YAClD,MAAM,CAAC,GAAI,GAAG,CAAC,KAAK,CAAC,CAAuB,GAAG,GAAG;YAClD,MAAM,CAAC,GAAI,GAAG,CAAC,KAAK,CAAC,CAAuB,GAAG,GAAG;AAElD,YAAA,IAAI,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,MAAM;AAChD,YAAA,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,MAAM;AACjD,YAAA,IAAI,IAAI,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK;YAE9C,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC;YAC5C,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC;YAChD,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC;AAE9C,YAAA,MAAM,GAAG,GAAQ,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC;AACtC,gBAAA,KAAK,EAAE;AACN,oBAAA,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAC3B,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAC9B;AACD,oBAAA,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAC7B,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAChC;AACD,oBAAA,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAC5B,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC;AAEhC,iBAAA;AACD,gBAAA,MAAM,EAAE;AACR,aAAA,CAAC;AAEF,YAAA,OAAO,GAAG;;QACT,OAAO,KAAK,EAAE;YACf,GAAG,CAAC,MAAM,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE5C,YAAA,OAAO,UAAU;;;IAInB,OAAO;QACN,SAAS;QACT,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;AACR,QAAA,SAAS,CAAC,IAAU,EAAA;AACnB,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,YAAA,IAAI;gBACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AACrC,oBAAA,GAAG,CACF,OAAO,EACP,CAAA,mBAAA,EAAsB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA,CAAE,EAC5C,aAAa,CACb;AAED,oBAAA,OAAO,UAAU;;AAGlB,gBAAA,OAAO,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;;YACjD,OAAO,KAAK,EAAE;gBACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,aAAa,CAAC;AAE9C,gBAAA,OAAO,UAAU;;SAElB;AACD,QAAA,eAAe,CAAC,KAAmB,EAAA;AAClC,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,YAAA,IAAI;gBACH,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;AAE3C,gBAAA,MAAM,GAAG,GACR,OAAO,WAAW,KAAK;AACtB,sBAAE;AACA,wBAAA,KAAK,EAAE;4BACN,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW;AACrC,yBAAA;AACD,wBAAA,MAAM,EAAE;AACR;AACF,sBAAE;AACA,wBAAA,KAAK,EAAE;AACN,4BAAA,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,CACxB,WAAW,CAAC,KAAK,CAAC,GAAG;AAEtB,yBAAA;AACD,wBAAA,MAAM,EAAE;qBACR;AACJ,gBAAA,OAAO,QAAQ,CAAC,GAAG,CAAC;;YACnB,OAAO,KAAK,EAAE;gBACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,mBAAmB,CAAC;AAEpD,gBAAA,OAAO,UAAU;;SAElB;AACD,QAAA,SAAS,CAAC,GAAQ,EAAA;AACjB,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,YAAA,IAAI;gBACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,oBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,aAAa,CACb;AAED,oBAAA,OAAO,WAAW;;AAGnB,gBAAA,OAAO,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;YAChD,OAAO,KAAK,EAAE;AACf,gBAAA,GAAG,CACF,OAAO,EACP,CAAwB,qBAAA,EAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,KAAK,CAAA,CAAE,EAC/D,kCAAkC,CAClC;AAED,gBAAA,OAAO,WAAW;;SAEnB;AACD,QAAA,QAAQ,CAAC,GAAQ,EAAA;AAChB,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,YAAA,IAAI;gBACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,oBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,oBAAA,OAAO,UAAU;;AAGlB,gBAAA,OAAO,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;YAC/C,OAAO,KAAK,EAAE;gBACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,gBAAA,OAAO,UAAU;;SAElB;AACD,QAAA,QAAQ,CAAC,GAAQ,EAAA;AAChB,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,YAAA,IAAI;gBACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,oBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,oBAAA,OAAO,UAAU;;gBAGlB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;gBACvC,MAAM,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG;gBAC1C,MAAM,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG;AACzC,gBAAA,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACxC,MAAM,aAAa,GAAG,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;gBAE3D,OAAO;AACN,oBAAA,KAAK,EAAE;AACN,wBAAA,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,CACxB,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAC9C;AACD,wBAAA,UAAU,EAAE,KAAK,CAAC,KAAK,CAAC,YAAY,CACnC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,GAAG,GAAG,CAAC,CAC9C;AACD,wBAAA,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,YAAY,CAC9B,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC;AAEvC,qBAAA;AACD,oBAAA,MAAM,EAAE;iBACR;;YACA,OAAO,KAAK,EAAE;gBACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,gBAAA,OAAO,UAAU;;SAElB;AACD,QAAA,OAAO,CAAC,GAAQ,EAAA;AACf,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,YAAA,IAAI;gBACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,oBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,WAAW,CACX;AAED,oBAAA,OAAO,SAAS;;gBAGjB,OAAO;AACN,oBAAA,KAAK,EAAE;AACN,wBAAA,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU;AAChC,wBAAA,SAAS,EAAE,GAAG,CAAC,KAAK,CAAC;AACrB,qBAAA;AACD,oBAAA,MAAM,EAAE;iBACR;;YACA,OAAO,KAAK,EAAE;gBACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,WAAW,CAAC;AAE5C,gBAAA,OAAO,SAAS;;SAEjB;AACD,QAAA,OAAO,CAAC,GAAQ,EAAA;AACf,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,YAAA,IAAI;gBACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,oBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,WAAW,CACX;AAED,oBAAA,OAAO,SAAS;;AAGjB,gBAAA,OAAO,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;YACxD,OAAO,KAAK,EAAE;gBACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,WAAW,CAAC;AAE5C,gBAAA,OAAO,SAAS;;SAEjB;AACD,QAAA,QAAQ,CAAC,GAAQ,EAAA;AAChB,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,YAAA,IAAI;gBACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,oBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,oBAAA,OAAO,UAAU;;AAGlB,gBAAA,OAAO,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;YAC/C,OAAO,KAAK,EAAE;gBACf,GAAG,CAAC,OAAO,EAAE,CAAA,gBAAA,EAAmB,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAEtD,gBAAA,OAAO,UAAU;;SAElB;AACD,QAAA,QAAQ,CAAC,GAAQ,EAAA;AAChB,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,YAAA,IAAI;gBACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,oBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,oBAAA,OAAO,UAAU;;gBAGlB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;gBAEvC,MAAM,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG;gBAC1C,MAAM,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG;gBACrC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAEzB,gBAAA,MAAM,aAAa,GAClB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACtD,gBAAA,MAAM,SAAS,GACd,SAAS,CAAC,KAAK,CAAC,KAAK;qBACpB,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC;gBAEvC,OAAO;AACN,oBAAA,KAAK,EAAE;AACN,wBAAA,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,CACxB,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAC9C;AACD,wBAAA,UAAU,EAAE,KAAK,CAAC,KAAK,CAAC,YAAY,CACnC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,GAAG,GAAG,CAAC,CAC9C;AACD,wBAAA,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,YAAY,CAClC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC;AAErC,qBAAA;AACD,oBAAA,MAAM,EAAE;iBACR;;YACA,OAAO,KAAK,EAAE;gBACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,gBAAA,OAAO,UAAU;;SAElB;AACD,QAAA,QAAQ,CAAC,GAAQ,EAAA;AAChB,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,YAAA,IAAI;gBACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,oBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,oBAAA,OAAO,UAAU;;AAGlB,gBAAA,OAAO,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;YAC/C,OAAO,KAAK,EAAE;gBACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,gBAAA,OAAO,UAAU;;SAElB;AACD,QAAA,QAAQ,CAAC,GAAQ,EAAA;AAChB,YAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG;AAExB,YAAA,IAAI;gBACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACpC,oBAAA,GAAG,CACF,OAAO,EACP,CAAA,kBAAA,EAAqB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,EAC1C,YAAY,CACZ;AAED,oBAAA,OAAO,UAAU;;AAGlB,gBAAA,OAAO,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;YAC/C,OAAO,KAAK,EAAE;gBACf,GAAG,CAAC,OAAO,EAAE,CAAA,OAAA,EAAU,KAAK,CAAE,CAAA,EAAE,YAAY,CAAC;AAE7C,gBAAA,OAAO,UAAU;;;KAGnB;AACF;;;;"}