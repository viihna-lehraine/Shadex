// File: common/helpers/dom.js
import { coreUtils } from '../core.js';
import { createLogger } from '../../logger/index.js';
import { modeData as mode } from '../../data/mode.js';
const logMode = mode.logging;
const thisModule = 'common/helpers/dom.js';
const logger = await createLogger();
async function validateAndConvertColor(color) {
    const thisMethod = 'validateAndConvertColor()';
    if (!color)
        return null;
    const convertedColor = coreUtils.guards.isColorString(color)
        ? await coreUtils.convert.colorStringToColor(color)
        : color;
    if (!coreUtils.validate.colorValues(convertedColor)) {
        if (logMode.error)
            logger.error(`Invalid color: ${JSON.stringify(convertedColor)}`, `${thisModule} > ${thisMethod}`);
        return null;
    }
    return convertedColor;
}
export const domHelpers = {
    validateAndConvertColor
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbW1vbi9oZWxwZXJzL2RvbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4QkFBOEI7QUFPOUIsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN2QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDckQsT0FBTyxFQUFFLFFBQVEsSUFBSSxJQUFJLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUV0RCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO0FBRTdCLE1BQU0sVUFBVSxHQUFHLHVCQUF1QixDQUFDO0FBRTNDLE1BQU0sTUFBTSxHQUFHLE1BQU0sWUFBWSxFQUFFLENBQUM7QUFFcEMsS0FBSyxVQUFVLHVCQUF1QixDQUNyQyxLQUF1QztJQUV2QyxNQUFNLFVBQVUsR0FBRywyQkFBMkIsQ0FBQztJQUUvQyxJQUFJLENBQUMsS0FBSztRQUFFLE9BQU8sSUFBSSxDQUFDO0lBRXhCLE1BQU0sY0FBYyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQztRQUMzRCxDQUFDLENBQUMsTUFBTSxTQUFTLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQztRQUNuRCxDQUFDLENBQUMsS0FBSyxDQUFDO0lBRVQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUM7UUFDckQsSUFBSSxPQUFPLENBQUMsS0FBSztZQUNoQixNQUFNLENBQUMsS0FBSyxDQUNYLGtCQUFrQixJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxFQUFFLEVBQ2xELEdBQUcsVUFBVSxNQUFNLFVBQVUsRUFBRSxDQUMvQixDQUFDO1FBRUgsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsT0FBTyxjQUFjLENBQUM7QUFDdkIsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBK0M7SUFDckUsdUJBQXVCO0NBQ2QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGU6IGNvbW1vbi9oZWxwZXJzL2RvbS5qc1xuXG5pbXBvcnQge1xuXHRDb2xvcixcblx0Q29sb3JfU3RyaW5nUHJvcHMsXG5cdENvbW1vbkZuX01hc3RlckludGVyZmFjZVxufSBmcm9tICcuLi8uLi90eXBlcy9pbmRleC5qcyc7XG5pbXBvcnQgeyBjb3JlVXRpbHMgfSBmcm9tICcuLi9jb3JlLmpzJztcbmltcG9ydCB7IGNyZWF0ZUxvZ2dlciB9IGZyb20gJy4uLy4uL2xvZ2dlci9pbmRleC5qcyc7XG5pbXBvcnQgeyBtb2RlRGF0YSBhcyBtb2RlIH0gZnJvbSAnLi4vLi4vZGF0YS9tb2RlLmpzJztcblxuY29uc3QgbG9nTW9kZSA9IG1vZGUubG9nZ2luZztcblxuY29uc3QgdGhpc01vZHVsZSA9ICdjb21tb24vaGVscGVycy9kb20uanMnO1xuXG5jb25zdCBsb2dnZXIgPSBhd2FpdCBjcmVhdGVMb2dnZXIoKTtcblxuYXN5bmMgZnVuY3Rpb24gdmFsaWRhdGVBbmRDb252ZXJ0Q29sb3IoXG5cdGNvbG9yOiBDb2xvciB8IENvbG9yX1N0cmluZ1Byb3BzIHwgbnVsbFxuKTogUHJvbWlzZTxDb2xvciB8IG51bGw+IHtcblx0Y29uc3QgdGhpc01ldGhvZCA9ICd2YWxpZGF0ZUFuZENvbnZlcnRDb2xvcigpJztcblxuXHRpZiAoIWNvbG9yKSByZXR1cm4gbnVsbDtcblxuXHRjb25zdCBjb252ZXJ0ZWRDb2xvciA9IGNvcmVVdGlscy5ndWFyZHMuaXNDb2xvclN0cmluZyhjb2xvcilcblx0XHQ/IGF3YWl0IGNvcmVVdGlscy5jb252ZXJ0LmNvbG9yU3RyaW5nVG9Db2xvcihjb2xvcilcblx0XHQ6IGNvbG9yO1xuXG5cdGlmICghY29yZVV0aWxzLnZhbGlkYXRlLmNvbG9yVmFsdWVzKGNvbnZlcnRlZENvbG9yKSkge1xuXHRcdGlmIChsb2dNb2RlLmVycm9yKVxuXHRcdFx0bG9nZ2VyLmVycm9yKFxuXHRcdFx0XHRgSW52YWxpZCBjb2xvcjogJHtKU09OLnN0cmluZ2lmeShjb252ZXJ0ZWRDb2xvcil9YCxcblx0XHRcdFx0YCR7dGhpc01vZHVsZX0gPiAke3RoaXNNZXRob2R9YFxuXHRcdFx0KTtcblxuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cmV0dXJuIGNvbnZlcnRlZENvbG9yO1xufVxuXG5leHBvcnQgY29uc3QgZG9tSGVscGVyczogQ29tbW9uRm5fTWFzdGVySW50ZXJmYWNlWydoZWxwZXJzJ11bJ2RvbSddID0ge1xuXHR2YWxpZGF0ZUFuZENvbnZlcnRDb2xvclxufSBhcyBjb25zdDtcbiJdfQ==