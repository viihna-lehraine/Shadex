{"version":3,"file":"color.js","sources":["../../../../../src/common/utils/color.ts"],"sourcesContent":["// File: common/utils/color.js\n\nimport {\n\tCMYK,\n\tCMYKStringObject,\n\tColor,\n\tColorDataAssertion,\n\tColorSpaceExtended,\n\tColorStringObject,\n\tColorUtilsInterface,\n\tHelpersInterface,\n\tHex,\n\tHexStringObject,\n\tHSL,\n\tHSLStringObject,\n\tHSV,\n\tHSVStringObject,\n\tLAB,\n\tLABStringObject,\n\tRangeKeyMap,\n\tRGB,\n\tRGBStringObject,\n\tServicesInterface,\n\tSL,\n\tSV,\n\tUtilitiesInterface,\n\tXYZ,\n\tXYZStringObject\n} from '../../types/index.js';\nimport { data } from '../../data/index.js';\n\nconst config = data.config;\nconst defaultColors = data.defaults.colors;\nconst defaultColorStrings = data.defaults.colors.strings;\n\nexport function createColorUtils(\n\thelpers: HelpersInterface,\n\tservices: ServicesInterface,\n\tutils: UtilitiesInterface\n): ColorUtilsInterface {\n\tfunction convertColorStringToColor(colorString: ColorStringObject): Color {\n\t\tconst clonedColor = utils.core.clone(colorString);\n\n\t\tconst parseValue = (value: string | number): number =>\n\t\t\ttypeof value === 'string' && value.endsWith('%')\n\t\t\t\t? parseFloat(value.slice(0, -1))\n\t\t\t\t: Number(value);\n\n\t\tconst newValue = Object.entries(clonedColor.value).reduce(\n\t\t\t(acc, [key, val]) => {\n\t\t\t\tacc[key as keyof (typeof clonedColor)['value']] = parseValue(\n\t\t\t\t\tval\n\t\t\t\t) as never;\n\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t{} as Record<keyof (typeof clonedColor)['value'], number>\n\t\t);\n\n\t\tswitch (clonedColor.format) {\n\t\t\tcase 'cmyk':\n\t\t\t\treturn { format: 'cmyk', value: newValue as CMYK['value'] };\n\t\t\tcase 'hsl':\n\t\t\t\treturn { format: 'hsl', value: newValue as HSL['value'] };\n\t\t\tcase 'hsv':\n\t\t\t\treturn { format: 'hsv', value: newValue as HSV['value'] };\n\t\t\tcase 'sl':\n\t\t\t\treturn { format: 'sl', value: newValue as SL['value'] };\n\t\t\tcase 'sv':\n\t\t\t\treturn { format: 'sv', value: newValue as SV['value'] };\n\t\t\tdefault:\n\t\t\t\tconsole.error('Unsupported format for colorStringToColor');\n\n\t\t\t\tconst unbrandedHSL = defaultColors.hsl;\n\n\t\t\t\tconst brandedHue = utils.brand.asRadial(unbrandedHSL.value.hue);\n\t\t\t\tconst brandedSaturation = utils.brand.asPercentile(\n\t\t\t\t\tunbrandedHSL.value.saturation\n\t\t\t\t);\n\t\t\t\tconst brandedLightness = utils.brand.asPercentile(\n\t\t\t\t\tunbrandedHSL.value.lightness\n\t\t\t\t);\n\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: brandedHue,\n\t\t\t\t\t\tsaturation: brandedSaturation,\n\t\t\t\t\t\tlightness: brandedLightness\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t};\n\t\t}\n\t}\n\n\treturn {\n\t\tconvertColorStringToColor,\n\t\tconvertCMYKStringToValue(cmyk) {\n\t\t\treturn {\n\t\t\t\tcyan: utils.brand.asPercentile(parseFloat(cmyk.cyan) / 100),\n\t\t\t\tmagenta: utils.brand.asPercentile(\n\t\t\t\t\tparseFloat(cmyk.magenta) / 100\n\t\t\t\t),\n\t\t\t\tyellow: utils.brand.asPercentile(parseFloat(cmyk.yellow) / 100),\n\t\t\t\tkey: utils.brand.asPercentile(parseFloat(cmyk.key) / 100)\n\t\t\t};\n\t\t},\n\t\tconvertCMYKValueToString(\n\t\t\tcmyk: CMYK['value']\n\t\t): CMYKStringObject['value'] {\n\t\t\treturn {\n\t\t\t\tcyan: `${cmyk.cyan * 100}%`,\n\t\t\t\tmagenta: `${cmyk.magenta * 100}%`,\n\t\t\t\tyellow: `${cmyk.yellow * 100}%`,\n\t\t\t\tkey: `${cmyk.key * 100}%`\n\t\t\t};\n\t\t},\n\t\tconvertColorToColorString(color: Color): ColorStringObject {\n\t\t\tconst log = services.log;\n\t\t\tconst clonedColor = utils.core.clone(color);\n\n\t\t\tif (utils.typeGuards.isColorString(clonedColor)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Already formatted as color string: ${JSON.stringify(color)}`,\n\t\t\t\t\t'colorUtils.convertColorToColorString()'\n\t\t\t\t);\n\n\t\t\t\treturn clonedColor;\n\t\t\t}\n\n\t\t\tif (utils.typeGuards.isCMYKColor(clonedColor)) {\n\t\t\t\tconst newValue = utils.format.formatPercentageValues(\n\t\t\t\t\tclonedColor.value\n\t\t\t\t) as CMYK['value'];\n\n\t\t\t\treturn {\n\t\t\t\t\tformat: 'cmyk',\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tcyan: `${newValue.cyan}%`,\n\t\t\t\t\t\tmagenta: `${newValue.magenta}%`,\n\t\t\t\t\t\tyellow: `${newValue.yellow}%`,\n\t\t\t\t\t\tkey: `${newValue.key}%`\n\t\t\t\t\t} as CMYKStringObject['value']\n\t\t\t\t};\n\t\t\t} else if (utils.typeGuards.isHex(clonedColor)) {\n\t\t\t\tconst newValue = utils.format.formatPercentageValues(\n\t\t\t\t\t(clonedColor as Hex).value\n\t\t\t\t) as Hex['value'];\n\n\t\t\t\treturn {\n\t\t\t\t\tformat: 'hex',\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thex: `${newValue.hex}`\n\t\t\t\t\t} as HexStringObject['value']\n\t\t\t\t};\n\t\t\t} else if (utils.typeGuards.isHSLColor(clonedColor)) {\n\t\t\t\tconst newValue = utils.format.formatPercentageValues(\n\t\t\t\t\tclonedColor.value\n\t\t\t\t) as HSL['value'];\n\n\t\t\t\treturn {\n\t\t\t\t\tformat: 'hsl',\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: `${newValue.hue}`,\n\t\t\t\t\t\tsaturation: `${newValue.saturation}%`,\n\t\t\t\t\t\tlightness: `${newValue.lightness}%`\n\t\t\t\t\t} as HSLStringObject['value']\n\t\t\t\t};\n\t\t\t} else if (utils.typeGuards.isHSVColor(clonedColor)) {\n\t\t\t\tconst newValue = utils.format.formatPercentageValues(\n\t\t\t\t\tclonedColor.value\n\t\t\t\t) as HSV['value'];\n\n\t\t\t\treturn {\n\t\t\t\t\tformat: 'hsv',\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: `${newValue.hue}`,\n\t\t\t\t\t\tsaturation: `${newValue.saturation}%`,\n\t\t\t\t\t\tvalue: `${newValue.value}%`\n\t\t\t\t\t} as HSVStringObject['value']\n\t\t\t\t};\n\t\t\t} else if (utils.typeGuards.isLAB(clonedColor)) {\n\t\t\t\tconst newValue = utils.format.formatPercentageValues(\n\t\t\t\t\tclonedColor.value\n\t\t\t\t) as LAB['value'];\n\n\t\t\t\treturn {\n\t\t\t\t\tformat: 'lab',\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tl: `${newValue.l}`,\n\t\t\t\t\t\ta: `${newValue.a}`,\n\t\t\t\t\t\tb: `${newValue.b}`\n\t\t\t\t\t} as LABStringObject['value']\n\t\t\t\t};\n\t\t\t} else if (utils.typeGuards.isRGB(clonedColor)) {\n\t\t\t\tconst newValue = utils.format.formatPercentageValues(\n\t\t\t\t\tclonedColor.value\n\t\t\t\t) as RGB['value'];\n\n\t\t\t\treturn {\n\t\t\t\t\tformat: 'rgb',\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tred: `${newValue.red}`,\n\t\t\t\t\t\tgreen: `${newValue.green}`,\n\t\t\t\t\t\tblue: `${newValue.blue}`\n\t\t\t\t\t} as RGBStringObject['value']\n\t\t\t\t};\n\t\t\t} else if (utils.typeGuards.isXYZ(clonedColor)) {\n\t\t\t\tconst newValue = utils.format.formatPercentageValues(\n\t\t\t\t\tclonedColor.value\n\t\t\t\t) as XYZ['value'];\n\n\t\t\t\treturn {\n\t\t\t\t\tformat: 'xyz',\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tx: `${newValue.x}`,\n\t\t\t\t\t\ty: `${newValue.y}`,\n\t\t\t\t\t\tz: `${newValue.z}`\n\t\t\t\t\t} as XYZStringObject['value']\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Unsupported format: ${clonedColor.format}`,\n\t\t\t\t\t'colorUtils.convertColorToColorString()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultColorStrings.hsl;\n\t\t\t}\n\t\t},\n\t\tconvertColorToCSS(color: Color): string {\n\t\t\ttry {\n\t\t\t\tswitch (color.format) {\n\t\t\t\t\tcase 'cmyk':\n\t\t\t\t\t\treturn `cmyk(${color.value.cyan}, ${color.value.magenta}, ${color.value.yellow}, ${color.value.key})`;\n\t\t\t\t\tcase 'hex':\n\t\t\t\t\t\treturn String(color.value.hex);\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\t\treturn `hsl(${Math.round(color.value.hue)},\n\t\t\t\t\t\t\t\t\t${Math.round(color.value.saturation)}%,\n\t\t\t\t\t\t\t\t\t${Math.round(color.value.lightness)}%)`;\n\t\t\t\t\tcase 'hsv':\n\t\t\t\t\t\treturn `hsv(${color.value.hue}, ${color.value.saturation}%, ${color.value.value}%)`;\n\t\t\t\t\tcase 'lab':\n\t\t\t\t\t\treturn `lab(${color.value.l}, ${color.value.a}, ${color.value.b})`;\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\t\treturn `rgb(${color.value.red}, ${color.value.green}, ${color.value.blue})`;\n\t\t\t\t\tcase 'xyz':\n\t\t\t\t\t\treturn `xyz(${color.value.x}, ${color.value.y}, ${color.value.z})`;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t`Unexpected color format: ${color.format}`\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn '#FFFFFF';\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(`getCSSColorString error: ${error}`);\n\t\t\t}\n\t\t},\n\t\tconvertCSSToColor(color: string): Exclude<Color, SL | SV> | null {\n\t\t\tcolor = color.trim().toLowerCase();\n\n\t\t\tconst cmykMatch = color.match(config.regex.css.cmyk);\n\t\t\tconst hslMatch = color.match(config.regex.css.hsl);\n\t\t\tconst hsvMatch = color.match(config.regex.css.hsv);\n\t\t\tconst labMatch = color.match(config.regex.css.lab);\n\t\t\tconst rgbMatch = color.match(config.regex.css.rgb);\n\t\t\tconst xyzMatch = color.match(config.regex.css.xyz);\n\n\t\t\tif (cmykMatch) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tcyan: parseInt(cmykMatch[1], 10),\n\t\t\t\t\t\tmagenta: parseInt(cmykMatch[2], 10),\n\t\t\t\t\t\tyellow: parseInt(cmykMatch[3], 10),\n\t\t\t\t\t\tkey: parseInt(cmykMatch[4], 10)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'cmyk'\n\t\t\t\t} as CMYK;\n\t\t\t}\n\n\t\t\tif (color.startsWith('#')) {\n\t\t\t\tconst hexValue =\n\t\t\t\t\tcolor.length === 7\n\t\t\t\t\t\t? color\n\t\t\t\t\t\t: utils.format.convertShortHexToLong(color);\n\t\t\t\treturn {\n\t\t\t\t\tvalue: { hex: hexValue },\n\t\t\t\t\tformat: 'hex'\n\t\t\t\t} as Hex;\n\t\t\t}\n\n\t\t\tif (hslMatch) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: parseInt(hslMatch[1], 10),\n\t\t\t\t\t\tsaturation: parseInt(hslMatch[2], 10),\n\t\t\t\t\t\tlightness: parseInt(hslMatch[3], 10)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t} as HSL;\n\t\t\t}\n\n\t\t\tif (hsvMatch) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: parseInt(hsvMatch[1], 10),\n\t\t\t\t\t\tsaturation: parseInt(hsvMatch[2], 10),\n\t\t\t\t\t\tvalue: parseInt(hsvMatch[3], 10)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsv'\n\t\t\t\t} as HSV;\n\t\t\t}\n\n\t\t\tif (labMatch) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tl: parseFloat(labMatch[1]),\n\t\t\t\t\t\ta: parseFloat(labMatch[2]),\n\t\t\t\t\t\tb: parseFloat(labMatch[3])\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'lab'\n\t\t\t\t} as LAB;\n\t\t\t}\n\n\t\t\tif (rgbMatch) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tred: parseInt(rgbMatch[1], 10),\n\t\t\t\t\t\tgreen: parseInt(rgbMatch[2], 10),\n\t\t\t\t\t\tblue: parseInt(rgbMatch[3], 10)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'rgb'\n\t\t\t\t} as RGB;\n\t\t\t}\n\n\t\t\tif (xyzMatch) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tx: parseFloat(xyzMatch[1]),\n\t\t\t\t\t\ty: parseFloat(xyzMatch[2]),\n\t\t\t\t\t\tz: parseFloat(xyzMatch[3])\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'xyz'\n\t\t\t\t} as XYZ;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tconvertHexStringToValue(hex: HexStringObject['value']): Hex['value'] {\n\t\t\treturn { hex: utils.brand.asHexSet(hex.hex) };\n\t\t},\n\t\tconvertHexValueToString(hex: Hex['value']): HexStringObject['value'] {\n\t\t\treturn { hex: hex.hex };\n\t\t},\n\t\tconvertHSL(color: HSL, colorSpace: ColorSpaceExtended): Color {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(color)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Invalid color value ${JSON.stringify(color)}`,\n\t\t\t\t\t\t'colorUtils.convertHSL()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn defaultColors.hsl;\n\t\t\t\t}\n\n\t\t\t\tconst clonedColor = utils.core.clone(color) as HSL;\n\n\t\t\t\tswitch (colorSpace) {\n\t\t\t\t\tcase 'cmyk':\n\t\t\t\t\t\treturn helpers.color.hslToCMYK(clonedColor);\n\t\t\t\t\tcase 'hex':\n\t\t\t\t\t\treturn helpers.color.hslToHex(clonedColor);\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\t\treturn utils.core.clone(clonedColor);\n\t\t\t\t\tcase 'hsv':\n\t\t\t\t\t\treturn helpers.color.hslToHSV(clonedColor);\n\t\t\t\t\tcase 'lab':\n\t\t\t\t\t\treturn helpers.color.hslToLAB(clonedColor);\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\t\treturn helpers.color.hslToRGB(clonedColor);\n\t\t\t\t\tcase 'sl':\n\t\t\t\t\t\treturn helpers.color.hslToSL(clonedColor);\n\t\t\t\t\tcase 'sv':\n\t\t\t\t\t\treturn helpers.color.hslToSV(clonedColor);\n\t\t\t\t\tcase 'xyz':\n\t\t\t\t\t\treturn helpers.color.hslToXYZ(clonedColor);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Invalid color format');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(`hslTo() error: ${error}`);\n\t\t\t}\n\t\t},\n\t\tconvertHSLStringToValue(hsl: HSLStringObject['value']): HSL['value'] {\n\t\t\treturn {\n\t\t\t\thue: utils.brand.asRadial(parseFloat(hsl.hue)),\n\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\tparseFloat(hsl.saturation) / 100\n\t\t\t\t),\n\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\tparseFloat(hsl.lightness) / 100\n\t\t\t\t)\n\t\t\t};\n\t\t},\n\t\tconvertHSLValueToString(hsl: HSL['value']): HSLStringObject['value'] {\n\t\t\treturn {\n\t\t\t\thue: `${hsl.hue}°`,\n\t\t\t\tsaturation: `${hsl.saturation * 100}%`,\n\t\t\t\tlightness: `${hsl.lightness * 100}%`\n\t\t\t};\n\t\t},\n\t\tconvertHSVStringToValue(hsv: HSVStringObject['value']): HSV['value'] {\n\t\t\treturn {\n\t\t\t\thue: utils.brand.asRadial(parseFloat(hsv.hue)),\n\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\tparseFloat(hsv.saturation) / 100\n\t\t\t\t),\n\t\t\t\tvalue: utils.brand.asPercentile(parseFloat(hsv.value) / 100)\n\t\t\t};\n\t\t},\n\t\tconvertHSVValueToString(hsv: HSV['value']): HSVStringObject['value'] {\n\t\t\treturn {\n\t\t\t\thue: `${hsv.hue}°`,\n\t\t\t\tsaturation: `${hsv.saturation * 100}%`,\n\t\t\t\tvalue: `${hsv.value * 100}%`\n\t\t\t};\n\t\t},\n\t\tconvertLABStringToValue(lab: LABStringObject['value']): LAB['value'] {\n\t\t\treturn {\n\t\t\t\tl: utils.brand.asLAB_L(parseFloat(lab.l)),\n\t\t\t\ta: utils.brand.asLAB_A(parseFloat(lab.a)),\n\t\t\t\tb: utils.brand.asLAB_B(parseFloat(lab.b))\n\t\t\t};\n\t\t},\n\t\tconvertLABValueToString(lab: LAB['value']): LABStringObject['value'] {\n\t\t\treturn {\n\t\t\t\tl: `${lab.l}`,\n\t\t\t\ta: `${lab.a}`,\n\t\t\t\tb: `${lab.b}`\n\t\t\t};\n\t\t},\n\t\tconvertRGBStringToValue(rgb: RGBStringObject['value']): RGB['value'] {\n\t\t\treturn {\n\t\t\t\tred: utils.brand.asByteRange(parseFloat(rgb.red)),\n\t\t\t\tgreen: utils.brand.asByteRange(parseFloat(rgb.green)),\n\t\t\t\tblue: utils.brand.asByteRange(parseFloat(rgb.blue))\n\t\t\t};\n\t\t},\n\t\tconvertRGBValueToString(rgb: RGB['value']): RGBStringObject['value'] {\n\t\t\treturn {\n\t\t\t\tred: `${rgb.red}`,\n\t\t\t\tgreen: `${rgb.green}`,\n\t\t\t\tblue: `${rgb.blue}`\n\t\t\t};\n\t\t},\n\t\tconvertToHSL(color: Exclude<Color, SL | SV>): HSL {\n\t\t\tconst log = services.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(color)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t`Invalid color value ${JSON.stringify(color)}`,\n\t\t\t\t\t\t'colorUtils.convertToHSL()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn defaultColors.hsl as HSL;\n\t\t\t\t}\n\n\t\t\t\tconst clonedColor = utils.core.clone(color);\n\n\t\t\t\tswitch (color.format) {\n\t\t\t\t\tcase 'cmyk':\n\t\t\t\t\t\treturn helpers.color.cmykToHSL(clonedColor as CMYK);\n\t\t\t\t\tcase 'hex':\n\t\t\t\t\t\treturn helpers.color.hexToHSL(clonedColor as Hex);\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\t\treturn utils.core.clone(clonedColor as HSL);\n\t\t\t\t\tcase 'hsv':\n\t\t\t\t\t\treturn helpers.color.hsvToHSL(clonedColor as HSV);\n\t\t\t\t\tcase 'lab':\n\t\t\t\t\t\treturn helpers.color.labToHSL(clonedColor as LAB);\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\t\treturn helpers.color.rgbToHSL(clonedColor as RGB);\n\t\t\t\t\tcase 'xyz':\n\t\t\t\t\t\treturn helpers.color.xyzToHSL(clonedColor as XYZ);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Invalid color format');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(`toHSL() error: ${error}`);\n\t\t\t}\n\t\t},\n\t\tconvertXYZStringToValue(xyz: XYZStringObject['value']): XYZ['value'] {\n\t\t\treturn {\n\t\t\t\tx: utils.brand.asXYZ_X(parseFloat(xyz.x)),\n\t\t\t\ty: utils.brand.asXYZ_Y(parseFloat(xyz.y)),\n\t\t\t\tz: utils.brand.asXYZ_Z(parseFloat(xyz.z))\n\t\t\t};\n\t\t},\n\t\tconvertXYZValueToString(xyz: XYZ['value']): XYZStringObject['value'] {\n\t\t\treturn {\n\t\t\t\tx: `${xyz.x}`,\n\t\t\t\ty: `${xyz.y}`,\n\t\t\t\tz: `${xyz.z}`\n\t\t\t};\n\t\t},\n\t\tgetColorString(color: Color): string | null {\n\t\t\ttry {\n\t\t\t\tconst formatters = {\n\t\t\t\t\tcmyk: (c: CMYK) =>\n\t\t\t\t\t\t`cmyk(${c.value.cyan}, ${c.value.magenta}, ${c.value.yellow}, ${c.value.key})`,\n\t\t\t\t\thex: (c: Hex) => c.value.hex,\n\t\t\t\t\thsl: (c: HSL) =>\n\t\t\t\t\t\t`hsl(${c.value.hue}, ${c.value.saturation}%, ${c.value.lightness}%)`,\n\t\t\t\t\thsv: (c: HSV) =>\n\t\t\t\t\t\t`hsv(${c.value.hue}, ${c.value.saturation}%, ${c.value.value}%)`,\n\t\t\t\t\tlab: (c: LAB) =>\n\t\t\t\t\t\t`lab(${c.value.l}, ${c.value.a}, ${c.value.b})`,\n\t\t\t\t\trgb: (c: RGB) =>\n\t\t\t\t\t\t`rgb(${c.value.red}, ${c.value.green}, ${c.value.blue})`,\n\t\t\t\t\txyz: (c: XYZ) =>\n\t\t\t\t\t\t`xyz(${c.value.x}, ${c.value.y}, ${c.value.z})`\n\t\t\t\t};\n\n\t\t\t\tswitch (color.format) {\n\t\t\t\t\tcase 'cmyk':\n\t\t\t\t\t\treturn formatters.cmyk(color);\n\t\t\t\t\tcase 'hex':\n\t\t\t\t\t\treturn formatters.hex(color);\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\t\treturn formatters.hsl(color);\n\t\t\t\t\tcase 'hsv':\n\t\t\t\t\t\treturn formatters.hsv(color);\n\t\t\t\t\tcase 'lab':\n\t\t\t\t\t\treturn formatters.lab(color);\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\t\treturn formatters.rgb(color);\n\t\t\t\t\tcase 'xyz':\n\t\t\t\t\t\treturn formatters.xyz(color);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tservices.log(\n\t\t\t\t\t\t\t'error',\n\t\t\t\t\t\t\t`Unsupported color format for ${color}`,\n\t\t\t\t\t\t\t'colorUtils.getColorString()'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tservices.log(\n\t\t\t\t\t'error',\n\t\t\t\t\t`getColorString error: ${error}`,\n\t\t\t\t\t'colorUtils.getColorString()'\n\t\t\t\t);\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tgetConversionFn<\n\t\t\tFrom extends keyof ColorDataAssertion,\n\t\t\tTo extends keyof ColorDataAssertion\n\t\t>(\n\t\t\tfrom: From,\n\t\t\tto: To\n\t\t):\n\t\t\t| ((value: ColorDataAssertion[From]) => ColorDataAssertion[To])\n\t\t\t| undefined {\n\t\t\ttry {\n\t\t\t\tconst fnName =\n\t\t\t\t\t`${from}To${to[0].toUpperCase() + to.slice(1)}` as keyof typeof helpers.color;\n\n\t\t\t\tif (!(fnName in helpers.color)) return undefined;\n\n\t\t\t\tconst conversionFn = helpers.color[fnName] as unknown as (\n\t\t\t\t\tinput: ColorDataAssertion[From]\n\t\t\t\t) => ColorDataAssertion[To];\n\n\t\t\t\treturn (\n\t\t\t\t\tvalue: ColorDataAssertion[From]\n\t\t\t\t): ColorDataAssertion[To] =>\n\t\t\t\t\tstructuredClone(conversionFn(value));\n\t\t\t} catch (error) {\n\t\t\t\tservices.log(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Error getting conversion function: ${error}`,\n\t\t\t\t\t'colorUtils.getConversionFn()'\n\t\t\t\t);\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t},\n\t\thueToRGB(p: number, q: number, t: number): number {\n\t\t\ttry {\n\t\t\t\tconst clonedP = utils.core.clone(p);\n\t\t\t\tconst clonedQ = utils.core.clone(q);\n\n\t\t\t\tlet clonedT = utils.core.clone(t);\n\n\t\t\t\tif (clonedT < 0) clonedT += 1;\n\t\t\t\tif (clonedT > 1) clonedT -= 1;\n\t\t\t\tif (clonedT < 1 / 6)\n\t\t\t\t\treturn clonedP + (clonedQ - clonedP) * 6 * clonedT;\n\t\t\t\tif (clonedT < 1 / 2) return clonedQ;\n\t\t\t\tif (clonedT < 2 / 3)\n\t\t\t\t\treturn (\n\t\t\t\t\t\tclonedP + (clonedQ - clonedP) * (2 / 3 - clonedT) * 6\n\t\t\t\t\t);\n\n\t\t\t\treturn clonedP;\n\t\t\t} catch (error) {\n\t\t\t\tservices.log(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Error converting hue to RGB: ${error}`,\n\t\t\t\t\t'colorUtils.hueToRGB()'\n\t\t\t\t);\n\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\tnarrowToColor(color: Color | ColorStringObject): Color | null {\n\t\t\tif (utils.typeGuards.isColorString(color))\n\t\t\t\treturn convertColorStringToColor(color);\n\n\t\t\tswitch (color.format as ColorSpaceExtended) {\n\t\t\t\tcase 'cmyk':\n\t\t\t\tcase 'hex':\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsv':\n\t\t\t\tcase 'lab':\n\t\t\t\tcase 'sl':\n\t\t\t\tcase 'sv':\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'xyz':\n\t\t\t\t\treturn color;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\ttoColorValueRange<T extends keyof RangeKeyMap>(\n\t\t\tvalue: string | number,\n\t\t\trangeKey: T\n\t\t): RangeKeyMap[T] {\n\t\t\tutils.validate.range(value, rangeKey);\n\n\t\t\tif (rangeKey === 'HexSet') {\n\t\t\t\treturn utils.brand.asHexSet(\n\t\t\t\t\tvalue as string\n\t\t\t\t) as unknown as RangeKeyMap[T];\n\t\t\t}\n\n\t\t\treturn utils.brand.asBranded(value as number, rangeKey);\n\t\t},\n\t\tvalidateAndConvertColor(\n\t\t\tcolor: Color | ColorStringObject | null\n\t\t): Color | null {\n\t\t\tconst log = services.log;\n\n\t\t\tif (!color) return null;\n\n\t\t\tconst convertedColor = utils.typeGuards.isColorString(color)\n\t\t\t\t? convertColorStringToColor(color)\n\t\t\t\t: color;\n\n\t\t\tif (!utils.validate.colorValue(convertedColor)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid color: ${JSON.stringify(convertedColor)}`,\n\t\t\t\t\t'colorUtils.validateAndConvertColor()'\n\t\t\t\t);\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn convertedColor;\n\t\t}\n\t};\n}\n"],"names":[],"mappings":"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"}