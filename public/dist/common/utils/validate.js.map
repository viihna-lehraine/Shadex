{"version":3,"file":"validate.js","sources":["../../../../../src/common/utils/validate.ts"],"sourcesContent":["// File: common/utils/validate.js\n\nimport {\n\tColor,\n\tDataSetsInterface,\n\tSL,\n\tSV,\n\tUtilitiesInterface,\n\tValidationUtilsInterface\n} from '../../types/index.js';\nimport { configData as config } from '../../data/config.js';\nimport { dataSets } from '../../data/sets.js';\n\nconst regex = config.regex;\nconst sets = dataSets;\n\nexport function createValidationUtils(\n\tutils: UtilitiesInterface\n): ValidationUtilsInterface {\n\tfunction hex(value: string, pattern: RegExp): boolean {\n\t\treturn pattern.test(value);\n\t}\n\n\tfunction hexSet(value: string): boolean {\n\t\treturn regex.validation.hex.test(value);\n\t}\n\n\treturn {\n\t\thex,\n\t\thexSet,\n\t\tcolorValue(color: Color | SL | SV): boolean {\n\t\t\tconst clonedColor = utils.core.clone(color);\n\n\t\t\tconst isNumericValid = (value: unknown): boolean =>\n\t\t\t\ttypeof value === 'number' && !isNaN(value);\n\t\t\tconst normalizePercentage = (value: string | number): number => {\n\t\t\t\tif (typeof value === 'string' && value.endsWith('%')) {\n\t\t\t\t\treturn parseFloat(value.slice(0, -1));\n\t\t\t\t}\n\n\t\t\t\treturn typeof value === 'number' ? value : NaN;\n\t\t\t};\n\n\t\t\tswitch (clonedColor.format) {\n\t\t\t\tcase 'cmyk':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tclonedColor.value.cyan,\n\t\t\t\t\t\t\tclonedColor.value.magenta,\n\t\t\t\t\t\t\tclonedColor.value.yellow,\n\t\t\t\t\t\t\tclonedColor.value.key\n\t\t\t\t\t\t].every(isNumericValid) &&\n\t\t\t\t\t\tclonedColor.value.cyan >= 0 &&\n\t\t\t\t\t\tclonedColor.value.cyan <= 100 &&\n\t\t\t\t\t\tclonedColor.value.magenta >= 0 &&\n\t\t\t\t\t\tclonedColor.value.magenta <= 100 &&\n\t\t\t\t\t\tclonedColor.value.yellow >= 0 &&\n\t\t\t\t\t\tclonedColor.value.yellow <= 100 &&\n\t\t\t\t\t\tclonedColor.value.key >= 0 &&\n\t\t\t\t\t\tclonedColor.value.key <= 100\n\t\t\t\t\t);\n\t\t\t\tcase 'hex':\n\t\t\t\t\treturn regex.validation.hex.test(clonedColor.value.hex);\n\t\t\t\tcase 'hsl':\n\t\t\t\t\tconst isValidHSLHue =\n\t\t\t\t\t\tisNumericValid(clonedColor.value.hue) &&\n\t\t\t\t\t\tclonedColor.value.hue >= 0 &&\n\t\t\t\t\t\tclonedColor.value.hue <= 360;\n\t\t\t\t\tconst isValidHSLSaturation =\n\t\t\t\t\t\tnormalizePercentage(clonedColor.value.saturation) >=\n\t\t\t\t\t\t\t0 &&\n\t\t\t\t\t\tnormalizePercentage(clonedColor.value.saturation) <=\n\t\t\t\t\t\t\t100;\n\t\t\t\t\tconst isValidHSLLightness = clonedColor.value.lightness\n\t\t\t\t\t\t? normalizePercentage(clonedColor.value.lightness) >=\n\t\t\t\t\t\t\t\t0 &&\n\t\t\t\t\t\t\tnormalizePercentage(clonedColor.value.lightness) <=\n\t\t\t\t\t\t\t\t100\n\t\t\t\t\t\t: true;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tisValidHSLHue &&\n\t\t\t\t\t\tisValidHSLSaturation &&\n\t\t\t\t\t\tisValidHSLLightness\n\t\t\t\t\t);\n\t\t\t\tcase 'hsv':\n\t\t\t\t\tconst isValidHSVHue =\n\t\t\t\t\t\tisNumericValid(clonedColor.value.hue) &&\n\t\t\t\t\t\tclonedColor.value.hue >= 0 &&\n\t\t\t\t\t\tclonedColor.value.hue <= 360;\n\t\t\t\t\tconst isValidHSVSaturation =\n\t\t\t\t\t\tnormalizePercentage(clonedColor.value.saturation) >=\n\t\t\t\t\t\t\t0 &&\n\t\t\t\t\t\tnormalizePercentage(clonedColor.value.saturation) <=\n\t\t\t\t\t\t\t100;\n\t\t\t\t\tconst isValidHSVValue = clonedColor.value.value\n\t\t\t\t\t\t? normalizePercentage(clonedColor.value.value) >= 0 &&\n\t\t\t\t\t\t\tnormalizePercentage(clonedColor.value.value) <= 100\n\t\t\t\t\t\t: true;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tisValidHSVHue && isValidHSVSaturation && isValidHSVValue\n\t\t\t\t\t);\n\t\t\t\tcase 'lab':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tclonedColor.value.l,\n\t\t\t\t\t\t\tclonedColor.value.a,\n\t\t\t\t\t\t\tclonedColor.value.b\n\t\t\t\t\t\t].every(isNumericValid) &&\n\t\t\t\t\t\tclonedColor.value.l >= 0 &&\n\t\t\t\t\t\tclonedColor.value.l <= 100 &&\n\t\t\t\t\t\tclonedColor.value.a >= -125 &&\n\t\t\t\t\t\tclonedColor.value.a <= 125 &&\n\t\t\t\t\t\tclonedColor.value.b >= -125 &&\n\t\t\t\t\t\tclonedColor.value.b <= 125\n\t\t\t\t\t);\n\t\t\t\tcase 'rgb':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tclonedColor.value.red,\n\t\t\t\t\t\t\tclonedColor.value.green,\n\t\t\t\t\t\t\tclonedColor.value.blue\n\t\t\t\t\t\t].every(isNumericValid) &&\n\t\t\t\t\t\tclonedColor.value.red >= 0 &&\n\t\t\t\t\t\tclonedColor.value.red <= 255 &&\n\t\t\t\t\t\tclonedColor.value.green >= 0 &&\n\t\t\t\t\t\tclonedColor.value.green <= 255 &&\n\t\t\t\t\t\tclonedColor.value.blue >= 0 &&\n\t\t\t\t\t\tclonedColor.value.blue <= 255\n\t\t\t\t\t);\n\t\t\t\tcase 'sl':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tclonedColor.value.saturation,\n\t\t\t\t\t\t\tclonedColor.value.lightness\n\t\t\t\t\t\t].every(isNumericValid) &&\n\t\t\t\t\t\tclonedColor.value.saturation >= 0 &&\n\t\t\t\t\t\tclonedColor.value.saturation <= 100 &&\n\t\t\t\t\t\tclonedColor.value.lightness >= 0 &&\n\t\t\t\t\t\tclonedColor.value.lightness <= 100\n\t\t\t\t\t);\n\t\t\t\tcase 'sv':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tclonedColor.value.saturation,\n\t\t\t\t\t\t\tclonedColor.value.value\n\t\t\t\t\t\t].every(isNumericValid) &&\n\t\t\t\t\t\tclonedColor.value.saturation >= 0 &&\n\t\t\t\t\t\tclonedColor.value.saturation <= 100 &&\n\t\t\t\t\t\tclonedColor.value.value >= 0 &&\n\t\t\t\t\t\tclonedColor.value.value <= 100\n\t\t\t\t\t);\n\t\t\t\tcase 'xyz':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tclonedColor.value.x,\n\t\t\t\t\t\t\tclonedColor.value.y,\n\t\t\t\t\t\t\tclonedColor.value.z\n\t\t\t\t\t\t].every(isNumericValid) &&\n\t\t\t\t\t\tclonedColor.value.x >= 0 &&\n\t\t\t\t\t\tclonedColor.value.x <= 95.047 &&\n\t\t\t\t\t\tclonedColor.value.y >= 0 &&\n\t\t\t\t\t\tclonedColor.value.y <= 100.0 &&\n\t\t\t\t\t\tclonedColor.value.z >= 0 &&\n\t\t\t\t\t\tclonedColor.value.z <= 108.883\n\t\t\t\t\t);\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error(`Unsupported color format: ${color.format}`);\n\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tensureHash(value: string): string {\n\t\t\treturn value.startsWith('#') ? value : `#${value}`;\n\t\t},\n\t\thexComponent(value: string): boolean {\n\t\t\treturn hex(value, regex.validation.hexComponent);\n\t\t},\n\t\trange<T extends keyof DataSetsInterface>(\n\t\t\tvalue: number | string,\n\t\t\trangeKey: T\n\t\t): void {\n\t\t\tif (rangeKey === 'HexSet') {\n\t\t\t\tif (!hexSet(value as string)) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Invalid value for ${String(rangeKey)}: ${value}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof value === 'number' && Array.isArray(sets[rangeKey])) {\n\t\t\t\tconst [min, max] = sets[rangeKey] as [number, number];\n\n\t\t\t\tif (value < min || value > max) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Value ${value} is out of range for ${String(rangeKey)} [${min}, ${max}]`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new Error(`Invalid range or value for ${String(rangeKey)}`);\n\t\t},\n\t\tuserColorInput(color: string): boolean {\n\t\t\treturn (\n\t\t\t\tregex.userInput.hex.test(color) ||\n\t\t\t\tregex.userInput.hsl.test(color) ||\n\t\t\t\tregex.userInput.rgb.test(color)\n\t\t\t);\n\t\t}\n\t};\n}\n"],"names":["config"],"mappings":"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"}