{"version":3,"file":"palette.js","sources":["../../../../../src/common/utils/palette.ts"],"sourcesContent":["// File: common/utils/palette.js\n\nimport {\n\tAllColors,\n\tCMYK,\n\tHex,\n\tHSL,\n\tHSV,\n\tLAB,\n\tPalette,\n\tPaletteItem,\n\tPaletteType,\n\tPaletteUtilsInterface,\n\tRGB,\n\tSelectedPaletteOptions,\n\tServicesInterface,\n\tUtilitiesInterface,\n\tXYZ\n} from '../../types/index.js';\nimport { domData } from '../../data/dom.js';\n\nconst elements = domData.elements;\n\nexport function createPaletteUtils(\n\tservices: ServicesInterface,\n\tutils: UtilitiesInterface\n): PaletteUtilsInterface {\n\tfunction createPaletteItem(color: HSL, itemID: number): PaletteItem {\n\t\tconst clonedColor = utils.core.clone(color) as HSL;\n\n\t\treturn {\n\t\t\titemID,\n\t\t\tcolors: {\n\t\t\t\tcmyk: (utils.color.convertHSL(clonedColor, 'cmyk') as CMYK)\n\t\t\t\t\t.value,\n\t\t\t\thex: (utils.color.convertHSL(clonedColor, 'hex') as Hex).value,\n\t\t\t\thsl: clonedColor.value,\n\t\t\t\thsv: (utils.color.convertHSL(clonedColor, 'hsv') as HSV).value,\n\t\t\t\tlab: (utils.color.convertHSL(clonedColor, 'lab') as LAB).value,\n\t\t\t\trgb: (utils.color.convertHSL(clonedColor, 'rgb') as RGB).value,\n\t\t\t\txyz: (utils.color.convertHSL(clonedColor, 'xyz') as XYZ).value\n\t\t\t},\n\t\t\tcss: {\n\t\t\t\tcmyk: utils.color.convertColorToCSS(\n\t\t\t\t\tutils.color.convertHSL(clonedColor, 'cmyk')\n\t\t\t\t),\n\t\t\t\thex: utils.color.convertColorToCSS(\n\t\t\t\t\tutils.color.convertHSL(clonedColor, 'hex')\n\t\t\t\t),\n\t\t\t\thsl: utils.color.convertColorToCSS(clonedColor),\n\t\t\t\thsv: utils.color.convertColorToCSS(\n\t\t\t\t\tutils.color.convertHSL(clonedColor, 'hsv')\n\t\t\t\t),\n\t\t\t\tlab: utils.color.convertColorToCSS(\n\t\t\t\t\tutils.color.convertHSL(clonedColor, 'lab')\n\t\t\t\t),\n\t\t\t\trgb: utils.color.convertColorToCSS(\n\t\t\t\t\tutils.color.convertHSL(clonedColor, 'rgb')\n\t\t\t\t),\n\t\t\t\txyz: utils.color.convertColorToCSS(\n\t\t\t\t\tutils.color.convertHSL(clonedColor, 'xyz')\n\t\t\t\t)\n\t\t\t}\n\t\t};\n\t}\n\n\treturn {\n\t\tcreatePaletteItem,\n\t\tcreatePaletteItemArray(baseColor: HSL, hues: number[]): PaletteItem[] {\n\t\t\tconst paletteItems: PaletteItem[] = [];\n\n\t\t\t// base color always gets itemID = 1\n\t\t\tpaletteItems.push(\n\t\t\t\tcreatePaletteItem(\n\t\t\t\t\tbaseColor,\n\t\t\t\t\t1 // ID 1 for base color\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// iterate over hues and generate PaletteItems\n\t\t\tfor (const [i, hue] of hues.entries()) {\n\t\t\t\tconst newColor: HSL = {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.random() * 100\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlightness: utils.brand.asPercentile(Math.random() * 100)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t};\n\n\t\t\t\tconst newPaletteItem = createPaletteItem(\n\t\t\t\t\tnewColor,\n\t\t\t\t\ti + 2 // IDs start at 2 for generated colors\n\t\t\t\t);\n\n\t\t\t\tpaletteItems.push(newPaletteItem);\n\t\t\t\tutils.dom.updateColorBox(newColor, String(i + 2));\n\t\t\t}\n\n\t\t\treturn paletteItems;\n\t\t},\n\t\tcreatePaletteObject(\n\t\t\toptions: SelectedPaletteOptions,\n\t\t\tpaletteItems: PaletteItem[]\n\t\t): Palette {\n\t\t\treturn {\n\t\t\t\tid: `${options.paletteType}_${crypto.randomUUID()}`,\n\t\t\t\titems: paletteItems,\n\t\t\t\tmetadata: {\n\t\t\t\t\tcolumnCount: options.columnCount,\n\t\t\t\t\tflags: {\n\t\t\t\t\t\tlimitDark: options.limitDark,\n\t\t\t\t\t\tlimitGray: options.limitGray,\n\t\t\t\t\t\tlimitLight: options.limitLight\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: utils.app.getFormattedTimestamp(),\n\t\t\t\t\ttype: options.paletteType\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tgenerateAllColorValues(color: HSL): AllColors {\n\t\t\tconst log = services.app.log;\n\t\t\tconst clonedColor = utils.core.clone(color);\n\n\t\t\tif (!utils.validate.colorValue(clonedColor)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid color: ${JSON.stringify(clonedColor)}`,\n\t\t\t\t\t'paletteUtils.generateAllColorValues()'\n\t\t\t\t);\n\t\t\t\tthrow new Error('Invalid HSL color provided');\n\t\t\t}\n\n\t\t\tconst convert = <T extends keyof AllColors>(\n\t\t\t\ttarget: T\n\t\t\t): AllColors[T] =>\n\t\t\t\tutils.color.convertHSL(clonedColor, target) as AllColors[T];\n\n\t\t\treturn {\n\t\t\t\tcmyk: convert('cmyk'),\n\t\t\t\thex: convert('hex'),\n\t\t\t\thsl: clonedColor,\n\t\t\t\thsv: convert('hsv'),\n\t\t\t\tlab: convert('lab'),\n\t\t\t\trgb: convert('rgb'),\n\t\t\t\tsl: convert('sl'),\n\t\t\t\tsv: convert('sv'),\n\t\t\t\txyz: convert('xyz')\n\t\t\t};\n\t\t},\n\t\tgetPaletteOptionsFromUI(): SelectedPaletteOptions {\n\t\t\tconst log = services.app.log;\n\n\t\t\ttry {\n\t\t\t\tconst paletteColumnCountElement =\n\t\t\t\t\telements.selectors.paletteColumnCount;\n\t\t\t\tconst paletteTypeElement = elements.selectors.paletteType;\n\t\t\t\tconst limitDarkChkbx = elements.inputs.limitDarkChkbx;\n\t\t\t\tconst limitGrayChkbx = elements.inputs.limitGrayChkbx;\n\t\t\t\tconst limitLightChkbx = elements.inputs.limitLightChkbx;\n\n\t\t\t\tif (!paletteTypeElement) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'warn',\n\t\t\t\t\t\t'paletteTypeOptions DOM element not found',\n\t\t\t\t\t\t'paletteUtils > getPaletteOptionsFromUI()',\n\t\t\t\t\t\t2\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!paletteColumnCountElement) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'warn',\n\t\t\t\t\t\t`paletteColumnCount DOM element not found`,\n\t\t\t\t\t\t'paletteUtils > getPaletteOptionsFromUI()',\n\t\t\t\t\t\t2\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!limitDarkChkbx || !limitGrayChkbx || !limitLightChkbx) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'warn',\n\t\t\t\t\t\t`One or more checkboxes not found`,\n\t\t\t\t\t\t'paletteUtils > getPaletteOptionsFromUI()',\n\t\t\t\t\t\t2\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!utils.typeGuards.isPaletteType(paletteTypeElement!.value)\n\t\t\t\t) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'warn',\n\t\t\t\t\t\t`Invalid palette type: ${paletteTypeElement!.value}`,\n\t\t\t\t\t\t'paletteUtils > getPaletteOptionsFromUI()',\n\t\t\t\t\t\t2\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tcolumnCount: paletteColumnCountElement\n\t\t\t\t\t\t? parseInt(paletteColumnCountElement.value, 10)\n\t\t\t\t\t\t: 0,\n\t\t\t\t\tdistributionType: 'soft',\n\t\t\t\t\tlimitDark: limitDarkChkbx?.checked || false,\n\t\t\t\t\tlimitGray: limitGrayChkbx?.checked || false,\n\t\t\t\t\tlimitLight: limitLightChkbx?.checked || false,\n\t\t\t\t\tpaletteType: paletteTypeElement!.value as PaletteType\n\t\t\t\t};\n\t\t\t} catch (error) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Failed to retrieve parameters from UI: ${error}`,\n\t\t\t\t\t'paletteUtils > getPaletteOptionsFromUI()'\n\t\t\t\t);\n\n\t\t\t\treturn {\n\t\t\t\t\tcolumnCount: 0,\n\t\t\t\t\tdistributionType: 'base',\n\t\t\t\t\tlimitDark: false,\n\t\t\t\t\tlimitGray: false,\n\t\t\t\t\tlimitLight: false,\n\t\t\t\t\tpaletteType: 'random'\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t};\n}\n"],"names":[],"mappings":"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"}