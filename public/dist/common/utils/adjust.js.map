{"version":3,"file":"adjust.js","sources":["../../../../../src/common/utils/adjust.ts"],"sourcesContent":["// File: common/utils/adjust.js\n\nimport {\n\tAdjustmentUtilsInterface,\n\tHSL,\n\tRGB,\n\tServicesInterface,\n\tUtilitiesInterface\n} from '../../types/index.js';\nimport { constsData as consts } from '../../data/consts.js';\nimport { defaultData as defaults } from '../../data/defaults.js';\n\nconst adjustments = consts.adjustments;\nconst defaultColors = defaults.colors;\n\nexport function createAdjustmentUtils(\n\tservices: ServicesInterface,\n\tutils: UtilitiesInterface\n): AdjustmentUtilsInterface {\n\treturn {\n\t\tapplyGammaCorrection(value: number): number {\n\t\t\tconst log = services.app.log;\n\n\t\t\ttry {\n\t\t\t\treturn value > 0.0031308\n\t\t\t\t\t? 1.055 * Math.pow(value, 1 / 2.4) - 0.055\n\t\t\t\t\t: 12.92 * value;\n\t\t\t} catch (error) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Error applying gamma correction: ${error}`,\n\t\t\t\t\t'adjustmentUtils.applyGammaCorrection()'\n\t\t\t\t);\n\n\t\t\t\treturn value;\n\t\t\t}\n\t\t},\n\t\tclampRGB(rgb: RGB): RGB {\n\t\t\tconst log = services.app.log;\n\t\t\tconst defaultRGB = defaultColors.rgb;\n\n\t\t\tif (!utils.validate.colorValue(rgb)) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Invalid RGB value ${JSON.stringify(rgb)}`,\n\t\t\t\t\t'adjustmentUtils.clampRGB()'\n\t\t\t\t);\n\n\t\t\t\treturn defaultRGB;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tred: utils.brand.asByteRange(\n\t\t\t\t\t\t\tMath.round(\n\t\t\t\t\t\t\t\tMath.min(Math.max(0, rgb.value.red), 1) * 255\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgreen: utils.brand.asByteRange(\n\t\t\t\t\t\t\tMath.round(\n\t\t\t\t\t\t\t\tMath.min(Math.max(0, rgb.value.green), 1) * 255\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tblue: utils.brand.asByteRange(\n\t\t\t\t\t\t\tMath.round(\n\t\t\t\t\t\t\t\tMath.min(Math.max(0, rgb.value.blue), 1) * 255\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'rgb'\n\t\t\t\t};\n\t\t\t} catch (error) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Error clamping RGB values: ${error}`,\n\t\t\t\t\t'adjustmentUtils.clampRGB()'\n\t\t\t\t);\n\n\t\t\t\treturn rgb;\n\t\t\t}\n\t\t},\n\t\tsl(color: HSL): HSL {\n\t\t\tconst log = services.app.log;\n\n\t\t\ttry {\n\t\t\t\tif (!utils.validate.colorValue(color)) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t'Invalid color valus for adjustment.',\n\t\t\t\t\t\t'adjustmentUtils.adjustSL()'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn color;\n\t\t\t\t}\n\n\t\t\t\tconst adjustedSaturation = Math.min(\n\t\t\t\t\tMath.max(color.value.saturation + adjustments.slaValue, 0),\n\t\t\t\t\t100\n\t\t\t\t);\n\t\t\t\tconst adjustedLightness = Math.min(100);\n\n\t\t\t\treturn {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: color.value.hue,\n\t\t\t\t\t\tsaturation:\n\t\t\t\t\t\t\tutils.brand.asPercentile(adjustedSaturation),\n\t\t\t\t\t\tlightness: utils.brand.asPercentile(adjustedLightness)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t};\n\t\t\t} catch (error) {\n\t\t\t\tlog(\n\t\t\t\t\t'error',\n\t\t\t\t\t`Error adjusting saturation and lightness: ${error}`,\n\t\t\t\t\t'adjustmentUtils.adjustSL()'\n\t\t\t\t);\n\n\t\t\t\treturn color;\n\t\t\t}\n\t\t}\n\t};\n}\n"],"names":["consts","defaults"],"mappings":"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"}