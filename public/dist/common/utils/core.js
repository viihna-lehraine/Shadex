// File: common/utils/core.js
import { data } from '../../config/index.js';
const sets = data.sets;
function clampToRange(value, rangeKey) {
    const [min, max] = sets[rangeKey];
    return Math.min(Math.max(value, min), max);
}
function clone(value) {
    return structuredClone(value);
}
function debounce(func, delay) {
    let timeout = null;
    return (...args) => {
        if (timeout)
            clearTimeout(timeout);
        timeout = setTimeout(() => {
            func(...args);
        }, delay);
    };
}
function getAllElements(selector) {
    return document.querySelectorAll(selector);
}
function getElement(id) {
    return document.getElementById(id);
}
export const coreUtils = {
    clampToRange,
    clone,
    debounce,
    getAllElements,
    getElement
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21tb24vdXRpbHMvY29yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkI7QUFHN0IsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTdDLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7QUFFdkIsU0FBUyxZQUFZLENBQUMsS0FBYSxFQUFFLFFBQXlCO0lBQzdELE1BQU0sQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRWxDLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUM1QyxDQUFDO0FBRUQsU0FBUyxLQUFLLENBQUksS0FBUTtJQUN6QixPQUFPLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMvQixDQUFDO0FBRUQsU0FBUyxRQUFRLENBQ2hCLElBQU8sRUFDUCxLQUFhO0lBRWIsSUFBSSxPQUFPLEdBQXlDLElBQUksQ0FBQztJQUV6RCxPQUFPLENBQUMsR0FBRyxJQUFtQixFQUFRLEVBQUU7UUFDdkMsSUFBSSxPQUFPO1lBQUUsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRW5DLE9BQU8sR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ3pCLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQ2YsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0gsQ0FBQztBQUVELFNBQVMsY0FBYyxDQUN0QixRQUFnQjtJQUVoQixPQUFPLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQWtCLENBQUM7QUFDN0QsQ0FBQztBQUVELFNBQVMsVUFBVSxDQUF3QixFQUFVO0lBQ3BELE9BQU8sUUFBUSxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQWEsQ0FBQztBQUNoRCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUF1QjtJQUM1QyxZQUFZO0lBQ1osS0FBSztJQUNMLFFBQVE7SUFDUixjQUFjO0lBQ2QsVUFBVTtDQUNELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiBjb21tb24vdXRpbHMvY29yZS5qc1xuXG5pbXBvcnQgeyBDb3JlVXRpbHNJbnRlcmZhY2UsIE51bWVyaWNSYW5nZUtleSB9IGZyb20gJy4uLy4uL3R5cGVzL2luZGV4LmpzJztcbmltcG9ydCB7IGRhdGEgfSBmcm9tICcuLi8uLi9jb25maWcvaW5kZXguanMnO1xuXG5jb25zdCBzZXRzID0gZGF0YS5zZXRzO1xuXG5mdW5jdGlvbiBjbGFtcFRvUmFuZ2UodmFsdWU6IG51bWJlciwgcmFuZ2VLZXk6IE51bWVyaWNSYW5nZUtleSk6IG51bWJlciB7XG5cdGNvbnN0IFttaW4sIG1heF0gPSBzZXRzW3JhbmdlS2V5XTtcblxuXHRyZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgodmFsdWUsIG1pbiksIG1heCk7XG59XG5cbmZ1bmN0aW9uIGNsb25lPFQ+KHZhbHVlOiBUKTogVCB7XG5cdHJldHVybiBzdHJ1Y3R1cmVkQ2xvbmUodmFsdWUpO1xufVxuXG5mdW5jdGlvbiBkZWJvdW5jZTxUIGV4dGVuZHMgKC4uLmFyZ3M6IFBhcmFtZXRlcnM8VD4pID0+IHZvaWQ+KFxuXHRmdW5jOiBULFxuXHRkZWxheTogbnVtYmVyXG4pIHtcblx0bGV0IHRpbWVvdXQ6IFJldHVyblR5cGU8dHlwZW9mIHNldFRpbWVvdXQ+IHwgbnVsbCA9IG51bGw7XG5cblx0cmV0dXJuICguLi5hcmdzOiBQYXJhbWV0ZXJzPFQ+KTogdm9pZCA9PiB7XG5cdFx0aWYgKHRpbWVvdXQpIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcblxuXHRcdHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcblx0XHRcdGZ1bmMoLi4uYXJncyk7XG5cdFx0fSwgZGVsYXkpO1xuXHR9O1xufVxuXG5mdW5jdGlvbiBnZXRBbGxFbGVtZW50czxUIGV4dGVuZHMgSFRNTEVsZW1lbnQ+KFxuXHRzZWxlY3Rvcjogc3RyaW5nXG4pOiBOb2RlTGlzdE9mPFQ+IHtcblx0cmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpIGFzIE5vZGVMaXN0T2Y8VD47XG59XG5cbmZ1bmN0aW9uIGdldEVsZW1lbnQ8VCBleHRlbmRzIEhUTUxFbGVtZW50PihpZDogc3RyaW5nKTogVCB8IG51bGwge1xuXHRyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpIGFzIFQgfCBudWxsO1xufVxuXG5leHBvcnQgY29uc3QgY29yZVV0aWxzOiBDb3JlVXRpbHNJbnRlcmZhY2UgPSB7XG5cdGNsYW1wVG9SYW5nZSxcblx0Y2xvbmUsXG5cdGRlYm91bmNlLFxuXHRnZXRBbGxFbGVtZW50cyxcblx0Z2V0RWxlbWVudFxufSBhcyBjb25zdDtcbiJdfQ==