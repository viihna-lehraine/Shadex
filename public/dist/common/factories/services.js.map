{"version":3,"file":"services.js","sources":["../../../../../src/common/factories/services.ts"],"sourcesContent":["// File: common/factories/services.js\n\nimport { ServicesInterface } from '../../types/index.js';\n\nexport async function createServices(): Promise<ServicesInterface> {\n\tconsole.log(`[FACTORIES.service] Executing createServices()...`);\n\n\tconst services = {} as ServicesInterface;\n\n\tconst { createAppServices } = await import('../services/app.js');\n\tconsole.log(\n\t\t'FACTORIES.service] Extracted createAppServices:',\n\t\tcreateAppServices\n\t);\n\n\tconst app = await createAppServices();\n\tconsole.log('[FACTORIES.service] Created app services:', app);\n\n\tif (!app || Object.keys(app).length === 0) {\n\t\tconsole.error(\n\t\t\t`[FACTORIES.service] ERROR: 'app' is EMPTY before assignment!`\n\t\t);\n\t}\n\tservices.app = Object.assign({}, app);\n\tconsole.log(`[FACTORIES.service] After explicit assignment:`, services.app);\n\n\tservices.app.log(\n\t\t`debug`,\n\t\t'The log function is working properly!.',\n\t\t'[FACTORIES.service]'\n\t);\n\n\tconsole.log(\n\t\t`[FACTORIES.service] Final Service Functions Object: ${services}`\n\t);\n\n\treturn Object.freeze(services);\n}\n"],"names":[],"mappings":"AAAA;AAIO,eAAe,cAAc,GAAA;AACnC,IAAA,OAAO,CAAC,GAAG,CAAC,CAAA,iDAAA,CAAmD,CAAC;IAEhE,MAAM,QAAQ,GAAG,EAAuB;IAExC,MAAM,EAAE,iBAAiB,EAAE,GAAG,MAAM,OAAO,oBAAoB,CAAC;AAChE,IAAA,OAAO,CAAC,GAAG,CACV,iDAAiD,EACjD,iBAAiB,CACjB;AAED,IAAA,MAAM,GAAG,GAAG,MAAM,iBAAiB,EAAE;AACrC,IAAA,OAAO,CAAC,GAAG,CAAC,2CAA2C,EAAE,GAAG,CAAC;AAE7D,IAAA,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1C,QAAA,OAAO,CAAC,KAAK,CACZ,CAAA,4DAAA,CAA8D,CAC9D;;IAEF,QAAQ,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC;IACrC,OAAO,CAAC,GAAG,CAAC,CAAA,8CAAA,CAAgD,EAAE,QAAQ,CAAC,GAAG,CAAC;IAE3E,QAAQ,CAAC,GAAG,CAAC,GAAG,CACf,CAAO,KAAA,CAAA,EACP,wCAAwC,EACxC,qBAAqB,CACrB;AAED,IAAA,OAAO,CAAC,GAAG,CACV,uDAAuD,QAAQ,CAAA,CAAE,CACjE;AAED,IAAA,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;AAC/B;;;;"}