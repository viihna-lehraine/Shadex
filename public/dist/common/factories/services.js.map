{"version":3,"file":"services.js","sources":["../../../../../src/common/factories/services.ts"],"sourcesContent":["// File: common/factories/services.ts\n\nimport {\n\tDefaultObserverData,\n\tHelpers,\n\tLoggerOptions,\n\tServices\n} from '../../types/index.js';\nimport {\n\tDataObserver,\n\tDOMStore,\n\tErrorHandler,\n\tLogger,\n\tSemaphore\n} from '../services/index.js';\nimport { config } from '../../config/index.js';\n\nexport function serviceFactory<\n\tT extends DefaultObserverData = DefaultObserverData\n>(helpers: Helpers, initialData: T): Services<T> {\n\tconsole.log('[SERVICE_FACTORY]: Executing createServices.');\n\n\tconsole.log(\n\t\t`[SERVICE_FACTORY]: Initializing services with empty placeholder object.`\n\t);\n\tconst services = {} as Services<T>;\n\n\tconsole.log(\n\t\t`[SERVICE_FACTORY]: Initializing Logger and ErrorHandler (creating instances).`\n\t);\n\tconst logger = Logger.getInstance(helpers);\n\tservices.errors = ErrorHandler.getInstance(helpers, logger);\n\n\tif (!logger || !services.errors) {\n\t\tthrow new Error(\n\t\t\t'[SERVICE_FACTORY]: Logger or ErrorHandler failed to initialize.'\n\t\t);\n\t}\n\n\tservices.log = (message: string, options: LoggerOptions) => {\n\t\toptions.level ??= 'info';\n\t\toptions.verbosity ??= 1;\n\n\t\tif (\n\t\t\tconfig.mode.log[options.level] &&\n\t\t\tconfig.mode.log.verbosity >= options.verbosity\n\t\t) {\n\t\t\tlogger.log(message, options.level, options.caller);\n\t\t}\n\n\t\tif (options.level === 'error' && config.mode.showAlerts) {\n\t\t\talert(message);\n\t\t}\n\t};\n\n\tconsole.log(\n\t\t`[SERVICE_FACTORY]: Initializing DOMStore, DataObserver, and Semaphore.`\n\t);\n\tservices.domStore = DOMStore.getInstance(\n\t\tservices.errors,\n\t\thelpers,\n\t\tservices.log\n\t);\n\tservices.observer = new DataObserver<T>(initialData);\n\n\tservices.setObserverData = (newData: T) => {\n\t\tservices.observer.setData(newData);\n\t\tservices.log(\n\t\t\t`DataObserver updated with new data: ${JSON.stringify(newData)}`,\n\t\t\t{\n\t\t\t\tcaller: '[SERVICE_FACTORY.setObserverData]',\n\t\t\t\tlevel: 'debug',\n\t\t\t\tverbosity: 2\n\t\t\t}\n\t\t);\n\t};\n\n\tservices.semaphore = new Semaphore(services.errors, services.log);\n\n\treturn services;\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AAiBgB,SAAA,cAAc,CAE5B,OAAgB,EAAE,WAAc,EAAA;AACjC,IAAA,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC;AAE3D,IAAA,OAAO,CAAC,GAAG,CACV,CAAA,uEAAA,CAAyE,CACzE;IACD,MAAM,QAAQ,GAAG,EAAiB;AAElC,IAAA,OAAO,CAAC,GAAG,CACV,CAAA,6EAAA,CAA+E,CAC/E;IACD,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC;IAC1C,QAAQ,CAAC,MAAM,GAAG,YAAY,CAAC,WAAW,CAAC,OAAO,EAAE,MAAM,CAAC;IAE3D,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;AAChC,QAAA,MAAM,IAAI,KAAK,CACd,iEAAiE,CACjE;;IAGF,QAAQ,CAAC,GAAG,GAAG,CAAC,OAAe,EAAE,OAAsB,KAAI;AAC1D,QAAA,OAAO,CAAC,KAAK,KAAK,MAAM;AACxB,QAAA,OAAO,CAAC,SAAS,KAAK,CAAC;QAEvB,IACC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,EAC7C;AACD,YAAA,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC;;AAGnD,QAAA,IAAI,OAAO,CAAC,KAAK,KAAK,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE;AAG1D,KAAC;AAED,IAAA,OAAO,CAAC,GAAG,CACV,CAAA,sEAAA,CAAwE,CACxE;AACD,IAAA,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,WAAW,CACvC,QAAQ,CAAC,MAAM,EACf,OAAO,EACP,QAAQ,CAAC,GAAG,CACZ;IACD,QAAQ,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAI,WAAW,CAAC;AAEpD,IAAA,QAAQ,CAAC,eAAe,GAAG,CAAC,OAAU,KAAI;AACzC,QAAA,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC;QAClC,QAAQ,CAAC,GAAG,CACX,CAAuC,oCAAA,EAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA,CAAE,EAChE;AACC,YAAA,MAAM,EAAE,mCAAmC;AAC3C,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,SAAS,EAAE;AACX,SAAA,CACD;AACF,KAAC;AAED,IAAA,QAAQ,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC;AAEjE,IAAA,OAAO,QAAQ;AAChB;;;;"}