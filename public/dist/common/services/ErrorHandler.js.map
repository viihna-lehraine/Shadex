{"version":3,"file":"ErrorHandler.js","sources":["../../../../../src/common/services/ErrorHandler.ts"],"sourcesContent":["// File: common/services/ErrorHandler.js\n\nimport { ErrorHandlerClassInterface } from '../../types/app.js';\nimport { AppLogger } from './AppLogger.js';\nimport { data } from '../../data/index.js';\n\nconst mode = data.mode;\nconst debugLevel = mode.debugLevel;\n\nexport class ErrorHandler implements ErrorHandlerClassInterface {\n\tprivate static instance: ErrorHandler | null = null;\n\tprivate logger: AppLogger;\n\n\tprivate constructor(logger: AppLogger) {\n\t\tthis.logger = logger;\n\t}\n\n\tpublic static getInstance(logger: AppLogger): ErrorHandler {\n\t\tif (!ErrorHandler.instance) {\n\t\t\tErrorHandler.instance = new ErrorHandler(logger);\n\t\t}\n\n\t\treturn ErrorHandler.instance;\n\t}\n\n\tpublic handle(\n\t\terror: unknown,\n\t\terrorMessage: string,\n\t\tcaller: string,\n\t\tcontext?: Record<string, unknown>,\n\t\tseverity?: 'warn' | 'error'\n\t): void {\n\t\tif (!context) context = {};\n\t\tif (!severity) severity = 'warn';\n\n\t\tconst formattedError = this.formatError(error, errorMessage, context);\n\n\t\tthis.logger.log(formattedError, severity, debugLevel, caller);\n\n\t\tif (mode.stackTrace) {\n\t\t\tthis.logger.log(\n\t\t\t\t`Stack trace:\\n${this.getStackTrace(error instanceof Error ? error : undefined)}`,\n\t\t\t\t'debug',\n\t\t\t\t3,\n\t\t\t\t'[ErrorHandler]'\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic async handleAsync<T>(\n\t\taction: () => Promise<T>,\n\t\terrorMessage: string,\n\t\tcaller: string = 'Unknown caller',\n\t\tcontext?: Record<string, unknown>,\n\t\tseverity?: 'warn' | 'error'\n\t): Promise<T> {\n\t\tif (!context) context = {};\n\t\tif (!severity) severity = 'warn';\n\t\ttry {\n\t\t\treturn await action();\n\t\t} catch (error) {\n\t\t\tthis.handle(error, errorMessage, caller, context, severity);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate formatError(\n\t\terror: unknown,\n\t\tmessage: string,\n\t\tcontext?: Record<string, unknown>\n\t): string {\n\t\treturn error instanceof Error\n\t\t\t? `${message}: ${error.message}. Context: ${JSON.stringify(context)}`\n\t\t\t: `${message}: ${error}. Context: ${JSON.stringify(context)}`;\n\t}\n\n\tprivate getStackTrace(error?: Error): string {\n\t\treturn error?.stack ?? new Error().stack ?? 'No stack trace available';\n\t}\n}\n"],"names":[],"mappings":";;AAAA;AAMA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI;AACtB,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU;MAErB,YAAY,CAAA;AAChB,IAAA,OAAO,QAAQ,GAAwB,IAAI;AAC3C,IAAA,MAAM;AAEd,IAAA,WAAA,CAAoB,MAAiB,EAAA;AACpC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM;;IAGd,OAAO,WAAW,CAAC,MAAiB,EAAA;AAC1C,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YAC3B,YAAY,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC;;QAGjD,OAAO,YAAY,CAAC,QAAQ;;IAGtB,MAAM,CACZ,KAAc,EACd,YAAoB,EACpB,MAAc,EACd,OAAiC,EACjC,QAA2B,EAAA;AAE3B,QAAA,IAAI,CAAC,OAAO;YAAE,OAAO,GAAG,EAAE;AAC1B,QAAA,IAAI,CAAC,QAAQ;YAAE,QAAQ,GAAG,MAAM;AAEhC,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,EAAE,OAAO,CAAC;AAErE,QAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC;AAE7D,QAAqB;AACpB,YAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CACd,CAAA,cAAA,EAAiB,IAAI,CAAC,aAAa,CAAC,KAAK,YAAY,KAAK,GAAG,KAAK,GAAG,SAAS,CAAC,CAAA,CAAE,EACjF,OAAO,EACP,CAAC,EACD,gBAAgB,CAChB;;;AAII,IAAA,MAAM,WAAW,CACvB,MAAwB,EACxB,YAAoB,EACpB,MAAA,GAAiB,gBAAgB,EACjC,OAAiC,EACjC,QAA2B,EAAA;AAE3B,QAAA,IAAI,CAAC,OAAO;YAAE,OAAO,GAAG,EAAE;AAC1B,QAAA,IAAI,CAAC,QAAQ;YAAE,QAAQ,GAAG,MAAM;AAChC,QAAA,IAAI;YACH,OAAO,MAAM,MAAM,EAAE;;QACpB,OAAO,KAAK,EAAE;AACf,YAAA,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;AAC3D,YAAA,MAAM,KAAK;;;AAIL,IAAA,WAAW,CAClB,KAAc,EACd,OAAe,EACf,OAAiC,EAAA;QAEjC,OAAO,KAAK,YAAY;AACvB,cAAE,CAAA,EAAG,OAAO,CAAA,EAAA,EAAK,KAAK,CAAC,OAAO,CAAc,WAAA,EAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAE;AACrE,cAAE,CAAA,EAAG,OAAO,CAAA,EAAA,EAAK,KAAK,CAAA,WAAA,EAAc,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;;AAGvD,IAAA,aAAa,CAAC,KAAa,EAAA;QAClC,OAAO,KAAK,EAAE,KAAK,IAAI,IAAI,KAAK,EAAE,CAAC,KAAK,IAAI,0BAA0B;;;;;;"}