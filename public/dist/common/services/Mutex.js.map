{"version":3,"file":"Mutex.js","sources":["../../../../../src/common/services/Mutex.ts"],"sourcesContent":["// File: common/services/Mutex.ts\n\nimport { LockQueueEntry, MutexInterface, Services } from '../../types/index.js';\nimport { env } from '../../config/index.js';\n\nconst caller = 'Mutex';\n\nexport class Mutex implements MutexInterface {\n\t#contentionCount: number = 0;\n\t#contentionHistory: number[] = [];\n\t#isLocked: boolean = false;\n\t#lockAttempts: number = 0;\n\t#lockQueue: LockQueueEntry[] = [];\n\t#readers: number = 0;\n\t#timeout: number;\n\n\t#errors: Services['errors'];\n\t#log: Services['log'];\n\n\tconstructor(errors: Services['errors'], log: Services['log']) {\n\t\tthis.#errors = errors;\n\t\tthis.#log = log;\n\t\tthis.#timeout = env.mutex.timeout;\n\n\t\tlog('Constructing Mutex instance.', {\n\t\t\tcaller: `${caller} constructor`\n\t\t});\n\t}\n\n\tasync acquireRead(): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tthis.#lockAttempts++;\n\n\t\t\treturn await this.#acquireLock(false);\n\t\t}, 'Error acquiring read lock.');\n\t}\n\n\tasync acquireReadWithTimeout(\n\t\ttimeout: number = this.#timeout\n\t): Promise<boolean> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\ttry {\n\t\t\t\tawait Promise.race([\n\t\t\t\t\tthis.acquireRead(),\n\t\t\t\t\tthis.#timeoutPromise(\n\t\t\t\t\t\ttimeout,\n\t\t\t\t\t\t'Read lock acquisition timed out.'\n\t\t\t\t\t)\n\t\t\t\t]);\n\t\t\t\treturn true;\n\t\t\t} catch (err) {\n\t\t\t\tthis.#log((err as Error).message, {\n\t\t\t\t\tcaller: '[Mutex.acquireReadWithTimeout]',\n\t\t\t\t\tlevel: 'warn'\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}, 'Error acquiring read lock with timeout.');\n\t}\n\n\tasync acquireWrite(): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tthis.#lockAttempts++;\n\n\t\t\treturn await this.#acquireLock(true);\n\t\t}, 'Error acquiring write lock.');\n\t}\n\n\tasync acquireWriteWithTimeout(\n\t\ttimeout: number = this.#timeout\n\t): Promise<boolean> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\ttry {\n\t\t\t\tawait Promise.race([\n\t\t\t\t\tthis.acquireWrite(),\n\t\t\t\t\tthis.#timeoutPromise(\n\t\t\t\t\t\ttimeout,\n\t\t\t\t\t\t'Write lock acquisition timed out.'\n\t\t\t\t\t)\n\t\t\t\t]);\n\t\t\t\treturn true;\n\t\t\t} catch (err) {\n\t\t\t\tthis.#log((err as Error).message, {\n\t\t\t\t\tcaller: '[Mutex.acquireWriteWithTimeout]',\n\t\t\t\t\tlevel: 'warn'\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}, 'Error acquiring write lock with timeout.');\n\t}\n\n\tgetContentionCount(): number {\n\t\treturn this.#contentionCount;\n\t}\n\n\tgetContentionRate(): string {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tif (this.#lockAttempts === 0) return '0';\n\t\t\treturn ((this.#contentionCount / this.#lockAttempts) * 100).toFixed(\n\t\t\t\t2\n\t\t\t);\n\t\t}, 'Error getting contention rate.');\n\t}\n\n\tlogContentionSnapShot(): void {\n\t\tthis.#errors.handleSync(() => {\n\t\t\tconst rate = Number(this.getContentionRate());\n\t\t\tthis.#contentionHistory.push(rate);\n\t\t\tif (\n\t\t\t\tthis.#contentionHistory.length >\n\t\t\t\tenv.mutex.contentionHistoryLimit\n\t\t\t) {\n\t\t\t\tthis.#contentionHistory.shift();\n\t\t\t}\n\t\t\tthis.#log(`Contention snapshot recorded: ${rate}%`, {\n\t\t\t\tcaller: `${caller}.logContentionSnapShot`,\n\t\t\t\tlevel: 'debug'\n\t\t\t});\n\t\t}, 'Error logging contention snapshot.');\n\t}\n\n\tasync read<T>(callback: () => T): Promise<T> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tawait this.acquireRead();\n\n\t\t\ttry {\n\t\t\t\tthis.#log('Executing read operation.', {\n\t\t\t\t\tcaller: `${caller}.read`,\n\t\t\t\t\tlevel: 'debug'\n\t\t\t\t});\n\n\t\t\t\treturn callback();\n\t\t\t} finally {\n\t\t\t\tthis.release();\n\t\t\t}\n\t\t}, 'Error reading from mutex.');\n\t}\n\n\tasync release(): Promise<void> {\n\t\treturn this.#errors.handleAndReturn(() => {\n\t\t\tthis.#log('Releasing lock.', {\n\t\t\t\tcaller: `${caller}.release`,\n\t\t\t\tlevel: 'debug'\n\t\t\t});\n\n\t\t\tif (this.#readers > 0) {\n\t\t\t\tthis.#readers--;\n\t\t\t\tthis.#log(\n\t\t\t\t\t`Released read lock. Active readers: ${this.#readers}`,\n\t\t\t\t\t{\n\t\t\t\t\t\tcaller: `${caller}.release`,\n\t\t\t\t\t\tlevel: 'debug'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (this.#readers === 0) this.#processQueue();\n\t\t\t} else if (this.#isLocked) {\n\t\t\t\tthis.#isLocked = false;\n\t\t\t\tthis.#log('Released write lock.', {\n\t\t\t\t\tcaller: `${caller}.release`,\n\t\t\t\t\tlevel: 'debug'\n\t\t\t\t});\n\t\t\t\tthis.#processQueue();\n\t\t\t} else {\n\t\t\t\tthis.#log('No lock to release.', {\n\t\t\t\t\tcaller: `${caller}.release`,\n\t\t\t\t\tlevel: 'warn'\n\t\t\t\t});\n\t\t\t}\n\t\t}, 'Error releasing lock.') as void;\n\t}\n\n\tresetContentionCount(): void {\n\t\tthis.#log(\n\t\t\t`Resetting contention count to 0 from ${this.#contentionCount}.`,\n\t\t\t{\n\t\t\t\tcaller: `${caller}.resetContentionCount`,\n\t\t\t\tlevel: 'debug'\n\t\t\t}\n\t\t);\n\n\t\tthis.#contentionCount = 0;\n\t}\n\n\tasync runExclusive<T>(callback: () => Promise<T> | T): Promise<T> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tawait this.acquireWrite();\n\n\t\t\ttry {\n\t\t\t\tthis.#log('Running exclusive (write) operation.', {\n\t\t\t\t\tcaller: `${caller}.runExclusive`,\n\t\t\t\t\tlevel: 'debug'\n\t\t\t\t});\n\n\t\t\t\tconst result = await callback();\n\n\t\t\t\tthis.#log('Exclusive operation completed.', {\n\t\t\t\t\tcaller: `${caller}.runExclusive`,\n\t\t\t\t\tlevel: 'debug'\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t} finally {\n\t\t\t\tthis.release();\n\t\t\t}\n\t\t}, 'Error running exclusive operation.');\n\t}\n\n\tasync upgradeToWriteLock(): Promise<void> {\n\t\treturn await this.#errors.handleAsync(async () => {\n\t\t\tawait this.release();\n\t\t\tawait this.acquireWrite();\n\t\t}, 'Error upgrading to write lock.');\n\t}\n\n\tasync #acquireLock(isWrite: boolean): Promise<void> {\n\t\treturn this.#errors.handleAndReturn(() => {\n\t\t\tthis.#log(\n\t\t\t\t`Attempting to acquire ${isWrite ? 'write' : 'read'} lock.`,\n\t\t\t\t{\n\t\t\t\t\tcaller: `${caller}.acquireLock`,\n\t\t\t\t\tlevel: 'debug'\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\t\tconst cleared = { value: false };\n\n\t\t\t\tconst safeResolve = () => {\n\t\t\t\t\tif (!cleared.value) {\n\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\tcleared.value = true;\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t\tif (!cleared.value) {\n\t\t\t\t\t\tthis.#log(\n\t\t\t\t\t\t\t`Lock acquisition timed out after ${this.#timeout} ms.`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcaller: `${caller}.acquireLock`,\n\t\t\t\t\t\t\t\tlevel: 'warn'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcleared.value = true;\n\t\t\t\t\t\treject(\n\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t`Lock acquisition timed out after ${this.#timeout} ms.`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}, this.#timeout);\n\n\t\t\t\tconst canAcquire = isWrite\n\t\t\t\t\t? !this.#isLocked && this.#readers === 0\n\t\t\t\t\t: !this.#isLocked;\n\n\t\t\t\tif (canAcquire) {\n\t\t\t\t\tisWrite ? (this.#isLocked = true) : this.#readers++;\n\n\t\t\t\t\tthis.#log(`${isWrite ? 'Write' : 'Read'} lock acquired.`, {\n\t\t\t\t\t\tcaller: `${caller}.acquireLock`,\n\t\t\t\t\t\tlevel: 'debug'\n\t\t\t\t\t});\n\n\t\t\t\t\tsafeResolve();\n\t\t\t\t} else {\n\t\t\t\t\tthis.#contentionCount++;\n\n\t\t\t\t\tthis.#log(\n\t\t\t\t\t\t`Lock contention detected. Queuing ${isWrite ? 'write' : 'read'} request.`,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcaller: `${caller}.acquireLock`,\n\t\t\t\t\t\t\tlevel: 'debug'\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.#lockQueue.push({ isWrite, resolve: safeResolve });\n\n\t\t\t\t\tthis.#processQueue();\n\t\t\t\t}\n\t\t\t});\n\t\t}, 'Error acquiring lock.');\n\t}\n\n\t#processQueue(): void {\n\t\tthis.#log('Processing lock queue.', {\n\t\t\tcaller: `${caller}.processQueue`,\n\t\t\tlevel: 'debug'\n\t\t});\n\n\t\tif (this.#lockQueue.length === 0) {\n\t\t\tthis.#log('No queued lock requests to process.', {\n\t\t\t\tcaller: `${caller}.processQueue`,\n\t\t\t\tlevel: 'debug'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextWriterIndex = this.#lockQueue.findIndex(\n\t\t\tentry => entry.isWrite\n\t\t);\n\n\t\t// if next queued lock is a writer and no readers are active, grant it\n\t\tif (nextWriterIndex === 0 && this.#readers === 0 && !this.#isLocked) {\n\t\t\tconst { resolve } = this.#lockQueue.shift()!;\n\t\t\tthis.#isLocked = true;\n\n\t\t\tthis.#log('Granted write lock to queued writer.', {\n\t\t\t\tcaller: `${caller}.processQueue`,\n\t\t\t\tlevel: 'debug'\n\t\t\t});\n\n\t\t\tresolve();\n\t\t\treturn;\n\t\t}\n\n\t\t// if no writers are queued, grant read locks to all queued readers\n\t\tif (nextWriterIndex === -1) {\n\t\t\tconst readers = this.#lockQueue.filter(entry => !entry.isWrite);\n\t\t\tthis.#lockQueue = this.#lockQueue.filter(entry => entry.isWrite); // Retain writers\n\n\t\t\treaders.forEach(({ resolve }) => {\n\t\t\t\tthis.#readers++;\n\t\t\t\tthis.#log(\n\t\t\t\t\t`Granted read lock. Active readers: ${this.#readers}`,\n\t\t\t\t\t{\n\t\t\t\t\t\tcaller: `${caller}.processQueue`,\n\t\t\t\t\t\tlevel: 'debug'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// writers exist but can't acquire lock yet; wait until readers finish\n\t\tif (nextWriterIndex > 0) {\n\t\t\tthis.#log(\n\t\t\t\t'Waiting for active readers to clear before granting writer.',\n\t\t\t\t{\n\t\t\t\t\tcaller: `${caller}.processQueue`,\n\t\t\t\t\tlevel: 'debug'\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\t#timeoutPromise(ms: number, message: string): Promise<never> {\n\t\treturn new Promise((_, reject) => {\n\t\t\tsetTimeout(() => reject(new Error(message)), ms);\n\t\t});\n\t}\n}\n"],"names":[],"mappings":"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"}