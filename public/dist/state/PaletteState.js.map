{"version":3,"file":"PaletteState.js","sources":["../../../../src/state/PaletteState.ts"],"sourcesContent":["// File: state/PaletteState.ts\n\nimport { UtilitiesInterface } from '../types/index.js';\nimport { StateManager } from './StateManager.js';\n\nexport class PaletteState {\n\tprivate utils: UtilitiesInterface;\n\n\tconstructor(\n\t\tprivate stateManager: StateManager,\n\t\tutils: UtilitiesInterface\n\t) {\n\t\tthis.utils = utils;\n\t}\n\n\tpublic updatePaletteItemColor(columnID: number, newColor: string): void {\n\t\tconst currentState = this.stateManager.getState();\n\t\tconst latestPalette = currentState.paletteHistory[0];\n\n\t\tif (!latestPalette) return;\n\n\t\t// find the PaletteItem corresponding to this column\n\t\tconst updatedItems = latestPalette.items.map(item => {\n\t\t\tif (item.itemID !== columnID) return item;\n\n\t\t\tconst parsedNewColor = this.utils.color.convertCSSToColor(newColor);\n\n\t\t\tif (!parsedNewColor) throw new Error('Invalid color value');\n\n\t\t\t// ensure color is in HSL format for further processing\n\t\t\tconst hslColor =\n\t\t\t\tparsedNewColor.format === 'hsl'\n\t\t\t\t\t? parsedNewColor\n\t\t\t\t\t: this.utils.color.convertToHSL(parsedNewColor);\n\n\t\t\t// generate all color representations\n\t\t\tconst allColors =\n\t\t\t\tthis.utils.palette.generateAllColorValues(hslColor);\n\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\tcolors: {\n\t\t\t\t\tcmyk: allColors.cmyk.value,\n\t\t\t\t\thex: allColors.hex.value,\n\t\t\t\t\thsl: allColors.hsl.value,\n\t\t\t\t\thsv: allColors.hsv.value,\n\t\t\t\t\tlab: allColors.lab.value,\n\t\t\t\t\trgb: allColors.rgb.value,\n\t\t\t\t\txyz: allColors.xyz.value\n\t\t\t\t},\n\t\t\t\tcss: {\n\t\t\t\t\tcmyk: this.utils.color.convertColorToCSS(allColors.cmyk),\n\t\t\t\t\thex: this.utils.color.convertColorToCSS(allColors.hex),\n\t\t\t\t\thsl: this.utils.color.convertColorToCSS(allColors.hsl),\n\t\t\t\t\thsv: this.utils.color.convertColorToCSS(allColors.hsv),\n\t\t\t\t\tlab: this.utils.color.convertColorToCSS(allColors.lab),\n\t\t\t\t\trgb: this.utils.color.convertColorToCSS(allColors.rgb),\n\t\t\t\t\txyz: this.utils.color.convertColorToCSS(allColors.xyz)\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\t// ensure column state is updated\n\t\tconst updatedColumns = updatedItems.map((item, index) => {\n\t\t\treturn {\n\t\t\t\tid: item.itemID,\n\t\t\t\tisLocked: currentState.paletteContainer.columns[index].isLocked,\n\t\t\t\tposition: index + 1,\n\t\t\t\tsize: currentState.paletteContainer.columns[index].size\n\t\t\t};\n\t\t});\n\n\t\t// update palette history\n\t\tconst updatedPaletteHistory = [\n\t\t\t{ ...latestPalette, items: updatedItems },\n\t\t\t...currentState.paletteHistory.slice(1)\n\t\t];\n\n\t\t// track in state history\n\t\tthis.stateManager.updatePaletteColumns(updatedColumns, true, 3);\n\n\t\t// update state history with new palette items\n\t\tthis.stateManager.updatePaletteHistory(updatedPaletteHistory);\n\t}\n}\n"],"names":[],"mappings":"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"}