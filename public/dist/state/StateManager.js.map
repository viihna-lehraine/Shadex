{"version":3,"file":"StateManager.js","sources":["../../../../src/state/StateManager.ts"],"sourcesContent":["// File: state/StateManager.js\n\nimport {\n\tHistory,\n\tPalette,\n\tServicesInterface,\n\tState,\n\tStateManagerInterface,\n\tUtilitiesInterface\n} from '../types/index.js';\nimport { StorageManager } from '../storage/StorageManager.js';\nimport { config, domConfig, domIndex } from '../config/index.js';\n\nconst defaultState = config.defaults.state;\n\nexport class StateManager implements StateManagerInterface {\n\tprivate static instance: StateManager | null = null;\n\tprivate onStateLoadCallback: (() => void) | null = null;\n\tprivate history: History;\n\tprivate state: State;\n\tprivate undoStack: History;\n\tprivate log: ServicesInterface['log'];\n\tprivate errors: ServicesInterface['errors'];\n\tprivate utils: UtilitiesInterface;\n\tprivate storage: StorageManager;\n\n\tprivate constructor(\n\t\tservices: ServicesInterface,\n\t\tutils: UtilitiesInterface\n\t) {\n\t\tthis.log = services.log;\n\t\tthis.errors = services.errors;\n\t\tthis.utils = utils;\n\t\tthis.storage = new StorageManager(services);\n\n\t\tthis.state = {} as State;\n\t\tthis.state.paletteHistory = [];\n\t\tthis.history = [this.state];\n\t\tthis.undoStack = [];\n\t\tthis.init();\n\t\tthis.saveStateAndLog('init', 3);\n\t}\n\n\tpublic static getInstance(\n\t\tservices: ServicesInterface,\n\t\tutils: UtilitiesInterface\n\t): StateManager {\n\t\tif (!StateManager.instance) {\n\t\t\tStateManager.instance = new StateManager(services, utils);\n\t\t}\n\n\t\treturn StateManager.instance;\n\t}\n\n\tpublic async init(): Promise<void> {\n\t\tthis.log('Initializing State Manager', 'debug');\n\n\t\tawait this.storage.init();\n\n\t\tthis.state =\n\t\t\t(await this.errors.handleAsync(\n\t\t\t\t() => this.loadState(),\n\t\t\t\t'Failed to load state. Generating initial state.'\n\t\t\t)) ?? this.generateInitialState();\n\n\t\tthis.log('StateManager initialized successfully.', 'debug');\n\n\t\tawait this.saveState();\n\t}\n\n\tpublic addPaletteToHistory(palette: Palette): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tthis.trackAction();\n\t\t\t\tthis.state.paletteHistory.push(palette);\n\t\t\t\tthis.saveStateAndLog('paletteHistory', 3);\n\t\t\t},\n\t\t\t'Failed to add palette to history',\n\t\t\t{ palette }\n\t\t);\n\t}\n\n\tpublic async ensureStateReady(): Promise<void> {\n\t\tlet attempts = 0;\n\t\tconst maxAttempts = 20; // prevent infinite loop\n\n\t\twhile (!this.state || !this.state.paletteContainer) {\n\t\t\tif (attempts++ >= maxAttempts) {\n\t\t\t\tthis.log('State initialization timed out.', 'error');\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.log(\n\t\t\t\t`Waiting for state to initialize... (Attempt ${attempts})`,\n\t\t\t\t'debug',\n\t\t\t\t3\n\t\t\t);\n\t\t\tawait new Promise(resolve => setTimeout(resolve, 50));\n\t\t}\n\n\t\tthis.log('State is now initialized.');\n\t}\n\n\tpublic getState(): State {\n\t\treturn (\n\t\t\tthis.errors.handle(() => {\n\t\t\t\tif (!this.state) {\n\t\t\t\t\tthrow new Error('State accessed before initialization.');\n\t\t\t\t}\n\t\t\t\tif (!this.state.preferences) {\n\t\t\t\t\tthis.log(\n\t\t\t\t\t\t'State.preferences is undefined. Adding default preferences.',\n\t\t\t\t\t\t'warn'\n\t\t\t\t\t);\n\t\t\t\t\tthis.state.preferences = defaultState.preferences;\n\t\t\t\t}\n\t\t\t\treturn this.state;\n\t\t\t}, 'Error retrieving state') ?? defaultState\n\t\t);\n\t}\n\n\tpublic async loadState(): Promise<State> {\n\t\tconst storedState = await this.storage.getItem<State>('appState');\n\n\t\tif (storedState) {\n\t\t\tthis.state = storedState;\n\n\t\t\tif (this.onStateLoadCallback) {\n\t\t\t\tthis.onStateLoadCallback();\n\t\t\t}\n\n\t\t\treturn storedState;\n\t\t} else {\n\t\t\tthis.log('No stored state found.', 'warn');\n\t\t\treturn this.generateInitialState();\n\t\t}\n\t}\n\n\tpublic redo(): void {\n\t\tthis.errors.handle(() => {\n\t\t\tif (this.undoStack.length > 0) {\n\t\t\t\tconst redoState = this.undoStack.pop();\n\t\t\t\tif (!redoState) {\n\t\t\t\t\tthis.log('Cannot redo: No redoState found.', 'debug');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.history.push(redoState);\n\t\t\t\tthis.state = { ...redoState };\n\n\t\t\t\tthis.log('Redo action performed.', 'debug');\n\t\t\t\tthis.saveStateAndLog('redo', 3);\n\t\t\t} else {\n\t\t\t\tthrow new Error('No state to redo.');\n\t\t\t}\n\t\t}, 'Redo operation failed');\n\t}\n\n\tpublic async resetState(): Promise<void> {\n\t\tawait this.errors.handleAsync(async () => {\n\t\t\tthis.trackAction();\n\t\t\tthis.state = defaultState;\n\t\t\tawait this.saveState();\n\t\t\tthis.log('App state has been reset', 'debug');\n\t\t}, 'Failed to reset state');\n\t}\n\n\tpublic setOnStateLoad(callback: () => void): void {\n\t\tthis.errors.handle(() => {\n\t\t\tthis.onStateLoadCallback = callback;\n\t\t}, 'Failed to set onStateLoad callback');\n\t}\n\n\tpublic async setState(state: State, track: boolean): Promise<void> {\n\t\tif (track) this.trackAction();\n\t\tthis.state = state;\n\t\tthis.log('App state has been updated', 'debug');\n\t\tawait this.saveState();\n\t}\n\n\tpublic undo(): void {\n\t\tthis.errors.handle(() => {\n\t\t\tif (this.history.length < 1) {\n\t\t\t\tthrow new Error('No previous state to revert to.');\n\t\t\t}\n\t\t\tthis.trackAction();\n\t\t\tthis.undoStack.push(this.history.pop() as State);\n\t\t\tthis.state = { ...this.history[this.history.length - 1] };\n\t\t\tthis.log('Undo action performed.', 'debug');\n\t\t\tthis.saveStateAndLog('undo', 3);\n\t\t}, 'Undo operation failed');\n\t}\n\n\tpublic updateAppModeState(appMode: State['appMode'], track: boolean): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tif (track) this.trackAction();\n\t\t\t\tthis.state.appMode = appMode;\n\t\t\t\tthis.log(`Updated appMode: ${appMode}`);\n\t\t\t\tthis.saveStateAndLog('appMode', 3);\n\t\t\t},\n\t\t\t'Failed to update app mode state',\n\t\t\t{ appMode, track }\n\t\t);\n\t}\n\n\tpublic updatePaletteColumns(\n\t\tcolumns: State['paletteContainer']['columns'],\n\t\ttrack: boolean,\n\t\tverbosity: number\n\t): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tif (!this.state || !this.state.paletteContainer) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'updatePaletteColumns() called before state initialization.'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!this.utils.core.getElement<HTMLDivElement>(\n\t\t\t\t\t\tdomIndex.ids.divs.paletteContainer\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.log('Palette Container not found in the DOM.', 'warn');\n\t\t\t\t}\n\n\t\t\t\tif (track) this.trackAction();\n\t\t\t\tthis.state.paletteContainer.columns = columns;\n\t\t\t\tthis.log(`Updated paletteContainer columns`, 'debug');\n\t\t\t\tthis.saveStateAndLog('paletteColumns', verbosity);\n\t\t\t},\n\t\t\t'Failed to update palette columns',\n\t\t\t{ columns, track, verbosity }\n\t\t);\n\t}\n\n\tpublic updatePaletteColumnSize(columnID: number, newSize: number): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst columns = this.state.paletteContainer.columns;\n\t\t\t\tconst columnIndex = columns.findIndex(\n\t\t\t\t\tcol => col.id === columnID\n\t\t\t\t);\n\t\t\t\tif (columnIndex === -1) return;\n\n\t\t\t\tconst minSize = domConfig.minColumnSize;\n\t\t\t\tconst maxSize = domConfig.maxColumnSize;\n\t\t\t\tconst adjustedSize = Math.max(\n\t\t\t\t\tminSize,\n\t\t\t\t\tMath.min(newSize, maxSize)\n\t\t\t\t);\n\n\t\t\t\tconst sizeDifference = adjustedSize - columns[columnIndex].size;\n\t\t\t\tcolumns[columnIndex].size = adjustedSize;\n\n\t\t\t\tconst unlockedColumns = columns.filter(\n\t\t\t\t\t(col, index) => index !== columnIndex && !col.isLocked\n\t\t\t\t);\n\t\t\t\tconst distributionAmount =\n\t\t\t\t\tsizeDifference / unlockedColumns.length;\n\t\t\t\tunlockedColumns.forEach(\n\t\t\t\t\tcol => (col.size -= distributionAmount)\n\t\t\t\t);\n\n\t\t\t\tconst finalTotalSize = columns.reduce(\n\t\t\t\t\t(sum, col) => sum + col.size,\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t\tconst correctionFactor = 100 / finalTotalSize;\n\t\t\t\tcolumns.forEach(col => (col.size *= correctionFactor));\n\n\t\t\t\tthis.log(`Updated column size`, 'debug');\n\t\t\t\tthis.saveStateAndLog('paletteColumnSize', 3);\n\t\t\t},\n\t\t\t'Failed to update palette column size',\n\t\t\t{ columnID, newSize }\n\t\t);\n\t}\n\n\tpublic updatePaletteHistory(updatedHistory: Palette[]): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tthis.trackAction();\n\t\t\t\tthis.state.paletteHistory = updatedHistory;\n\t\t\t\tthis.saveState();\n\t\t\t\tthis.log('Updated palette history');\n\t\t\t},\n\t\t\t'Failed to update palette history',\n\t\t\t{ updatedHistory }\n\t\t);\n\t}\n\n\tpublic updateSelections(\n\t\tselections: Partial<State['selections']>,\n\t\ttrack: boolean\n\t): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tif (track) this.trackAction();\n\t\t\t\tthis.state.selections = {\n\t\t\t\t\t...this.state.selections,\n\t\t\t\t\t...selections\n\t\t\t\t};\n\t\t\t\tthis.log(`Updated selections`, 'debug');\n\t\t\t\tthis.saveStateAndLog('selections', 2);\n\t\t\t},\n\t\t\t'Failed to update selections',\n\t\t\t{ selections, track }\n\t\t);\n\t}\n\n\tprivate generateInitialState(): State {\n\t\treturn (\n\t\t\tthis.errors.handle(() => {\n\t\t\t\tconst columnData = this.utils.dom.scanPaletteColumns();\n\t\t\t\tthis.log(\n\t\t\t\t\t`Scanned ${columnData.length} columns in Palette Container element`,\n\t\t\t\t\t'debug'\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\tappMode: 'edit',\n\t\t\t\t\tpaletteContainer: { columns: columnData || [] },\n\t\t\t\t\tpaletteHistory: [],\n\t\t\t\t\tpreferences: {\n\t\t\t\t\t\tcolorSpace: 'hsl',\n\t\t\t\t\t\tdistributionType: 'soft',\n\t\t\t\t\t\tmaxHistory: 20,\n\t\t\t\t\t\tmaxPaletteHistory: 10,\n\t\t\t\t\t\ttheme: 'light'\n\t\t\t\t\t},\n\t\t\t\t\tselections: {\n\t\t\t\t\t\tpaletteColumnCount: columnData.length,\n\t\t\t\t\t\tpaletteType: 'complementary',\n\t\t\t\t\t\ttargetedColumnPosition: 1\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: this.utils.app.getFormattedTimestamp()\n\t\t\t\t};\n\t\t\t}, 'Failed to generate initial state') ?? defaultState\n\t\t);\n\t}\n\n\tprivate saveStateAndLog(property: string, verbosity?: number): void {\n\t\tthis.log(`StateManager Updated ${property}`, 'debug', verbosity);\n\t\tthis.saveState();\n\t}\n\n\tprivate async saveState(): Promise<void> {\n\t\tawait this.errors.handleAsync(\n\t\t\t() => this.storage.setItem('appState', this.state),\n\t\t\t'Failed to save app state.'\n\t\t);\n\t}\n\n\tprivate trackAction(): void {\n\t\t// push a copy of the current state before making changes\n\t\tthis.history.push({ ...this.state });\n\t}\n}\n"],"names":[],"mappings":"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"}