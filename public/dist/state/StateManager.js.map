{"version":3,"file":"StateManager.js","sources":["../../../../src/state/StateManager.ts"],"sourcesContent":["// File: state/StateManager.ts\n\nimport {\n\tHelpers,\n\tHistory,\n\tServices,\n\tState,\n\tStateManagerContract,\n\tUtilities\n} from '../types/index.js';\nimport { StateFactory } from './StateFactory.js';\nimport { StorageManager } from '../storage/StorageManager.js';\nimport { env } from '../config/index.js';\n\nconst caller = 'StateManager';\nconst maxReadyAttempts = env.state.maxReadyAttempts;\nconst stateReadyTimeout = env.state.readyTimeout;\n\nexport class StateManager implements StateManagerContract {\n\tstatic #instance: StateManager | null = null;\n\n\t#state: State;\n\t#stateFactory: StateFactory;\n\t#storage!: StorageManager;\n\n\t#history: History = [];\n\t#redoStack: History = [];\n\t#undoStack: History = [];\n\n\t#debouncedSave!: (state: State) => void;\n\t#deepClone: Helpers['data']['deepClone'];\n\t#deepFreeze: Helpers['data']['deepFreeze'];\n\t#debounce: Helpers['time']['debounce'];\n\t#log: Services['log'];\n\t#errors: Services['errors'];\n\n\tprivate constructor(helpers: Helpers, services: Services, utils: Utilities) {\n\t\ttry {\n\t\t\tservices.log.debug(\n\t\t\t\t`Constructing ${caller} instance.`,\n\t\t\t\t`${caller} constructor`\n\t\t\t);\n\n\t\t\tthis.#deepClone = helpers.data.deepClone;\n\t\t\tthis.#deepFreeze = helpers.data.deepFreeze;\n\t\t\tthis.#debounce = helpers.time.debounce;\n\t\t\tthis.#log = services.log;\n\t\t\tthis.#errors = services.errors;\n\n\t\t\tthis.#state = {} as State;\n\t\t\tthis.#stateFactory = StateFactory.getInstance(helpers, services, utils);\n\n\t\t\tthis.init(services).catch(error => {\n\t\t\t\tthis.#log.error('StateManager init failed.', `${caller} constructor`);\n\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthrow new Error(\n\t\t\t\t`[${caller} constructor]: ${error instanceof Error ? error.message : error}`\n\t\t\t);\n\t\t}\n\t}\n\n\tstatic async getInstance(\n\t\thelpers: Helpers,\n\t\tservices: Services,\n\t\tutils: Utilities\n\t): Promise<StateManager> {\n\t\treturn services.errors.handleSync(() => {\n\t\t\tif (!StateManager.#instance) {\n\t\t\t\tservices.log.debug(\n\t\t\t\t\t`Creating new StateManager instance.`,\n\t\t\t\t\t`${caller}.getInstance`\n\t\t\t\t);\n\n\t\t\t\tStateManager.#instance = new StateManager(helpers, services, utils);\n\t\t\t}\n\n\t\t\tservices.log.debug(\n\t\t\t\t`Returning ${caller} instance.`,\n\t\t\t\t`${caller}.getInstance`\n\t\t\t);\n\n\t\t\treturn StateManager.#instance;\n\t\t}, `[${caller}]: Error getting StateManager instance.`);\n\t}\n\n\tasync init(services: Services): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tthis.#log.debug('Initializing State Manager.', `${caller}.init`);\n\n\t\t\tthis.#storage = await StorageManager.getInstance(services);\n\t\t\tthis.#debouncedSave = this.#debounce<(state: State) => void>(\n\t\t\t\t(state: State) => this.saveState(state),\n\t\t\t\tenv.state.saveThrottleDelay\n\t\t\t);\n\n\t\t\tthis.#state = await this.loadState();\n\n\t\t\tconsole.log(`[${caller}.init]: State after loadState():`, this.#state);\n\n\t\t\tthis.saveState();\n\t\t}, `[${caller}.init]: Failed to initialize State Manager.`);\n\t}\n\n\tasync batchUpdate(updates: Partial<State>): Promise<void> {\n\t\tthis.#errors.handleSync(() => {\n\t\t\tconst currentState = this.#deepClone(this.get() as State);\n\n\t\t\tconst isShallowEqual = Object.keys(updates).every(key =>\n\t\t\t\tObject.is(currentState[key as keyof State], updates[key as keyof State])\n\t\t\t);\n\n\t\t\tif (isShallowEqual) {\n\t\t\t\tthis.#log.debug(\n\t\t\t\t\t'Skipping redundant batch update.',\n\t\t\t\t\t`${caller}.batchUpdate`\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newState = { ...currentState, ...updates };\n\t\t\tthis.#commitState(newState);\n\n\t\t\tthis.#log.debug(`Batch updated state.`, `${caller}.batchUpdate`);\n\t\t}, `[${caller}.batchUpdate]: Failed to perform batch update`);\n\t}\n\n\tclearHistory(): void {\n\t\tthis.#errors.handleSync(() => {\n\t\t\tthis.#history = [];\n\t\t\tthis.#redoStack = [];\n\t\t\tthis.#undoStack = [];\n\n\t\t\tthis.#log.info(`History and undo stack cleared.`, `${caller}.clear`);\n\t\t}, `[${caller}.clearHistory]: Failed to clear history.`);\n\t}\n\n\tasync ensureStateReady(): Promise<void> {\n\t\treturn await this.#errors.handleAsync(\n\t\t\tasync () => {\n\t\t\t\tlet attempts = 0;\n\n\t\t\t\twhile (!this.#state || !this.#state.paletteContainer) {\n\t\t\t\t\tif (attempts++ >= maxReadyAttempts) {\n\t\t\t\t\t\tthis.#log.error(\n\t\t\t\t\t\t\t'State initialization timed out.',\n\t\t\t\t\t\t\t`${caller}.ensureStateReady`\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthrow new Error('State initialization timed out.');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.#log.debug(\n\t\t\t\t\t\t`Waiting for state to initialize... (Attempt ${attempts}).`,\n\t\t\t\t\t\t`${caller}.ensureStateReady`\n\t\t\t\t\t);\n\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, stateReadyTimeout));\n\t\t\t\t}\n\n\t\t\t\tthis.#log.debug(\n\t\t\t\t\t'State is now initialized.',\n\t\t\t\t\t`${caller}.ensureStateReady`\n\t\t\t\t);\n\t\t\t},\n\t\t\t`[${caller}]: Failed to ensure state readiness.`,\n\t\t\t{ context: { maxReadyAttempts } }\n\t\t);\n\t}\n\n\tget<K extends keyof State>(key?: K): State | State[K] {\n\t\treturn this.#errors.handleSync(\n\t\t\t() => {\n\t\t\t\tconst latestState = this.#history.at(-1) ?? this.#state;\n\t\t\t\treturn key ? latestState[key] : latestState;\n\t\t\t},\n\t\t\t`[${caller}.get]: Failed to retrieve state key: ${String(key)}`\n\t\t);\n\t}\n\n\tasync loadState(): Promise<State> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tconst loadedState = await this.#storage.getItem<State>('state');\n\t\t\tif (loadedState) {\n\t\t\t\tthis.#state = this.#deepFreeze(this.#deepClone(loadedState));\n\t\t\t\tthis.#log.info('State loaded from storage.', `${caller}.loadState`);\n\t\t\t\treturn this.#state;\n\t\t\t}\n\t\t\tthis.#log.debug(\n\t\t\t\t'No saved state found. Creating initial state.',\n\t\t\t\t`${caller}.loadState`\n\t\t\t);\n\t\t\treturn await this.#stateFactory.createInitialState();\n\t\t}, `[${caller}.loadState]: Failed to load state.`);\n\t}\n\n\tredo(): State | null {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tif (this.#redoStack.length === 0) {\n\t\t\t\tthis.#log.info('No redo actions available.', `StateManager.redo`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst newState = this.#redoStack.pop()!;\n\t\t\tthis.#commitState(newState);\n\n\t\t\tthis.#log.debug(`Redo performed.`, `StateManager.redo`);\n\t\t\treturn newState;\n\t\t}, `[${caller}.redo]: Failed to redo action.`);\n\t}\n\n\tasync replaceState(newState: State): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tthis.#trackAction();\n\t\t\tthis.#commitState(newState);\n\t\t\tthis.#log.info('State replaced.', `${caller}.replaceState`);\n\t\t}, `[${caller}.replaceState]: Failed to set new state.`);\n\t}\n\n\tasync resetState(): Promise<void> {\n\t\tconst initialState = await this.#stateFactory.createInitialState();\n\n\t\tthis.#commitState(initialState);\n\n\t\tthis.#log.info('State has been reset.', `${caller}.resetState`);\n\t}\n\n\tasync saveState(\n\t\tstate: State = this.#state,\n\t\toptions: { throttle?: boolean } = {}\n\t): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tif (Object.is(this.#state, state)) {\n\t\t\t\tthis.#log.debug('Skipping redundant save.', `${caller}.saveState`);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (options.throttle) {\n\t\t\t\tthis.#debouncedSave(state);\n\t\t\t} else {\n\t\t\t\tawait this.#saveOperation(state);\n\t\t\t}\n\t\t}, `[${caller}.saveState]: Failed to save state.`);\n\t}\n\n\tundo(): State | null {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tif (this.#undoStack.length <= 1) {\n\t\t\t\tthis.#log.info('No undo actions available.', `StateManager.undo`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis.#redoStack.push(this.get() as State);\n\t\t\tthis.#undoStack.pop();\n\n\t\t\tconst newState = this.#undoStack.at(-1)!;\n\t\t\tthis.#commitState(newState);\n\n\t\t\tthis.#log.debug(`Undo performed.`, `StateManager.undo`);\n\t\t\treturn newState;\n\t\t}, `[StateManager.undo]: Failed to undo action.`);\n\t}\n\n\t#commitState(newState: State): void {\n\t\tthis.#errors.handleSync(() => {\n\t\t\tconst committedState = this.#deepFreeze(this.#deepClone(newState));\n\n\t\t\tthis.#history.push(committedState);\n\t\t\tif (this.#history.length > env.app.historyLimit) {\n\t\t\t\tthis.#history.shift();\n\t\t\t}\n\n\t\t\tthis.#state = committedState;\n\n\t\t\tthis.#log.debug(\n\t\t\t\t`Committed new state to history.`,\n\t\t\t\t`${caller}.commitState`\n\t\t\t);\n\t\t\tthis.saveState();\n\t\t}, `[${caller}.commitState]: Failed to commit new state.`);\n\t}\n\n\tasync #saveOperation(state: State): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tfor (let attempt = 1; attempt <= env.state.maxSaveRetries; attempt++) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.#storage.setItem('state', state);\n\n\t\t\t\t\tthis.#log.info(\n\t\t\t\t\t\t`State saved successfully on attempt ${attempt}.`,\n\t\t\t\t\t\t`${caller}.#saveOperation`\n\t\t\t\t\t);\n\n\t\t\t\t\tbreak;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (attempt < env.state.maxSaveRetries) {\n\t\t\t\t\t\tthis.#log.warn(\n\t\t\t\t\t\t\t`Save attempt ${attempt} failed. Retrying...`,\n\t\t\t\t\t\t\t`${caller}.#saveOperation`\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.#log.error(\n\t\t\t\t\t\t\t'Max save attempts reached. Save failed.',\n\t\t\t\t\t\t\t`${caller}.#saveOperation`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, `[${caller}.#saveOperation]: Save operation failed.`);\n\t}\n\n\t#trackAction(): void {\n\t\tthis.#errors.handleSync(() => {\n\t\t\tconst clonedState = this.#deepFreeze(this.#deepClone(this.#state));\n\n\t\t\tthis.#history.push(clonedState);\n\t\t\tthis.#undoStack.push(clonedState);\n\t\t\tthis.#redoStack = [];\n\n\t\t\tif (this.#history.length > env.app.historyLimit) {\n\t\t\t\tthis.#history.shift();\n\t\t\t}\n\n\t\t\tthis.#log.debug(\n\t\t\t\t`Tracked new action in history.`,\n\t\t\t\t`${caller}.trackAction`\n\t\t\t);\n\t\t}, `[${caller}.trackAction]: Tracking failed.`);\n\t}\n}\n"],"names":[],"mappings":"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"}