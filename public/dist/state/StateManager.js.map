{"version":3,"file":"StateManager.js","sources":["../../../../src/state/StateManager.ts"],"sourcesContent":["// File: state/StateManager.js\n\nimport {\n\tHistory,\n\tPalette,\n\tServicesInterface,\n\tState,\n\tStateManagerClassInterface\n} from '../types/index.js';\nimport { defaultData as defaults } from '../data/defaults.js';\n\nconst defaultState = defaults.state;\n\nexport class StateManager implements StateManagerClassInterface {\n\tprivate static instance: StateManager | null = null;\n\tprivate history: History;\n\tprivate state: State;\n\tprivate undoStack: History;\n\tprivate log: ServicesInterface['app']['log'];\n\n\tprivate constructor(services: ServicesInterface) {\n\t\tconsole.log(`services.app.log:`, services?.app?.log);\n\n\t\tif (!services?.app?.log || typeof services.app.log !== 'function') {\n\t\t\tthrow new Error('services.app.log is not a function');\n\t\t}\n\n\t\tthis.state = defaultState;\n\t\tthis.history = [defaultState];\n\t\tthis.undoStack = [];\n\t\tthis.log = services.app.log;\n\t\tthis.saveToStorage('appState', this.state);\n\t\tthis.log(\n\t\t\t'info',\n\t\t\t'StateManager initialized with default app state.',\n\t\t\t'StateManager.constructor()',\n\t\t\t1\n\t\t);\n\t}\n\n\tpublic static getInstance(services: ServicesInterface): StateManager {\n\t\tif (!StateManager.instance) {\n\t\t\tStateManager.instance = new StateManager(services);\n\t\t}\n\n\t\treturn StateManager.instance;\n\t}\n\n\tpublic addPaletteToHistory(palette: Palette): void {\n\t\tthis.trackAction();\n\t\tthis.state.paletteHistory.push(palette);\n\t\tthis.saveStateAndLog('paletteHistory', 3);\n\t}\n\n\tpublic getState(): State {\n\t\tthis.log(\n\t\t\t'debug',\n\t\t\t`State retrieved: ${this.state}`,\n\t\t\t'StateManager.getState()',\n\t\t\t2\n\t\t);\n\t\treturn this.state;\n\t}\n\n\tpublic resetState(): void {\n\t\tthis.trackAction();\n\t\tthis.state = defaultState;\n\t\tthis.saveToStorage('appState', this.state);\n\t\tthis.log(\n\t\t\t'info',\n\t\t\t'App state has been reset',\n\t\t\t'StateManager.resetState()',\n\t\t\t3\n\t\t);\n\t}\n\n\tpublic redo(): void {\n\t\tif (this.undoStack.length > 0) {\n\t\t\t// pop the last undone state from undoStack\n\t\t\tconst redoState = this.undoStack.pop();\n\n\t\t\tif (!redoState || redoState === undefined) {\n\t\t\t\tthis.log('warn', 'No state to redo.', 'StateManager.redo()', 3);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// push it back to history\n\t\t\tthis.history.push(redoState);\n\t\t\tthis.state = { ...redoState! };\n\n\t\t\tthis.log(\n\t\t\t\t'info',\n\t\t\t\t'Redo action performed.',\n\t\t\t\t'StateManager.redo()',\n\t\t\t\t3\n\t\t\t);\n\t\t\tthis.saveStateAndLog('redo', 3);\n\t\t} else {\n\t\t\tthis.log('warn', 'No state to redo.', 'StateManager.redo()', 3);\n\t\t}\n\t}\n\n\tpublic setState(state: State, track: boolean): void {\n\t\tif (track) this.trackAction();\n\t\tthis.state = state;\n\n\t\tthis.log(\n\t\t\t'info',\n\t\t\t'App state has been updated',\n\t\t\t'StateManager.setState()',\n\t\t\t1\n\t\t);\n\t}\n\n\tprivate trackAction(): void {\n\t\t// push a copy of the current state before making changes\n\t\tthis.history.push(JSON.parse(JSON.stringify(this.state)));\n\t}\n\n\tpublic undo(): void {\n\t\t// ensure there's at least 1 previous state\n\t\tif (this.history.length >= 1) {\n\t\t\tthis.trackAction();\n\t\t\t// remove current state from history\n\t\t\tthis.undoStack.push(this.history.pop() as State);\n\t\t\t// get previous state\n\t\t\tconst previousState = this.history[this.history.length - 1];\n\n\t\t\t// restore previous state without merging\n\t\t\tthis.state = { ...previousState };\n\n\t\t\tthis.log(\n\t\t\t\t'info',\n\t\t\t\t'App State undo action prformed.',\n\t\t\t\t'StateManager.undo()',\n\t\t\t\t3\n\t\t\t);\n\t\t\tthis.saveStateAndLog('undo', 3);\n\t\t} else {\n\t\t\tthis.log(\n\t\t\t\t'warn',\n\t\t\t\t'Cannot perform Undo action. No previous state to revert to.',\n\t\t\t\t'StateManager.undo()',\n\t\t\t\t3\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic updateAppModeState(appMode: State['appMode'], track: boolean): void {\n\t\tif (track) this.trackAction();\n\t\tthis.state.appMode = appMode;\n\t\tthis.log(\n\t\t\t'info',\n\t\t\t`Updated appMode: ${appMode}`,\n\t\t\t'StateManager.updateAppMode()',\n\t\t\t1\n\t\t);\n\t\tthis.saveStateAndLog('appMode', 3);\n\t}\n\n\tpublic updateDnDAttachedState(dndAttached: boolean): void {\n\t\tthis.state.paletteContainer.dndAttached = dndAttached;\n\t\tthis.log(\n\t\t\t'info',\n\t\t\t`Updated dndAttached: ${dndAttached}`,\n\t\t\t'StateManager.updateDnDAttached()',\n\t\t\t1\n\t\t);\n\t\tthis.saveStateAndLog('dndAttached', 4);\n\t}\n\n\tpublic updatePaletteColumns(\n\t\tcolumns: State['paletteContainer']['columns'],\n\t\ttrack: boolean,\n\t\tverbosity: number\n\t): void {\n\t\tif (track) this.trackAction();\n\t\tthis.state.paletteContainer.columns = columns;\n\t\tthis.log(\n\t\t\t'info',\n\t\t\t`Updated paletteContainer columns`,\n\t\t\t'StateManager.updatePaletteColumns()',\n\t\t\t1\n\t\t);\n\n\t\tthis.saveStateAndLog('paletteColumns', verbosity);\n\t}\n\n\tpublic updatePaletteColumnSize(columnID: number, newSize: number): void {\n\t\tconst columns = this.state.paletteContainer.columns;\n\t\tconst columnIndex = columns.findIndex(col => col.id === columnID);\n\n\t\tif (columnIndex === -1) return; // column not found\n\n\t\t// ensure the new size isn't negative or too large\n\t\tconst minSize = 5; // minimum width in %\n\t\tconst maxSize = 70; // maximum width in %\n\t\tconst adjustedSize = Math.max(minSize, Math.min(newSize, maxSize));\n\n\t\t// determine how much space was added or removed\n\t\tconst sizeDifference = adjustedSize - columns[columnIndex].size;\n\t\tcolumns[columnIndex].size = adjustedSize;\n\n\t\t// distribute the size difference across other unlocked columns\n\t\tconst unlockedColumns = columns.filter(\n\t\t\t(col, index) => index !== columnIndex && !col.isLocked\n\t\t);\n\t\tconst distributionAmount = sizeDifference / unlockedColumns.length;\n\n\t\tunlockedColumns.forEach(col => {\n\t\t\tcol.size -= distributionAmount;\n\t\t});\n\n\t\t// ensure the total width remains at 100%\n\t\tconst finalTotalSize = columns.reduce((sum, col) => sum + col.size, 0);\n\t\tconst correctionFactor = 100 / finalTotalSize;\n\t\tcolumns.forEach(col => (col.size *= correctionFactor));\n\n\t\tthis.log(\n\t\t\t'info',\n\t\t\t`Updated column size`,\n\t\t\t'StateManager.updatePaletteColumnSize()',\n\t\t\t1\n\t\t);\n\t\tthis.saveStateAndLog('paletteColumnSize', 3);\n\t}\n\n\tpublic updatePaletteHistory(updatedHistory: Palette[]): void {\n\t\tthis.trackAction();\n\t\tthis.state.paletteHistory = updatedHistory;\n\t\tthis.saveToStorage('paletteHistory', updatedHistory);\n\t\tthis.log(\n\t\t\t'info',\n\t\t\t'Updated palette history',\n\t\t\t'StateManager.updatePaletteHistory()',\n\t\t\t3\n\t\t);\n\t}\n\n\tpublic updateSelections(\n\t\tselections: Partial<State['selections']>,\n\t\ttrack: boolean\n\t): void {\n\t\tif (track) this.trackAction();\n\t\tthis.state.selections = {\n\t\t\t...this.state.selections,\n\t\t\t...selections\n\t\t};\n\t\tthis.log(\n\t\t\t'info',\n\t\t\t`Updated selections`,\n\t\t\t'StateManager.updateSelections()',\n\t\t\t1\n\t\t);\n\t\tthis.saveStateAndLog('selections', 2);\n\t}\n\n\tprivate saveStateAndLog(property: string, verbosity: number): void {\n\t\tthis.log(\n\t\t\t'info',\n\t\t\t`Updated ${property}`,\n\t\t\t`StateManager.update${property}()`,\n\t\t\tverbosity\n\t\t);\n\t\tthis.saveToStorage('appState', this.state);\n\t}\n\n\tprivate saveToStorage<T>(key: string, value: T): void {\n\t\tlocalStorage.setItem(key, JSON.stringify(value));\n\t}\n}\n"],"names":["defaults"],"mappings":"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"}