{"version":3,"file":"StateManager.js","sources":["../../../../src/state/StateManager.ts"],"sourcesContent":["// File: state/StateManager.ts\n\nimport {\n\tHelpers,\n\tPalette,\n\tServices,\n\tState,\n\tStateManagerContract,\n\tUtilities\n} from '../types/index.js';\nimport { StateFactory } from './StateFactory.js';\nimport { StateHistoryService } from './StateHistoryService.js';\nimport { StateStore } from './StateStore.js';\nimport { StorageManager } from '../storage/StorageManager.js';\nimport { env } from '../config/index.js';\n\nconst caller = 'StateManager';\nconst maxReadyAttempts = env.state.maxReadyAttempts;\nconst stateReadyTimeout = env.state.readyTimeout;\n\nexport class StateManager implements StateManagerContract {\n\tstatic #instance: StateManager | null = null;\n\n\t#state: State;\n\t#stateFactory: StateFactory;\n\t#stateHistory: StateHistoryService;\n\t#storage!: StorageManager;\n\t#store!: StateStore;\n\n\t#log: Services['log'];\n\t#errors: Services['errors'];\n\n\tprivate constructor(helpers: Helpers, services: Services, utils: Utilities) {\n\t\ttry {\n\t\t\tservices.log.debug(\n\t\t\t\t`Constructing ${caller} instance.`,\n\t\t\t\t`${caller} constructor`\n\t\t\t);\n\n\t\t\tthis.#log = services.log;\n\t\t\tthis.#errors = services.errors;\n\n\t\t\tthis.#state = {} as State;\n\n\t\t\tthis.#stateFactory = StateFactory.getInstance(helpers, services, utils);\n\t\t\tthis.#stateHistory = StateHistoryService.getInstance(helpers, services);\n\n\t\t\tthis.init(helpers, services).catch(error => {\n\t\t\t\tthis.#log.error('StateManager init failed.', `${caller} constructor`);\n\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthrow new Error(\n\t\t\t\t`[${caller} constructor]: ${error instanceof Error ? error.message : error}`\n\t\t\t);\n\t\t}\n\t}\n\n\tstatic async getInstance(\n\t\thelpers: Helpers,\n\t\tservices: Services,\n\t\tutils: Utilities\n\t): Promise<StateManager> {\n\t\treturn services.errors.handleSync(() => {\n\t\t\tif (!StateManager.#instance) {\n\t\t\t\tservices.log.debug(\n\t\t\t\t\t`Creating new StateManager instance.`,\n\t\t\t\t\t`${caller}.getInstance`\n\t\t\t\t);\n\n\t\t\t\tStateManager.#instance = new StateManager(helpers, services, utils);\n\t\t\t}\n\n\t\t\tservices.log.debug(\n\t\t\t\t`Returning ${caller} instance.`,\n\t\t\t\t`${caller}.getInstance`\n\t\t\t);\n\n\t\t\treturn StateManager.#instance;\n\t\t}, `[${caller}]: Error getting StateManager instance.`);\n\t}\n\n\tasync init(helpers: Helpers, services: Services): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tthis.#log.debug('Initializing State Manager.', `${caller}.init`);\n\n\t\t\tthis.#storage = await StorageManager.getInstance(services);\n\n\t\t\tthis.#store = StateStore.getInstance(\n\t\t\t\tthis.#state,\n\t\t\t\thelpers,\n\t\t\t\tservices,\n\t\t\t\tthis.#storage\n\t\t\t);\n\n\t\t\tthis.#state = await this.loadState();\n\t\t}, `[${caller}]: Failed to initialize State Manager.`);\n\t}\n\n\taddPaletteToHistory(palette: Palette): void {\n\t\tthis.#stateHistory.addPaletteToHistory(this.#state, palette);\n\n\t\tthis.#log.debug(\n\t\t\t`Added palette to history.`,\n\t\t\t`${caller}.addPaletteToHistory`\n\t\t);\n\t}\n\n\tasync batchUpdate(updates: Partial<State>): Promise<void> {\n\t\tawait this.#store.batchUpdate(updates);\n\t\tthis.#log.debug('Performed batch update.', `${caller}.batchUpdate`);\n\t}\n\n\tasync ensureStateReady(): Promise<void> {\n\t\treturn await this.#errors.handleAsync(\n\t\t\tasync () => {\n\t\t\t\tlet attempts = 0;\n\n\t\t\t\twhile (!this.#state || !this.#state.paletteContainer) {\n\t\t\t\t\tif (attempts++ >= maxReadyAttempts) {\n\t\t\t\t\t\tthis.#log.error(\n\t\t\t\t\t\t\t'State initialization timed out.',\n\t\t\t\t\t\t\t`${caller}.ensureStateReady`\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthrow new Error('State initialization timed out.');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.#log.debug(\n\t\t\t\t\t\t`Waiting for state to initialize... (Attempt ${attempts}).`,\n\t\t\t\t\t\t`${caller}.ensureStateReady`\n\t\t\t\t\t);\n\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, stateReadyTimeout));\n\t\t\t\t}\n\n\t\t\t\tthis.#log.debug(\n\t\t\t\t\t'State is now initialized.',\n\t\t\t\t\t`${caller}.ensureStateReady`\n\t\t\t\t);\n\t\t\t},\n\t\t\t`[${caller}]: Failed to ensure state readiness.`,\n\t\t\t{ context: { maxReadyAttempts } }\n\t\t);\n\t}\n\n\tasync getState(): Promise<State> {\n\t\treturn this.#store.getState();\n\t}\n\n\tasync loadState(): Promise<State> {\n\t\tconst loadedState = await this.#store.loadState();\n\n\t\tif (loadedState) {\n\t\t\tthis.#log.info('State loaded from storage.', `${caller}.loadState`);\n\n\t\t\treturn loadedState;\n\t\t}\n\n\t\tthis.#log.info(\n\t\t\t`State not found in storage. Creating initial state via State Factory.`,\n\t\t\t`${caller}.loadState`\n\t\t);\n\n\t\treturn await this.#stateFactory.createInitialState();\n\t}\n\n\tredo(): State | null {\n\t\tconst nextState = this.#stateHistory.redo();\n\n\t\tif (!nextState) return null;\n\n\t\tthis.#store.batchUpdate(nextState);\n\n\t\tthis.#log.info('Redo performed.', `${caller}.redo`);\n\n\t\treturn nextState;\n\t}\n\n\tasync resetState(): Promise<void> {\n\t\tconst initialState = await this.#stateFactory.createInitialState();\n\n\t\tawait this.setState(initialState, false);\n\t\tawait this.saveState();\n\n\t\tthis.#log.info('State has been reset.', `${caller}.resetState`);\n\t}\n\n\tasync saveState(): Promise<void> {\n\t\treturn await this.#errors.handleAsync(async () => {\n\t\t\tawait this.#store.saveState(this.#state);\n\n\t\t\tthis.#log.info('State saved to storage.', `${caller}.saveState`);\n\t\t}, `[${caller}]: Failed to save state`);\n\t}\n\n\tasync setState(newState: State, track: boolean = true): Promise<void> {\n\t\tif (track) this.#trackAction();\n\n\t\tawait this.#store.batchUpdate(newState);\n\n\t\tthis.#log.info('State replaced.', `${caller}.setState`);\n\t}\n\n\tundo(): State | null {\n\t\tconst previousState = this.#stateHistory.undo(this.#store.getState());\n\n\t\tif (!previousState) return null;\n\n\t\tthis.#store.batchUpdate(previousState);\n\n\t\tthis.#log.info('Undo performed.', `${caller}.undo`);\n\n\t\treturn previousState;\n\t}\n\n\tupdatePaletteColumns(\n\t\tcolumns: State['paletteContainer']['columns'],\n\t\ttrack = true\n\t): void {\n\t\tif (track) this.#trackAction();\n\n\t\tthis.#store.batchUpdate({\n\t\t\tpaletteContainer: {\n\t\t\t\t...this.#store.get('paletteContainer'),\n\t\t\t\tcolumns\n\t\t\t}\n\t\t});\n\n\t\tthis.#log.debug(\n\t\t\t'Palette columns updated.',\n\t\t\t`${caller}.updatePaletteColumns`\n\t\t);\n\t}\n\n\tasync updatePaletteHistory(\n\t\tupdatedHistory: Palette[],\n\t\ttrack: boolean\n\t): Promise<void> {\n\t\tif (track) this.#trackAction();\n\n\t\tawait this.#store.batchUpdate({ paletteHistory: updatedHistory });\n\n\t\tthis.#log.debug(\n\t\t\t`Updated palette history.`,\n\t\t\t`${caller}.updatePaletteHistory`\n\t\t);\n\t}\n\n\tasync updateSelections(\n\t\tselections: Partial<State['selections']>,\n\t\ttrack: boolean\n\t): Promise<void> {\n\t\tif (track) this.#trackAction();\n\n\t\tawait this.#store.batchUpdate({\n\t\t\tselections: { ...this.#store.get('selections'), ...selections }\n\t\t});\n\n\t\tthis.#log.debug('Selections updated.', `${caller}.updateSelections`);\n\t}\n\n\t#trackAction(): void {\n\t\tthis.#stateHistory.trackAction(this.#state);\n\t}\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AAgBA,MAAM,MAAM,GAAG,cAAc;AAC7B,MAAM,gBAAgB,GAAG,GAAG,CAAC,KAAK,CAAC,gBAAgB;AACnD,MAAM,iBAAiB,GAAG,GAAG,CAAC,KAAK,CAAC,YAAY;MAEnC,YAAY,CAAA;AACxB,IAAA,OAAO,SAAS,GAAwB,IAAI;AAE5C,IAAA,MAAM;AACN,IAAA,aAAa;AACb,IAAA,aAAa;AACb,IAAA,QAAQ;AACR,IAAA,MAAM;AAEN,IAAA,IAAI;AACJ,IAAA,OAAO;AAEP,IAAA,WAAA,CAAoB,OAAgB,EAAE,QAAkB,EAAE,KAAgB,EAAA;AACzE,QAAA,IAAI;AACH,YAAA,QAAQ,CAAC,GAAG,CAAC,KAAK,CACjB,CAAA,aAAA,EAAgB,MAAM,CAAA,UAAA,CAAY,EAClC,CAAA,EAAG,MAAM,CAAA,YAAA,CAAc,CACvB;AAED,YAAA,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG;AACxB,YAAA,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM;AAE9B,YAAA,IAAI,CAAC,MAAM,GAAG,EAAW;AAEzB,YAAA,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC;YACvE,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC;AAEvE,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,IAAG;gBAC1C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAAE,CAAG,EAAA,MAAM,CAAc,YAAA,CAAA,CAAC;AAErE,gBAAA,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;AACrB,aAAC,CAAC;;QACD,OAAO,KAAK,EAAE;YACf,MAAM,IAAI,KAAK,CACd,CAAA,CAAA,EAAI,MAAM,CAAkB,eAAA,EAAA,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAE,CAAA,CAC5E;;;IAIH,aAAa,WAAW,CACvB,OAAgB,EAChB,QAAkB,EAClB,KAAgB,EAAA;AAEhB,QAAA,OAAO,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,MAAK;AACtC,YAAA,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;gBAC5B,QAAQ,CAAC,GAAG,CAAC,KAAK,CACjB,CAAqC,mCAAA,CAAA,EACrC,CAAG,EAAA,MAAM,CAAc,YAAA,CAAA,CACvB;AAED,gBAAA,YAAY,CAAC,SAAS,GAAG,IAAI,YAAY,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC;;AAGpE,YAAA,QAAQ,CAAC,GAAG,CAAC,KAAK,CACjB,CAAA,UAAA,EAAa,MAAM,CAAA,UAAA,CAAY,EAC/B,CAAA,EAAG,MAAM,CAAA,YAAA,CAAc,CACvB;YAED,OAAO,YAAY,CAAC,SAAS;AAC9B,SAAC,EAAE,CAAA,CAAA,EAAI,MAAM,CAAA,uCAAA,CAAyC,CAAC;;AAGxD,IAAA,MAAM,IAAI,CAAC,OAAgB,EAAE,QAAkB,EAAA;QAC9C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,YAAW;YAC1C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,6BAA6B,EAAE,CAAG,EAAA,MAAM,CAAO,KAAA,CAAA,CAAC;YAEhE,IAAI,CAAC,QAAQ,GAAG,MAAM,cAAc,CAAC,WAAW,CAAC,QAAQ,CAAC;AAE1D,YAAA,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,WAAW,CACnC,IAAI,CAAC,MAAM,EACX,OAAO,EACP,QAAQ,EACR,IAAI,CAAC,QAAQ,CACb;YAED,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,EAAE;AACrC,SAAC,EAAE,CAAA,CAAA,EAAI,MAAM,CAAA,sCAAA,CAAwC,CAAC;;AAGvD,IAAA,mBAAmB,CAAC,OAAgB,EAAA;QACnC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC;QAE5D,IAAI,CAAC,IAAI,CAAC,KAAK,CACd,CAA2B,yBAAA,CAAA,EAC3B,CAAG,EAAA,MAAM,CAAsB,oBAAA,CAAA,CAC/B;;IAGF,MAAM,WAAW,CAAC,OAAuB,EAAA;QACxC,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,yBAAyB,EAAE,CAAG,EAAA,MAAM,CAAc,YAAA,CAAA,CAAC;;AAGpE,IAAA,MAAM,gBAAgB,GAAA;QACrB,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CACpC,YAAW;YACV,IAAI,QAAQ,GAAG,CAAC;AAEhB,YAAA,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;AACrD,gBAAA,IAAI,QAAQ,EAAE,IAAI,gBAAgB,EAAE;oBACnC,IAAI,CAAC,IAAI,CAAC,KAAK,CACd,iCAAiC,EACjC,CAAG,EAAA,MAAM,CAAmB,iBAAA,CAAA,CAC5B;AAED,oBAAA,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC;;AAGnD,gBAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CACd,CAAA,4CAAA,EAA+C,QAAQ,CAAA,EAAA,CAAI,EAC3D,CAAA,EAAG,MAAM,CAAA,iBAAA,CAAmB,CAC5B;AAED,gBAAA,MAAM,IAAI,OAAO,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;;YAGrE,IAAI,CAAC,IAAI,CAAC,KAAK,CACd,2BAA2B,EAC3B,CAAG,EAAA,MAAM,CAAmB,iBAAA,CAAA,CAC5B;AACF,SAAC,EACD,CAAA,CAAA,EAAI,MAAM,CAAA,oCAAA,CAAsC,EAChD,EAAE,OAAO,EAAE,EAAE,gBAAgB,EAAE,EAAE,CACjC;;AAGF,IAAA,MAAM,QAAQ,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;;AAG9B,IAAA,MAAM,SAAS,GAAA;QACd,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;QAEjD,IAAI,WAAW,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAG,EAAA,MAAM,CAAY,UAAA,CAAA,CAAC;AAEnE,YAAA,OAAO,WAAW;;QAGnB,IAAI,CAAC,IAAI,CAAC,IAAI,CACb,CAAuE,qEAAA,CAAA,EACvE,CAAG,EAAA,MAAM,CAAY,UAAA,CAAA,CACrB;AAED,QAAA,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE;;IAGrD,IAAI,GAAA;QACH,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;AAE3C,QAAA,IAAI,CAAC,SAAS;AAAE,YAAA,OAAO,IAAI;AAE3B,QAAA,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC;QAElC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAG,EAAA,MAAM,CAAO,KAAA,CAAA,CAAC;AAEnD,QAAA,OAAO,SAAS;;AAGjB,IAAA,MAAM,UAAU,GAAA;QACf,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE;QAElE,MAAM,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC;AACxC,QAAA,MAAM,IAAI,CAAC,SAAS,EAAE;QAEtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAG,EAAA,MAAM,CAAa,WAAA,CAAA,CAAC;;AAGhE,IAAA,MAAM,SAAS,GAAA;QACd,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,YAAW;YAChD,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;YAExC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAG,EAAA,MAAM,CAAY,UAAA,CAAA,CAAC;AACjE,SAAC,EAAE,CAAA,CAAA,EAAI,MAAM,CAAA,uBAAA,CAAyB,CAAC;;AAGxC,IAAA,MAAM,QAAQ,CAAC,QAAe,EAAE,QAAiB,IAAI,EAAA;AACpD,QAAA,IAAI,KAAK;YAAE,IAAI,CAAC,YAAY,EAAE;QAE9B,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;QAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAG,EAAA,MAAM,CAAW,SAAA,CAAA,CAAC;;IAGxD,IAAI,GAAA;AACH,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;AAErE,QAAA,IAAI,CAAC,aAAa;AAAE,YAAA,OAAO,IAAI;AAE/B,QAAA,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC;QAEtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAG,EAAA,MAAM,CAAO,KAAA,CAAA,CAAC;AAEnD,QAAA,OAAO,aAAa;;AAGrB,IAAA,oBAAoB,CACnB,OAA6C,EAC7C,KAAK,GAAG,IAAI,EAAA;AAEZ,QAAA,IAAI,KAAK;YAAE,IAAI,CAAC,YAAY,EAAE;AAE9B,QAAA,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;AACvB,YAAA,gBAAgB,EAAE;AACjB,gBAAA,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,kBAAkB,CAAC;gBACtC;AACA;AACD,SAAA,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,KAAK,CACd,0BAA0B,EAC1B,CAAG,EAAA,MAAM,CAAuB,qBAAA,CAAA,CAChC;;AAGF,IAAA,MAAM,oBAAoB,CACzB,cAAyB,EACzB,KAAc,EAAA;AAEd,QAAA,IAAI,KAAK;YAAE,IAAI,CAAC,YAAY,EAAE;AAE9B,QAAA,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC;QAEjE,IAAI,CAAC,IAAI,CAAC,KAAK,CACd,CAA0B,wBAAA,CAAA,EAC1B,CAAG,EAAA,MAAM,CAAuB,qBAAA,CAAA,CAChC;;AAGF,IAAA,MAAM,gBAAgB,CACrB,UAAwC,EACxC,KAAc,EAAA;AAEd,QAAA,IAAI,KAAK;YAAE,IAAI,CAAC,YAAY,EAAE;AAE9B,QAAA,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;AAC7B,YAAA,UAAU,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,GAAG,UAAU;AAC7D,SAAA,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE,CAAG,EAAA,MAAM,CAAmB,iBAAA,CAAA,CAAC;;IAGrE,YAAY,GAAA;QACX,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;;;;;;"}