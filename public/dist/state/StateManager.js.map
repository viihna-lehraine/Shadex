{"version":3,"file":"StateManager.js","sources":["../../../../src/state/StateManager.ts"],"sourcesContent":["// File: state/StateManager.js\n\nimport {\n\tHelpers,\n\tHistory,\n\tPalette,\n\tServices,\n\tState,\n\tStateManagerInterface,\n\tUtilities\n} from '../types/index.js';\nimport { StorageManager } from '../storage/StorageManager.js';\nimport { defaults, domConfig, domIndex } from '../config/index.js';\n\nconst defaultState = defaults.state;\nconst maxStateReadyAttempts = 20;\n\nexport class StateManager implements StateManagerInterface {\n\tstatic #instance: StateManager | null = null;\n\t#onStateLoadCallback: (() => void) | null = null;\n\t#history: History;\n\t#state: State;\n\t#undoStack: History;\n\t#log: Services['log'];\n\t#errors: Services['errors'];\n\t#helpers: Helpers;\n\t#utils: Utilities;\n\t#storage: StorageManager;\n\n\tprivate constructor(\n\t\thelpers: Helpers,\n\t\tservices: Services,\n\t\tutils: Utilities\n\t) {\n\t\tthis.#log = services.log;\n\t\tthis.#errors = services.errors;\n\t\tthis.#helpers = helpers;\n\t\tthis.#utils = utils;\n\t\tthis.#storage = new StorageManager(services);\n\n\t\tthis.#state = {} as State;\n\t\tthis.#state.paletteHistory = [];\n\t\tthis.#history = [this.#state];\n\t\tthis.#undoStack = [];\n\t\tthis.init();\n\t\tthis.#saveStateAndLog('init', 3);\n\t}\n\n\tstatic getInstance(\n\t\thelpers: Helpers,\n\t\tservices: Services,\n\t\tutils: Utilities\n\t): StateManager {\n\t\tif (!StateManager.#instance) {\n\t\t\tStateManager.#instance = new StateManager(helpers, services, utils);\n\t\t}\n\n\t\treturn StateManager.#instance;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tthis.#log('Initializing State Manager', 'debug');\n\n\t\tawait this.#storage.init();\n\n\t\tthis.#state =\n\t\t\t(await this.#errors.handleAsync(\n\t\t\t\t() => this.loadState(),\n\t\t\t\t'Failed to load state. Generating initial state.'\n\t\t\t)) ?? this.#generateInitialState();\n\n\t\tthis.#log('StateManager initialized successfully.', 'debug');\n\n\t\tawait this.#saveState();\n\t}\n\n\taddPaletteToHistory(palette: Palette): void {\n\t\tthis.#errors.handleSync(\n\t\t\t() => {\n\t\t\t\tthis.#trackAction();\n\t\t\t\tthis.#state.paletteHistory.push(palette);\n\t\t\t\tthis.#saveStateAndLog('paletteHistory', 3);\n\t\t\t},\n\t\t\t'Failed to add palette to history',\n\t\t\t{ palette }\n\t\t);\n\t}\n\n\tasync ensureStateReady(): Promise<void> {\n\t\tawait this.#errors.handleAsync(\n\t\t\tasync () => {\n\t\t\t\tlet attempts = 0;\n\n\t\t\t\twhile (!this.#state || !this.#state.paletteContainer) {\n\t\t\t\t\tif (attempts++ >= maxStateReadyAttempts) {\n\t\t\t\t\t\tthis.#log('State initialization timed out.', 'error');\n\t\t\t\t\t\tthrow new Error('State initialization timed out.');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.#log(\n\t\t\t\t\t\t`Waiting for state to initialize... (Attempt ${attempts})`,\n\t\t\t\t\t\t'debug',\n\t\t\t\t\t\t3\n\t\t\t\t\t);\n\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 50));\n\t\t\t\t}\n\n\t\t\t\tthis.#log('State is now initialized.');\n\t\t\t},\n\t\t\t'Failed to ensure state readiness',\n\t\t\t{ maxStateReadyAttempts }\n\t\t);\n\t}\n\n\tgetState(): State {\n\t\treturn (\n\t\t\tthis.#errors.handleSync(() => {\n\t\t\t\tif (!this.#state) {\n\t\t\t\t\tthrow new Error('State accessed before initialization.');\n\t\t\t\t}\n\t\t\t\tif (!this.#state.preferences) {\n\t\t\t\t\tthis.#log(\n\t\t\t\t\t\t'State.preferences is undefined. Adding default preferences.',\n\t\t\t\t\t\t'warn'\n\t\t\t\t\t);\n\t\t\t\t\tthis.#state.preferences = defaultState.preferences;\n\t\t\t\t}\n\t\t\t\treturn this.#state;\n\t\t\t}, 'Error retrieving state') ?? defaultState\n\t\t);\n\t}\n\n\tasync loadState(): Promise<State> {\n\t\tconst storedState = await this.#storage.getItem<State>('appState');\n\n\t\tif (storedState) {\n\t\t\tthis.#state = storedState;\n\n\t\t\tif (this.#onStateLoadCallback) {\n\t\t\t\tthis.#onStateLoadCallback();\n\t\t\t}\n\n\t\t\treturn storedState;\n\t\t} else {\n\t\t\tthis.#log('No stored state found.', 'warn');\n\t\t\treturn this.#generateInitialState();\n\t\t}\n\t}\n\n\tredo(): void {\n\t\tthis.#errors.handleSync(() => {\n\t\t\tif (this.#undoStack.length > 0) {\n\t\t\t\tconst redoState = this.#undoStack.pop();\n\t\t\t\tif (!redoState) {\n\t\t\t\t\tthis.#log('Cannot redo: No redoState found.', 'debug');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.#history.push(redoState);\n\t\t\t\tthis.#state = { ...redoState };\n\n\t\t\t\tthis.#log('Redo action performed.', 'debug');\n\t\t\t\tthis.#saveStateAndLog('redo', 3);\n\t\t\t} else {\n\t\t\t\tthrow new Error('No state to redo.');\n\t\t\t}\n\t\t}, 'Redo operation failed');\n\t}\n\n\tasync resetState(): Promise<void> {\n\t\tawait this.#errors.handleAsync(async () => {\n\t\t\tthis.#trackAction();\n\t\t\tthis.#state = defaultState;\n\t\t\tawait this.#saveState();\n\t\t\tthis.#log('App state has been reset', 'debug');\n\t\t}, 'Failed to reset state');\n\t}\n\n\tsetOnStateLoad(callback: () => void): void {\n\t\tthis.#errors.handleSync(() => {\n\t\t\tthis.#onStateLoadCallback = callback;\n\t\t}, 'Failed to set onStateLoad callback');\n\t}\n\n\tasync setState(state: State, track: boolean): Promise<void> {\n\t\tif (track) this.#trackAction();\n\t\tthis.#state = state;\n\t\tthis.#log('App state has been updated', 'debug');\n\t\tawait this.#saveState();\n\t}\n\n\tundo(): void {\n\t\tthis.#errors.handleSync(() => {\n\t\t\tif (this.#history.length < 1) {\n\t\t\t\tthrow new Error('No previous state to revert to.');\n\t\t\t}\n\t\t\tthis.#trackAction();\n\t\t\tthis.#undoStack.push(this.#history.pop() as State);\n\t\t\tthis.#state = { ...this.#history[this.#history.length - 1] };\n\t\t\tthis.#log('Undo action performed.', 'debug');\n\t\t\tthis.#saveStateAndLog('undo', 3);\n\t\t}, 'Undo operation failed');\n\t}\n\n\tupdateAppModeState(appMode: State['appMode'], track: boolean): void {\n\t\tthis.#errors.handleSync(\n\t\t\t() => {\n\t\t\t\tif (track) this.#trackAction();\n\t\t\t\tthis.#state.appMode = appMode;\n\t\t\t\tthis.#log(`Updated appMode: ${appMode}`);\n\t\t\t\tthis.#saveStateAndLog('appMode', 3);\n\t\t\t},\n\t\t\t'Failed to update app mode state',\n\t\t\t{ appMode, track }\n\t\t);\n\t}\n\n\tupdatePaletteColumns(\n\t\tcolumns: State['paletteContainer']['columns'],\n\t\ttrack: boolean,\n\t\tverbosity: number\n\t): void {\n\t\tthis.#errors.handleSync(\n\t\t\t() => {\n\t\t\t\tif (!this.#state || !this.#state.paletteContainer) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'updatePaletteColumns() called before state initialization.'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!this.#helpers.dom.getElement<HTMLDivElement>(\n\t\t\t\t\t\tdomIndex.ids.divs.paletteContainer\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.#log(\n\t\t\t\t\t\t'Palette Container not found in the DOM.',\n\t\t\t\t\t\t'warn'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (track) this.#trackAction();\n\t\t\t\tthis.#state.paletteContainer.columns = columns;\n\t\t\t\tthis.#log(`Updated paletteContainer columns`, 'debug');\n\t\t\t\tthis.#saveStateAndLog('paletteColumns', verbosity);\n\t\t\t},\n\t\t\t'Failed to update palette columns',\n\t\t\t{ columns, track, verbosity }\n\t\t);\n\t}\n\n\tupdatePaletteColumnSize(columnID: number, newSize: number): void {\n\t\tthis.#errors.handleSync(\n\t\t\t() => {\n\t\t\t\tconst columns = this.#state.paletteContainer.columns;\n\t\t\t\tconst columnIndex = columns.findIndex(\n\t\t\t\t\tcol => col.id === columnID\n\t\t\t\t);\n\t\t\t\tif (columnIndex === -1) return;\n\n\t\t\t\tconst minSize = domConfig.minColumnSize;\n\t\t\t\tconst maxSize = domConfig.maxColumnSize;\n\t\t\t\tconst adjustedSize = Math.max(\n\t\t\t\t\tminSize,\n\t\t\t\t\tMath.min(newSize, maxSize)\n\t\t\t\t);\n\n\t\t\t\tconst sizeDifference = adjustedSize - columns[columnIndex].size;\n\t\t\t\tcolumns[columnIndex].size = adjustedSize;\n\n\t\t\t\tconst unlockedColumns = columns.filter(\n\t\t\t\t\t(col, index) => index !== columnIndex && !col.isLocked\n\t\t\t\t);\n\t\t\t\tconst distributionAmount =\n\t\t\t\t\tsizeDifference / unlockedColumns.length;\n\t\t\t\tunlockedColumns.forEach(\n\t\t\t\t\tcol => (col.size -= distributionAmount)\n\t\t\t\t);\n\n\t\t\t\tconst finalTotalSize = columns.reduce(\n\t\t\t\t\t(sum, col) => sum + col.size,\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t\tconst correctionFactor = 100 / finalTotalSize;\n\t\t\t\tcolumns.forEach(col => (col.size *= correctionFactor));\n\n\t\t\t\tthis.#log(`Updated column size`, 'debug');\n\t\t\t\tthis.#saveStateAndLog('paletteColumnSize', 3);\n\t\t\t},\n\t\t\t'Failed to update palette column size',\n\t\t\t{ columnID, newSize }\n\t\t);\n\t}\n\n\tupdatePaletteHistory(updatedHistory: Palette[]): void {\n\t\tthis.#errors.handleSync(\n\t\t\t() => {\n\t\t\t\tthis.#trackAction();\n\t\t\t\tthis.#state.paletteHistory = updatedHistory;\n\t\t\t\tthis.#saveState();\n\t\t\t\tthis.#log('Updated palette history');\n\t\t\t},\n\t\t\t'Failed to update palette history',\n\t\t\t{ updatedHistory }\n\t\t);\n\t}\n\n\tupdateSelections(\n\t\tselections: Partial<State['selections']>,\n\t\ttrack: boolean\n\t): void {\n\t\tthis.#errors.handleSync(\n\t\t\t() => {\n\t\t\t\tif (track) this.#trackAction();\n\t\t\t\tthis.#state.selections = {\n\t\t\t\t\t...this.#state.selections,\n\t\t\t\t\t...selections\n\t\t\t\t};\n\t\t\t\tthis.#log(`Updated selections`, 'debug');\n\t\t\t\tthis.#saveStateAndLog('selections', 2);\n\t\t\t},\n\t\t\t'Failed to update selections',\n\t\t\t{ selections, track }\n\t\t);\n\t}\n\n\t#generateInitialState(): State {\n\t\treturn (\n\t\t\tthis.#errors.handleSync(() => {\n\t\t\t\tconst columnData = this.#utils.dom.scanPaletteColumns();\n\t\t\t\tthis.#log(\n\t\t\t\t\t`Scanned ${columnData.length} columns in Palette Container element`,\n\t\t\t\t\t'debug'\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\tappMode: 'edit',\n\t\t\t\t\tpaletteContainer: { columns: columnData || [] },\n\t\t\t\t\tpaletteHistory: [],\n\t\t\t\t\tpreferences: {\n\t\t\t\t\t\tcolorSpace: 'hsl',\n\t\t\t\t\t\tdistributionType: 'soft',\n\t\t\t\t\t\tmaxHistory: 20,\n\t\t\t\t\t\tmaxPaletteHistory: 10,\n\t\t\t\t\t\ttheme: 'light'\n\t\t\t\t\t},\n\t\t\t\t\tselections: {\n\t\t\t\t\t\tpaletteColumnCount: columnData.length,\n\t\t\t\t\t\tpaletteType: 'complementary',\n\t\t\t\t\t\ttargetedColumnPosition: 1\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: this.#helpers.data.getFormattedTimestamp()\n\t\t\t\t};\n\t\t\t}, 'Failed to generate initial state') ?? defaultState\n\t\t);\n\t}\n\n\t#saveStateAndLog(property: string, verbosity?: number): void {\n\t\tthis.#log(`StateManager Updated ${property}`, 'debug', verbosity);\n\t\tthis.#saveState();\n\t}\n\n\tasync #saveState(): Promise<void> {\n\t\tawait this.#errors.handleAsync(\n\t\t\t() => this.#storage.setItem('appState', this.#state),\n\t\t\t'Failed to save app state.'\n\t\t);\n\t}\n\n\t#trackAction(): void {\n\t\t// push a copy of the current state before making changes\n\t\tthis.#history.push({ ...this.#state });\n\t}\n}\n"],"names":[],"mappings":"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"}