{"version":3,"file":"StateStore.js","sources":["../../../../src/state/StateStore.ts"],"sourcesContent":["// File: state/StateStore.ts\n\nimport {\n\tHelpers,\n\tServices,\n\tState,\n\tStateStoreContract\n} from '../types/index.js';\nimport { StorageManager } from '../storage/StorageManager.js';\nimport { ObserverService } from '../core/services/index.js';\nimport { env, featureFlags } from '../config/index.js';\n\nconst caller = 'StateStore';\n\nexport class StateStore implements StateStoreContract {\n\tstatic #instance: StateStore;\n\n\t#debouncedSave!: (state: State) => void;\n\t#observer: ObserverService<State>;\n\t#state: State;\n\n\t#clone: Helpers['data']['clone'];\n\t#debounce: Helpers['time']['debounce'];\n\t#errors: Services['errors'];\n\t#log: Services['log'];\n\t#storage: StorageManager;\n\n\tprivate constructor(\n\t\tinitialState: State,\n\t\thelpers: Helpers,\n\t\tservices: Services,\n\t\tstorage: StorageManager\n\t) {\n\t\ttry {\n\t\t\tservices.log.info(\n\t\t\t\t`Constructing ${caller} instance.`,\n\t\t\t\t`${caller} constructor`\n\t\t\t);\n\n\t\t\tthis.#state = Object.freeze({ ...initialState });\n\t\t\tthis.#observer = new ObserverService<State>(\n\t\t\t\tthis.#state,\n\t\t\t\t{},\n\t\t\t\thelpers,\n\t\t\t\tservices\n\t\t\t);\n\t\t\tthis.#storage = storage;\n\n\t\t\tthis.#clone = helpers.data.clone;\n\t\t\tthis.#debounce = helpers.time.debounce;\n\t\t\tthis.#errors = services.errors;\n\t\t\tthis.#log = services.log;\n\t\t} catch (error) {\n\t\t\tthrow new Error(\n\t\t\t\t`[${caller} constructor]: ${error instanceof Error ? error.message : error}`\n\t\t\t);\n\t\t}\n\t}\n\n\tstatic getInstance(\n\t\tinitialState: State,\n\t\thelpers: Helpers,\n\t\tservices: Services,\n\t\tstorage: StorageManager\n\t): StateStore {\n\t\treturn services.errors.handleSync(() => {\n\t\t\tif (!StateStore.#instance) {\n\t\t\t\tStateStore.#instance = new StateStore(\n\t\t\t\t\tinitialState,\n\t\t\t\t\thelpers,\n\t\t\t\t\tservices,\n\t\t\t\t\tstorage\n\t\t\t\t);\n\n\t\t\t\tservices.log.info(\n\t\t\t\t\t`Creating new ${caller} instance`,\n\t\t\t\t\t`${caller}.getInstance`\n\t\t\t\t);\n\n\t\t\t\treturn StateStore.#instance;\n\t\t\t}\n\n\t\t\tservices.log.info(\n\t\t\t\t`Returning existing ${caller} instance`,\n\t\t\t\t`${caller}.getInstance`\n\t\t\t);\n\n\t\t\treturn StateStore.#instance;\n\t\t}, `[${caller}.getInstance]: Failed to create ${caller} instance.`);\n\t}\n\n\tasync batchUpdate(updates: Partial<State>): Promise<void> {\n\t\tthis.#errors.handleSync(() => {\n\t\t\tconst oldState = this.#state;\n\t\t\tconst updatedEntries = Object.entries(updates).filter(\n\t\t\t\t([key, value]) => oldState[key as keyof State] !== value\n\t\t\t);\n\n\t\t\tif (updatedEntries.length === 0) {\n\t\t\t\tthis.#log.debug(\n\t\t\t\t\t`No state changes detected for batch update`,\n\t\t\t\t\t`${caller}.batchUpdate`\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newState = Object.freeze(this.#clone({ ...oldState, ...updates }));\n\n\t\t\tthis.#state = newState;\n\n\t\t\tthis.#log.debug(\n\t\t\t\t`Batch updated state with keys: ${updatedEntries.map(([k]) => k).join(', ')}`,\n\t\t\t\t`${caller}.batchUpdate`\n\t\t\t);\n\t\t\tconsole.debug(`[${caller}.batchUpdate]: Batch Update List:`, updates);\n\n\t\t\tthis.#notifyObservers(updates);\n\n\t\t\tthis.saveState(newState);\n\t\t}, `[${caller}.batchUpdate]: Failed to perform batch update`);\n\t}\n\n\tget<K extends keyof State>(key: K): State[K] {\n\t\treturn this.#errors.handleSync(\n\t\t\t() => {\n\t\t\t\treturn this.#state[key];\n\t\t\t},\n\t\t\t`[${caller}.get]: Failed to retrieve state key: ${String(key)}`\n\t\t);\n\t}\n\n\tgetState(): State {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\treturn { ...this.#state };\n\t\t}, `[${caller}.getData]: Failed to retrieve full state`);\n\t}\n\n\tasync init(): Promise<State | null> {\n\t\tthis.#debouncedSave = this.#debounce(\n\t\t\t(state: State) => this.saveState(state, { throttle: false }),\n\t\t\tenv.state.saveThrottleDelay\n\t\t);\n\n\t\tif (featureFlags.loadStateFromStorage) {\n\t\t\tthis.#log.warn(\n\t\t\t\t'Loading state from storage is disabled.',\n\t\t\t\t`${caller}.init`\n\t\t\t);\n\n\t\t\treturn null;\n\t\t}\n\n\t\tconst loadedState = await this.loadState();\n\n\t\tloadedState\n\t\t\t? this.#log.info(`State loaded from storage.`, `${caller}.init`)\n\t\t\t: this.#log.warn(`No saved state found.`, `${caller}.init`);\n\n\t\treturn loadedState;\n\t}\n\n\tasync loadState(): Promise<State | null> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tconst savedState = await this.#storage.getItem<State>('state');\n\n\t\t\tif (savedState) {\n\t\t\t\tthis.#state = Object.freeze(this.#clone(savedState));\n\n\t\t\t\t// replace observer data with the new state\n\t\t\t\tthis.#observer.replaceData(this.#state);\n\n\t\t\t\tthis.#log.info('Loaded state from storage.', `${caller}.loadState`);\n\n\t\t\t\treturn this.#state;\n\t\t\t}\n\t\t\tthis.#log.warn('No saved state found.', `${caller}.loadState`);\n\n\t\t\treturn null;\n\t\t}, `[${caller}.loadState]: Failed to load state from storage.`);\n\t}\n\n\toff<K extends keyof State>(\n\t\tkey: K,\n\t\tcallback: (newValue: State[K], oldValue: State[K]) => void\n\t): void {\n\t\tthis.#observer.off(key, callback);\n\t}\n\n\ton<K extends keyof State>(\n\t\tkey: K,\n\t\tcallback: (newValue: State[K], oldValue: State[K]) => void\n\t): void {\n\t\tthis.#observer.on(key, callback);\n\t}\n\n\tasync saveState(\n\t\tstate: State = this.#state,\n\t\toptions: { throttle?: boolean } = {}\n\t): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tif (options.throttle) {\n\t\t\t\tthis.#debouncedSave(state);\n\t\t\t} else {\n\t\t\t\tawait this.#saveOperation(state);\n\t\t\t}\n\n\t\t\tthis.#log.info('State saved to storage.', `${caller}.saveState`);\n\t\t}, `[${caller}.saveState]: Failed to save state to storage.`);\n\t}\n\n\tasync set<K extends keyof State>(key: K, value: State[K]): Promise<void> {\n\t\tthis.#errors.handleSync(\n\t\t\t() => {\n\t\t\t\tconst oldValue = this.#state[key];\n\n\t\t\t\tif (oldValue === value) {\n\t\t\t\t\tthis.#log.debug(\n\t\t\t\t\t\t`No state change detected for key: ${String(key)}`,\n\t\t\t\t\t\t`${caller}.set`\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.#updateState({ [key]: value });\n\n\t\t\t\tthis.#log.debug(\n\t\t\t\t\t`Updated state key: ${String(key)}\\nOld value: ${JSON.stringify(oldValue)}\\nNew value: ${JSON.stringify(value)}`,\n\t\t\t\t\t`${caller}.set`\n\t\t\t\t);\n\t\t\t},\n\t\t\t`[${caller}.set]: Failed to update state key: ${String(key)}.`\n\t\t);\n\t}\n\n\t#notifyObservers(updates: Partial<State>): void {\n\t\tObject.entries(updates).forEach(([key, value]) => {\n\t\t\tthis.#observer.set(key as keyof State, value as State[keyof State]);\n\t\t});\n\t}\n\n\tasync #saveOperation(state: State): Promise<void> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tfor (let attempt = 1; attempt <= env.state.maxSaveRetries; attempt++) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.#storage.setItem('state', state);\n\n\t\t\t\t\tthis.#log.info(\n\t\t\t\t\t\t`State saved successfully on attempt ${attempt}.`,\n\t\t\t\t\t\t`${caller}.#saveOperation`\n\t\t\t\t\t);\n\n\t\t\t\t\tbreak;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (attempt < env.state.maxSaveRetries) {\n\t\t\t\t\t\tthis.#log.warn(\n\t\t\t\t\t\t\t`Save attempt ${attempt} failed. Retrying...`,\n\t\t\t\t\t\t\t`${caller}.#saveOperation`\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.#log.error(\n\t\t\t\t\t\t\t'Max save attempts reached. Save failed.',\n\t\t\t\t\t\t\t`${caller}.#saveOperation`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, `[${caller}.#saveOperation]: Save operation failed.`);\n\t}\n\n\t#updateState(updates: Partial<State>): void {\n\t\tconst updatedState = Object.freeze(\n\t\t\tthis.#clone({ ...this.#state, ...updates })\n\t\t);\n\t\tthis.#state = updatedState;\n\n\t\tthis.#notifyObservers(updates);\n\t\tthis.saveState(updatedState);\n\t}\n}\n"],"names":[],"mappings":"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"}