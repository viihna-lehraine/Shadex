{"version":3,"file":"types.js","sources":["../../../../../src/palette/partials/types.ts"],"sourcesContent":["import {\n\tCommonFunctions,\n\tGenerateHuesFnGroup,\n\tGeneratePaletteFnGroup,\n\tHSL,\n\tPalette,\n\tPaletteItem,\n\tSelectedPaletteOptions\n} from '../../types/index.js';\nimport { paletteConfig } from '../../config/index.js';\n\nconst shiftRanges = paletteConfig.shiftRanges;\n\nfunction generateAnalogousPalette(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctions,\n\tgenerateHues: GenerateHuesFnGroup\n): Palette {\n\tconst {\n\t\tservices: { errors },\n\t\tutils\n\t} = common;\n\n\treturn errors.handleSync(\n\t\t() => {\n\t\t\tif (options.columnCount < 2) utils.dom.enforceSwatchRules(2, 6);\n\n\t\t\tconst baseColor = utils.color.generateRandomHSL();\n\t\t\tconst hues = generateHues.analogous(baseColor, options, common);\n\t\t\tconst paletteItems = utils.palette.createPaletteItemArray(\n\t\t\t\tbaseColor,\n\t\t\t\thues\n\t\t\t);\n\t\t\tconst analogousPalette = utils.palette.createPaletteObject(\n\t\t\t\toptions,\n\t\t\t\tpaletteItems\n\t\t\t);\n\n\t\t\treturn analogousPalette;\n\t\t},\n\t\t'Error generating analogous palette.',\n\t\t{ context: { options } }\n\t);\n}\n\nfunction generateComplementaryPalette(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctions\n): Palette {\n\tconst {\n\t\thelpers,\n\t\tservices: { errors },\n\t\tutils\n\t} = common;\n\n\treturn errors.handleSync(\n\t\t() => {\n\t\t\tconst columnCount = Math.max(2, Math.min(6, options.columnCount));\n\n\t\t\tutils.dom.enforceSwatchRules(columnCount, 6);\n\n\t\t\tconst baseColor = utils.color.generateRandomHSL();\n\t\t\tconst baseHue = baseColor.value.hue;\n\t\t\tconst hues: number[] = [baseHue];\n\n\t\t\t// always include the direct complement\n\t\t\thues.push((baseHue + 180) % 360);\n\n\t\t\t// generate additional complementary variations if needed\n\t\t\tconst extraColorsNeeded = columnCount - 2;\n\n\t\t\tif (extraColorsNeeded > 0) {\n\t\t\t\tfor (let i = 0; i < extraColorsNeeded; i++) {\n\t\t\t\t\tconst { weights, values } =\n\t\t\t\t\t\tpaletteConfig.probabilities[options.distributionType];\n\t\t\t\t\tconst variationOffset =\n\t\t\t\t\t\thelpers.random.selectRandomFromWeights({\n\t\t\t\t\t\t\tweights,\n\t\t\t\t\t\t\tvalues\n\t\t\t\t\t\t});\n\t\t\t\t\tconst direction = Math.random() < 0.5 ? 1 : -1; // randomize direction\n\t\t\t\t\tconst newHue =\n\t\t\t\t\t\t(baseHue + 180 + variationOffset * direction + 360) %\n\t\t\t\t\t\t360;\n\t\t\t\t\thues.push(newHue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// define lightness & saturation variation ranges\n\t\t\tconst lightnessRange = [-10, -5, 0, 5, 10]; // possible changes in lightness\n\t\t\tconst saturationRange = [-15, -10, 0, 10, 15]; // possible changes in saturation\n\n\t\t\tconst paletteItems = hues.map((hue, index) => {\n\t\t\t\tconst lightnessOffset =\n\t\t\t\t\tlightnessRange[\n\t\t\t\t\t\tMath.floor(Math.random() * lightnessRange.length)\n\t\t\t\t\t];\n\t\t\t\tconst saturationOffset =\n\t\t\t\t\tsaturationRange[\n\t\t\t\t\t\tMath.floor(Math.random() * saturationRange.length)\n\t\t\t\t\t];\n\n\t\t\t\tconst newColor: HSL = {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.saturation +\n\t\t\t\t\t\t\t\t\t\tsaturationOffset\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.lightness + lightnessOffset\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t};\n\n\t\t\t\treturn utils.palette.createPaletteItem(newColor, index + 1);\n\t\t\t});\n\n\t\t\treturn utils.palette.createPaletteObject(options, paletteItems);\n\t\t},\n\t\t'Error generating complementary palette.',\n\t\t{ context: { options } }\n\t);\n}\n\nfunction generateDiadicPalette(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctions,\n\tgenerateHues: GenerateHuesFnGroup\n): Palette {\n\tconst {\n\t\thelpers,\n\t\tservices: { errors },\n\t\tutils\n\t} = common;\n\n\treturn errors.handleSync(\n\t\t() => {\n\t\t\tconst columnCount = Math.max(2, Math.min(6, options.columnCount));\n\n\t\t\tutils.dom.enforceSwatchRules(columnCount, 6);\n\n\t\t\tconst baseColor = utils.color.generateRandomHSL();\n\t\t\tconst hues = generateHues.diadic(baseColor, options, common);\n\n\t\t\t// if more swatches are needed, create slight variations\n\t\t\tconst extraColorsNeeded = columnCount - 2;\n\t\t\tif (extraColorsNeeded > 0) {\n\t\t\t\tfor (let i = 0; i < extraColorsNeeded; i++) {\n\t\t\t\t\tconst { weights, values } =\n\t\t\t\t\t\tpaletteConfig.probabilities[options.distributionType];\n\t\t\t\t\tconst variationOffset =\n\t\t\t\t\t\thelpers.random.selectRandomFromWeights({\n\t\t\t\t\t\t\tweights,\n\t\t\t\t\t\t\tvalues\n\t\t\t\t\t\t});\n\t\t\t\t\tconst direction = i % 2 === 0 ? 1 : -1;\n\n\t\t\t\t\thues.push(\n\t\t\t\t\t\t(baseColor.value.hue + variationOffset * direction) %\n\t\t\t\t\t\t\t360\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// create PaletteItem array with incrementing itemIDs\n\t\t\tconst paletteItems = hues.map((hue, index) => {\n\t\t\t\tconst saturationShift =\n\t\t\t\t\tMath.random() * paletteConfig.shiftRanges.diadic.sat -\n\t\t\t\t\tpaletteConfig.shiftRanges.diadic.sat / 2;\n\t\t\t\tconst lightnessShift =\n\t\t\t\t\tMath.random() * paletteConfig.shiftRanges.diadic.light -\n\t\t\t\t\tpaletteConfig.shiftRanges.diadic.light / 2;\n\t\t\t\tconst newColor: HSL = {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.saturation + saturationShift\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.lightness + lightnessShift\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t};\n\n\t\t\t\treturn utils.palette.createPaletteItem(newColor, index + 1);\n\t\t\t});\n\n\t\t\treturn utils.palette.createPaletteObject(options, paletteItems);\n\t\t},\n\t\t'Error generating diadic palette.',\n\t\t{ context: { options } }\n\t);\n}\n\nfunction generateHexadicPalette(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctions,\n\tgenerateHues: GenerateHuesFnGroup\n): Palette {\n\tconst {\n\t\tservices: { errors },\n\t\tutils\n\t} = common;\n\n\treturn errors.handleSync(\n\t\t() => {\n\t\t\t// hexadic palettes always have 6 swatches\n\t\t\tconst columnCount = 6;\n\n\t\t\tutils.dom.enforceSwatchRules(columnCount, 6);\n\n\t\t\tconst baseColor = utils.color.generateRandomHSL();\n\t\t\tconst hues = generateHues.hexadic(baseColor, common);\n\n\t\t\t// create PaletteItem array with assigned itemIDs\n\t\t\tconst paletteItems = hues.map((hue, index) => {\n\t\t\t\tconst saturationShift =\n\t\t\t\t\tMath.random() * paletteConfig.shiftRanges.hexadic.sat -\n\t\t\t\t\tpaletteConfig.shiftRanges.hexadic.sat / 2;\n\t\t\t\tconst lightnessShift =\n\t\t\t\t\tMath.random() * paletteConfig.shiftRanges.hexadic.light -\n\t\t\t\t\tpaletteConfig.shiftRanges.hexadic.light / 2;\n\n\t\t\t\tconst newColor: HSL = {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.saturation + saturationShift\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.lightness + lightnessShift\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t};\n\n\t\t\t\treturn utils.palette.createPaletteItem(newColor, index + 1);\n\t\t\t});\n\n\t\t\treturn utils.palette.createPaletteObject(options, paletteItems);\n\t\t},\n\t\t'Error generating hexadic palette.',\n\t\t{ context: { options } }\n\t);\n}\n\nfunction generateMonochromaticPalette(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctions\n): Palette {\n\tconst {\n\t\tservices: { errors },\n\t\tutils\n\t} = common;\n\n\treturn errors.handleSync(\n\t\t() => {\n\t\t\tconst columnCount = Math.max(2, Math.min(6, options.columnCount));\n\n\t\t\tutils.dom.enforceSwatchRules(columnCount, 6);\n\n\t\t\tconst baseColor = utils.color.generateRandomHSL();\n\t\t\tconst paletteItems: PaletteItem[] = [];\n\n\t\t\tconst basePaletteItem = utils.palette.createPaletteItem(\n\t\t\t\tbaseColor,\n\t\t\t\t1\n\t\t\t);\n\t\t\tpaletteItems.push(basePaletteItem);\n\n\t\t\t// generate monochromatic variations\n\t\t\tfor (let i = 1; i < columnCount; i++) {\n\t\t\t\tconst hueShift = Math.random() * 10 - 5; // small hue variation\n\t\t\t\tconst saturationShift = Math.random() * 15 - 7.5; // slight saturation shift\n\t\t\t\tconst lightnessShift = (i - 2) * 10; // creates a gradient effect\n\n\t\t\t\tconst newColor: HSL = {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: utils.brand.asRadial(\n\t\t\t\t\t\t\t(baseColor.value.hue + hueShift + 360) % 360\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.saturation + saturationShift\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.lightness + lightnessShift\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t};\n\t\t\t\tconst paletteItem = utils.palette.createPaletteItem(\n\t\t\t\t\tnewColor,\n\t\t\t\t\ti + 1\n\t\t\t\t);\n\n\t\t\t\tpaletteItems.push(paletteItem);\n\t\t\t}\n\n\t\t\treturn utils.palette.createPaletteObject(options, paletteItems);\n\t\t},\n\t\t'Error generating monochromatic palette.',\n\t\t{ context: { options } }\n\t);\n}\n\nfunction generateRandomPalette(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctions\n): Palette {\n\tconst {\n\t\tservices: { errors },\n\t\tutils\n\t} = common;\n\n\treturn errors.handleSync(\n\t\t() => {\n\t\t\t// ensure column count is between 2 and 6\n\t\t\tconst columnCount = Math.max(2, Math.min(6, options.columnCount));\n\n\t\t\tutils.dom.enforceSwatchRules(columnCount, 6);\n\n\t\t\tconst baseColor = utils.color.generateRandomHSL();\n\n\t\t\tconst paletteItems: PaletteItem[] = [];\n\n\t\t\tconst basePaletteItem = utils.palette.createPaletteItem(\n\t\t\t\tbaseColor,\n\t\t\t\t1\n\t\t\t);\n\t\t\tpaletteItems.push(basePaletteItem);\n\n\t\t\tfor (let i = 1; i < columnCount; i++) {\n\t\t\t\tconst randomColor = utils.color.generateRandomHSL();\n\t\t\t\tconst nextPaletteItem = utils.palette.createPaletteItem(\n\t\t\t\t\trandomColor,\n\t\t\t\t\ti + 1\n\t\t\t\t);\n\n\t\t\t\tpaletteItems.push(nextPaletteItem);\n\t\t\t}\n\n\t\t\treturn utils.palette.createPaletteObject(options, paletteItems);\n\t\t},\n\t\t'Error generating random palette.',\n\t\t{ context: { options } }\n\t);\n}\n\nfunction generateSplitComplementaryPalette(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctions\n): Palette {\n\tconst {\n\t\thelpers,\n\t\tservices: { errors },\n\t\tutils\n\t} = common;\n\n\treturn errors.handleSync(\n\t\t() => {\n\t\t\t// ensure column count is at least 3 and at most 6\n\t\t\tconst columnCount = Math.max(3, Math.min(6, options.columnCount));\n\t\t\tutils.dom.enforceSwatchRules(columnCount, 6);\n\n\t\t\tconst baseColor = utils.color.generateRandomHSL();\n\t\t\tconst baseHue = baseColor.value.hue;\n\n\t\t\t// generate split complementary hues\n\t\t\tconst hues = [\n\t\t\t\tbaseHue,\n\t\t\t\t(baseHue +\n\t\t\t\t\t180 +\n\t\t\t\t\tpaletteConfig.shiftRanges.splitComplementary.hue) %\n\t\t\t\t\t360,\n\t\t\t\t(baseHue +\n\t\t\t\t\t180 -\n\t\t\t\t\tpaletteConfig.shiftRanges.splitComplementary.hue +\n\t\t\t\t\t360) %\n\t\t\t\t\t360\n\t\t\t];\n\n\t\t\t// if swatchCount > 3, introduce additional variations\n\t\t\tfor (let i = 3; i < columnCount; i++) {\n\t\t\t\tconst { weights, values } =\n\t\t\t\t\tpaletteConfig.probabilities[options.distributionType];\n\t\t\t\tconst variationOffset = helpers.random.selectRandomFromWeights({\n\t\t\t\t\tweights,\n\t\t\t\t\tvalues\n\t\t\t\t});\n\t\t\t\tconst direction = i % 2 === 0 ? 1 : -1;\n\t\t\t\thues.push((baseHue + 180 + variationOffset * direction) % 360);\n\t\t\t}\n\n\t\t\t// create PaletteItem array with assigned itemIDs\n\t\t\tconst paletteItems = hues.map((hue, index) => {\n\t\t\t\tconst saturationShift =\n\t\t\t\t\tMath.random() *\n\t\t\t\t\t\tpaletteConfig.shiftRanges.splitComplementary.sat -\n\t\t\t\t\tpaletteConfig.shiftRanges.splitComplementary.sat / 2;\n\t\t\t\tconst lightnessShift =\n\t\t\t\t\tMath.random() *\n\t\t\t\t\t\tpaletteConfig.shiftRanges.splitComplementary.light -\n\t\t\t\t\tpaletteConfig.shiftRanges.splitComplementary.light / 2;\n\n\t\t\t\tconst newColor: HSL = {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.saturation + saturationShift\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.lightness + lightnessShift\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t};\n\n\t\t\t\treturn utils.palette.createPaletteItem(newColor, index + 1);\n\t\t\t});\n\n\t\t\treturn utils.palette.createPaletteObject(options, paletteItems);\n\t\t},\n\t\t'Error generating split-complementary palette.',\n\t\t{ context: { options } }\n\t);\n}\n\nfunction generateTetradicPalette(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctions,\n\tgenerateHues: GenerateHuesFnGroup\n): Palette {\n\tconst {\n\t\tservices: { errors },\n\t\tutils\n\t} = common;\n\n\treturn errors.handleSync(\n\t\t() => {\n\t\t\t// tetradic palettes always have 4 swatches\n\t\t\tconst columnCount = 4;\n\t\t\tutils.dom.enforceSwatchRules(columnCount, 4);\n\n\t\t\tconst baseColor = utils.color.generateRandomHSL();\n\n\t\t\t// generate the 4 hues\n\t\t\tconst hues = generateHues.tetradic(baseColor, common);\n\n\t\t\t// create PaletteItem array with assigned itemIDs\n\t\t\tconst paletteItems = hues.map((hue, index) => {\n\t\t\t\tconst saturationShift =\n\t\t\t\t\tMath.random() * paletteConfig.shiftRanges.tetradic.sat -\n\t\t\t\t\tpaletteConfig.shiftRanges.tetradic.sat / 2;\n\t\t\t\tconst lightnessShift =\n\t\t\t\t\tMath.random() * paletteConfig.shiftRanges.tetradic.light -\n\t\t\t\t\tpaletteConfig.shiftRanges.tetradic.light / 2;\n\n\t\t\t\tconst newColor: HSL = {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.saturation + saturationShift\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.lightness + lightnessShift\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t};\n\n\t\t\t\treturn utils.palette.createPaletteItem(newColor, index + 1);\n\t\t\t});\n\n\t\t\treturn utils.palette.createPaletteObject(options, paletteItems);\n\t\t},\n\t\t'Error generating tetradic palette.',\n\t\t{ context: { options } }\n\t);\n}\n\nfunction generateTriadicPalette(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctions,\n\tgenerateHues: GenerateHuesFnGroup\n): Palette {\n\tconst {\n\t\tservices: { errors },\n\t\tutils\n\t} = common;\n\n\treturn errors.handleSync(\n\t\t() => {\n\t\t\t// triadic palettes always have exactly 3 colors\n\t\t\tconst columnCount = 3;\n\t\t\tutils.dom.enforceSwatchRules(columnCount, 3);\n\n\t\t\t// generate the base color\n\t\t\tconst baseColor = utils.color.generateRandomHSL();\n\n\t\t\t// generate the 3 hues needed\n\t\t\tconst hues = generateHues.triadic(baseColor, common);\n\n\t\t\t// create PaletteItem array with assigned itemIDs\n\t\t\tconst paletteItems = hues.map((hue, index) => {\n\t\t\t\tconst saturationShift =\n\t\t\t\t\tMath.random() * shiftRanges.triadic.sat -\n\t\t\t\t\tpaletteConfig.shiftRanges.triadic.sat / 2;\n\t\t\t\tconst lightnessShift =\n\t\t\t\t\tMath.random() * paletteConfig.shiftRanges.triadic.light -\n\t\t\t\t\tpaletteConfig.shiftRanges.triadic.light / 2;\n\n\t\t\t\tconst newColor: HSL = {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.saturation + saturationShift\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\t\t\tMath.min(\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tbaseColor.value.lightness + lightnessShift\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t};\n\n\t\t\t\treturn utils.palette.createPaletteItem(newColor, index + 1);\n\t\t\t});\n\n\t\t\treturn utils.palette.createPaletteObject(options, paletteItems);\n\t\t},\n\t\t'Error generating triadic palette.',\n\t\t{ context: { options } }\n\t);\n}\n\nexport const generatePaletteFnGroup: GeneratePaletteFnGroup = {\n\tanalogous: generateAnalogousPalette,\n\tcomplementary: generateComplementaryPalette,\n\tdiadic: generateDiadicPalette,\n\thexadic: generateHexadicPalette,\n\tmonochromatic: generateMonochromaticPalette,\n\trandom: generateRandomPalette,\n\tsplitComplementary: generateSplitComplementaryPalette,\n\ttetradic: generateTetradicPalette,\n\ttriadic: generateTriadicPalette\n} as const;\n"],"names":[],"mappings":"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"}