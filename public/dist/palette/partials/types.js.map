{"version":3,"file":"types.js","sources":["../../../../../src/palette/partials/types.ts"],"sourcesContent":["// File: palette/partials/types.js\n\nimport {\n\tCommonFunctionsInterface,\n\tGenerateHuesFnGroup,\n\tGeneratePaletteFnGroup,\n\tHSL,\n\tPalette,\n\tPaletteItem,\n\tSelectedPaletteOptions\n} from '../../types/index.js';\nimport { data } from '../../data/index.js';\n\nconst paletteRanges = data.config.paletteRanges;\n\nfunction analogous(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctionsInterface,\n\tgenerateHues: GenerateHuesFnGroup\n): Palette {\n\tconst utils = common.utils;\n\n\tif (options.columnCount < 2) utils.dom.enforceSwatchRules(2, 6);\n\n\tconst baseColor = utils.app.generateRandomHSL();\n\tconst hues = generateHues.analogous(baseColor, options, common);\n\tconst paletteItems = utils.palette.createPaletteItemArray(baseColor, hues);\n\tconst analogousPalette = utils.palette.createPaletteObject(\n\t\toptions,\n\t\tpaletteItems\n\t);\n\n\treturn analogousPalette;\n}\n\nfunction complementary(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctionsInterface\n): Palette {\n\tconst helpers = common.helpers;\n\tconst utils = common.utils;\n\tconst columnCount = Math.max(2, Math.min(6, options.columnCount));\n\n\tutils.dom.enforceSwatchRules(columnCount, 6);\n\n\tconst baseColor = utils.app.generateRandomHSL();\n\tconst baseHue = baseColor.value.hue;\n\tconst hues: number[] = [baseHue];\n\n\t// always include the direct complement\n\thues.push((baseHue + 180) % 360);\n\n\t// generate additional complementary variations if needed\n\tconst extraColorsNeeded = columnCount - 2;\n\n\tif (extraColorsNeeded > 0) {\n\t\tfor (let i = 0; i < extraColorsNeeded; i++) {\n\t\t\tconst variationOffset = helpers.palette.getWeightedRandomInterval(\n\t\t\t\toptions.distributionType\n\t\t\t);\n\t\t\tconst direction = Math.random() < 0.5 ? 1 : -1; // randomize direction\n\t\t\tconst newHue =\n\t\t\t\t(baseHue + 180 + variationOffset * direction + 360) % 360;\n\t\t\thues.push(newHue);\n\t\t}\n\t}\n\n\t// define lightness & saturation variation ranges\n\tconst lightnessRange = [-10, -5, 0, 5, 10]; // possible changes in lightness\n\tconst saturationRange = [-15, -10, 0, 10, 15]; // possible changes in saturation\n\n\tconst paletteItems = hues.map((hue, index) => {\n\t\tconst lightnessOffset =\n\t\t\tlightnessRange[Math.floor(Math.random() * lightnessRange.length)];\n\t\tconst saturationOffset =\n\t\t\tsaturationRange[Math.floor(Math.random() * saturationRange.length)];\n\n\t\tconst newColor: HSL = {\n\t\t\tvalue: {\n\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tbaseColor.value.saturation + saturationOffset\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(0, baseColor.value.lightness + lightnessOffset)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t},\n\t\t\tformat: 'hsl'\n\t\t};\n\n\t\treturn utils.palette.createPaletteItem(newColor, index + 1);\n\t});\n\n\treturn utils.palette.createPaletteObject(options, paletteItems);\n}\n\nfunction diadic(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctionsInterface,\n\tgenerateHues: GenerateHuesFnGroup\n): Palette {\n\tconst helpers = common.helpers;\n\tconst utils = common.utils;\n\tconst columnCount = Math.max(2, Math.min(6, options.columnCount));\n\n\tutils.dom.enforceSwatchRules(columnCount, 6);\n\n\tconst baseColor = utils.app.generateRandomHSL();\n\tconst hues = generateHues.diadic(baseColor, options, common);\n\n\t// if more swatches are needed, create slight variations\n\tconst extraColorsNeeded = columnCount - 2;\n\tif (extraColorsNeeded > 0) {\n\t\tfor (let i = 0; i < extraColorsNeeded; i++) {\n\t\t\tconst variationOffset = helpers.palette.getWeightedRandomInterval(\n\t\t\t\toptions.distributionType\n\t\t\t);\n\t\t\tconst direction = i % 2 === 0 ? 1 : -1;\n\n\t\t\thues.push(\n\t\t\t\t(baseColor.value.hue + variationOffset * direction) % 360\n\t\t\t);\n\t\t}\n\t}\n\n\t// create PaletteItem array with incrementing itemIDs\n\tconst paletteItems = hues.map((hue, index) => {\n\t\tconst saturationShift =\n\t\t\tMath.random() * paletteRanges.shift.diadic.sat -\n\t\t\tpaletteRanges.shift.diadic.sat / 2;\n\t\tconst lightnessShift =\n\t\t\tMath.random() * paletteRanges.shift.diadic.light -\n\t\t\tpaletteRanges.shift.diadic.light / 2;\n\t\tconst newColor: HSL = {\n\t\t\tvalue: {\n\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tbaseColor.value.saturation + saturationShift\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(0, baseColor.value.lightness + lightnessShift)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t},\n\t\t\tformat: 'hsl'\n\t\t};\n\n\t\treturn utils.palette.createPaletteItem(newColor, index + 1);\n\t});\n\n\treturn utils.palette.createPaletteObject(options, paletteItems);\n}\n\nfunction hexadic(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctionsInterface,\n\tgenerateHues: GenerateHuesFnGroup\n): Palette {\n\tconst utils = common.utils;\n\t// hexadic palettes always have 6 swatches\n\tconst columnCount = 6;\n\n\tutils.dom.enforceSwatchRules(columnCount, 6);\n\n\tconst baseColor = utils.app.generateRandomHSL();\n\tconst hues = generateHues.hexadic(baseColor, common);\n\n\t// create PaletteItem array with assigned itemIDs\n\tconst paletteItems = hues.map((hue, index) => {\n\t\tconst saturationShift =\n\t\t\tMath.random() * paletteRanges.shift.hexad.sat -\n\t\t\tpaletteRanges.shift.hexad.sat / 2;\n\t\tconst lightnessShift =\n\t\t\tMath.random() * paletteRanges.shift.hexad.light -\n\t\t\tpaletteRanges.shift.hexad.light / 2;\n\n\t\tconst newColor: HSL = {\n\t\t\tvalue: {\n\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tbaseColor.value.saturation + saturationShift\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(0, baseColor.value.lightness + lightnessShift)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t},\n\t\t\tformat: 'hsl'\n\t\t};\n\n\t\treturn utils.palette.createPaletteItem(newColor, index + 1);\n\t});\n\n\treturn utils.palette.createPaletteObject(options, paletteItems);\n}\n\nfunction monochromatic(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctionsInterface\n): Palette {\n\tconst utils = common.utils;\n\tconst columnCount = Math.max(2, Math.min(6, options.columnCount));\n\n\tutils.dom.enforceSwatchRules(columnCount, 6);\n\n\tconst baseColor = utils.app.generateRandomHSL();\n\tconst paletteItems: PaletteItem[] = [];\n\n\tconst basePaletteItem = utils.palette.createPaletteItem(baseColor, 1);\n\tpaletteItems.push(basePaletteItem);\n\n\t// generate monochromatic variations\n\tfor (let i = 1; i < columnCount; i++) {\n\t\tconst hueShift = Math.random() * 10 - 5; // small hue variation\n\t\tconst saturationShift = Math.random() * 15 - 7.5; // slight saturation shift\n\t\tconst lightnessShift = (i - 2) * 10; // creates a gradient effect\n\n\t\tconst newColor: HSL = {\n\t\t\tvalue: {\n\t\t\t\thue: utils.brand.asRadial(\n\t\t\t\t\t(baseColor.value.hue + hueShift + 360) % 360\n\t\t\t\t),\n\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tbaseColor.value.saturation + saturationShift\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(0, baseColor.value.lightness + lightnessShift)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t},\n\t\t\tformat: 'hsl'\n\t\t};\n\t\tconst paletteItem = utils.palette.createPaletteItem(newColor, i + 1);\n\n\t\tpaletteItems.push(paletteItem);\n\t}\n\n\treturn utils.palette.createPaletteObject(options, paletteItems);\n}\n\nfunction random(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctionsInterface\n): Palette {\n\tconst utils = common.utils;\n\t// ensure column count is between 2 and 6\n\tconst columnCount = Math.max(2, Math.min(6, options.columnCount));\n\n\tutils.dom.enforceSwatchRules(columnCount, 6);\n\n\tconst baseColor = utils.app.generateRandomHSL();\n\n\tconst paletteItems: PaletteItem[] = [];\n\n\tconst basePaletteItem = utils.palette.createPaletteItem(baseColor, 1);\n\tpaletteItems.push(basePaletteItem);\n\n\tfor (let i = 1; i < columnCount; i++) {\n\t\tconst randomColor = utils.app.generateRandomHSL();\n\t\tconst nextPaletteItem = utils.palette.createPaletteItem(\n\t\t\trandomColor,\n\t\t\ti + 1\n\t\t);\n\n\t\tpaletteItems.push(nextPaletteItem);\n\t}\n\n\treturn utils.palette.createPaletteObject(options, paletteItems);\n}\n\nfunction splitComplementary(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctionsInterface\n): Palette {\n\tconst helpers = common.helpers;\n\tconst utils = common.utils;\n\t// ensure column count is at least 3 and at most 6\n\tconst columnCount = Math.max(3, Math.min(6, options.columnCount));\n\tutils.dom.enforceSwatchRules(columnCount, 6);\n\n\tconst baseColor = utils.app.generateRandomHSL();\n\tconst baseHue = baseColor.value.hue;\n\n\t// generate split complementary hues\n\tconst hues = [\n\t\tbaseHue,\n\t\t(baseHue + 180 + paletteRanges.shift.splitComp.hue) % 360,\n\t\t(baseHue + 180 - paletteRanges.shift.splitComp.hue + 360) % 360\n\t];\n\n\t// if swatchCount > 3, introduce additional variations\n\tfor (let i = 3; i < columnCount; i++) {\n\t\tconst variationOffset = helpers.palette.getWeightedRandomInterval(\n\t\t\toptions.distributionType\n\t\t);\n\t\tconst direction = i % 2 === 0 ? 1 : -1;\n\t\thues.push((baseHue + 180 + variationOffset * direction) % 360);\n\t}\n\n\t// create PaletteItem array with assigned itemIDs\n\tconst paletteItems = hues.map((hue, index) => {\n\t\tconst saturationShift =\n\t\t\tMath.random() * paletteRanges.shift.splitComp.sat -\n\t\t\tpaletteRanges.shift.splitComp.sat / 2;\n\t\tconst lightnessShift =\n\t\t\tMath.random() * paletteRanges.shift.splitComp.light -\n\t\t\tpaletteRanges.shift.splitComp.light / 2;\n\n\t\tconst newColor: HSL = {\n\t\t\tvalue: {\n\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tbaseColor.value.saturation + saturationShift\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(0, baseColor.value.lightness + lightnessShift)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t},\n\t\t\tformat: 'hsl'\n\t\t};\n\n\t\treturn utils.palette.createPaletteItem(newColor, index + 1);\n\t});\n\n\treturn utils.palette.createPaletteObject(options, paletteItems);\n}\n\nfunction tetradic(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctionsInterface,\n\tgenerateHues: GenerateHuesFnGroup\n): Palette {\n\tconst utils = common.utils;\n\t// tetradic palettes always have 4 swatches\n\tconst columnCount = 4;\n\tutils.dom.enforceSwatchRules(columnCount, 4);\n\n\tconst baseColor = utils.app.generateRandomHSL();\n\n\t// generate the 4 hues\n\tconst hues = generateHues.tetradic(baseColor, common);\n\n\t// create PaletteItem array with assigned itemIDs\n\tconst paletteItems = hues.map((hue, index) => {\n\t\tconst saturationShift =\n\t\t\tMath.random() * paletteRanges.shift.tetra.sat -\n\t\t\tpaletteRanges.shift.tetra.sat / 2;\n\t\tconst lightnessShift =\n\t\t\tMath.random() * paletteRanges.shift.tetra.light -\n\t\t\tpaletteRanges.shift.tetra.light / 2;\n\n\t\tconst newColor: HSL = {\n\t\t\tvalue: {\n\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tbaseColor.value.saturation + saturationShift\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(0, baseColor.value.lightness + lightnessShift)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t},\n\t\t\tformat: 'hsl'\n\t\t};\n\n\t\treturn utils.palette.createPaletteItem(newColor, index + 1);\n\t});\n\n\treturn utils.palette.createPaletteObject(options, paletteItems);\n}\n\nfunction triadic(\n\toptions: SelectedPaletteOptions,\n\tcommon: CommonFunctionsInterface,\n\tgenerateHues: GenerateHuesFnGroup\n): Palette {\n\tconst utils = common.utils;\n\t// triadic palettes always have exactly 3 colors\n\tconst columnCount = 3;\n\tutils.dom.enforceSwatchRules(columnCount, 3);\n\n\t// generate the base color\n\tconst baseColor = utils.app.generateRandomHSL();\n\n\t// generate the 3 hues needed\n\tconst hues = generateHues.triadic(baseColor, common);\n\n\t// create PaletteItem array with assigned itemIDs\n\tconst paletteItems = hues.map((hue, index) => {\n\t\tconst saturationShift =\n\t\t\tMath.random() * paletteRanges.shift.triad.sat -\n\t\t\tpaletteRanges.shift.triad.sat / 2;\n\t\tconst lightnessShift =\n\t\t\tMath.random() * paletteRanges.shift.triad.light -\n\t\t\tpaletteRanges.shift.triad.light / 2;\n\n\t\tconst newColor: HSL = {\n\t\t\tvalue: {\n\t\t\t\thue: utils.brand.asRadial(hue),\n\t\t\t\tsaturation: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tbaseColor.value.saturation + saturationShift\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tlightness: utils.brand.asPercentile(\n\t\t\t\t\tMath.min(\n\t\t\t\t\t\t100,\n\t\t\t\t\t\tMath.max(0, baseColor.value.lightness + lightnessShift)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t},\n\t\t\tformat: 'hsl'\n\t\t};\n\n\t\treturn utils.palette.createPaletteItem(newColor, index + 1);\n\t});\n\n\treturn utils.palette.createPaletteObject(options, paletteItems);\n}\n\nexport const generatePaletteFnGroup: GeneratePaletteFnGroup = {\n\tanalogous,\n\tcomplementary,\n\tdiadic,\n\thexadic,\n\tmonochromatic,\n\trandom,\n\tsplitComplementary,\n\ttetradic,\n\ttriadic\n};\n"],"names":[],"mappings":"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"}