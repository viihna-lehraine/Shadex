// File: palette/main/types/triadic.js
import { IDBManager } from '../../../db/IDBManager.js';
import { coreUtils, utils } from '../../../common/index.js';
import { constsData as consts } from '../../../data/consts.js';
import { superUtils as paletteSuperUtils } from '../../common/index.js';
import { uiFn } from '../../../ui/index.js';
const conversion = utils.conversion;
const create = paletteSuperUtils.create;
const genHues = paletteSuperUtils.genHues;
const paletteRanges = consts.paletteRanges;
export async function triadic(args) {
    // ensure exactly 3 swatches
    if (args.swatches !== 3)
        uiFn.enforceSwatchRules(3, 3);
    // base color setup
    const baseColor = create.baseColor(args.customColor);
    // generate triadic hues
    const hues = genHues.triadic(baseColor.value.hue);
    // initialize palette items array
    const paletteItems = [];
    // add the base color as the first palette item
    const basePaletteItem = await create.paletteItem(baseColor);
    paletteItems.push(basePaletteItem);
    // add the triadic colors sequentially
    for (let index = 0; index < hues.length; index++) {
        const hue = hues[index];
        const adjustedHSL = {
            value: {
                hue: coreUtils.brand.asRadial(hue),
                saturation: coreUtils.brand.asPercentile(Math.max(0, Math.min(baseColor.value.saturation +
                    (index % 2 === 0
                        ? -paletteRanges.shift.triad.sat
                        : paletteRanges.shift.triad.sat), 100))),
                lightness: coreUtils.brand.asPercentile(Math.max(0, Math.min(baseColor.value.lightness +
                    (index % 2 === 0
                        ? -paletteRanges.shift.triad.light
                        : paletteRanges.shift.triad.light), 100)))
            },
            format: 'hsl'
        };
        // generate all color values and create the palette item
        const adjustedColor = conversion.genAllColorValues(adjustedHSL)
            .hsl;
        const paletteItem = await create.paletteItem(adjustedColor);
        paletteItems.push(paletteItem);
    }
    const idbManager = await IDBManager.getInstance();
    const paletteID = await idbManager.getNextPaletteID();
    if (!paletteID)
        throw new Error('Palette ID is either null or undefined.');
    // save the palette to the database
    const triadicPalette = await idbManager.savePaletteToDB('triadic', paletteItems, paletteID, args.swatches, args.limitDark, args.limitGray, args.limitLight);
    // handle null or undefined palette
    if (!triadicPalette) {
        throw new Error('Triadic palette is either null or undefined.');
    }
    return triadicPalette;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJpYWRpYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9wYWxldHRlL21haW4vdHlwZXMvdHJpYWRpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBc0M7QUFRdEMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDNUQsT0FBTyxFQUFFLFVBQVUsSUFBSSxNQUFNLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsVUFBVSxJQUFJLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDeEUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRTVDLE1BQU0sVUFBVSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUM7QUFDcEMsTUFBTSxNQUFNLEdBQUcsaUJBQWlCLENBQUMsTUFBTSxDQUFDO0FBQ3hDLE1BQU0sT0FBTyxHQUFHLGlCQUFpQixDQUFDLE9BQU8sQ0FBQztBQUMxQyxNQUFNLGFBQWEsR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDO0FBRTNDLE1BQU0sQ0FBQyxLQUFLLFVBQVUsT0FBTyxDQUFDLElBQTJCO0lBQ3hELDRCQUE0QjtJQUM1QixJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssQ0FBQztRQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFdkQsbUJBQW1CO0lBQ25CLE1BQU0sU0FBUyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBRXJELHdCQUF3QjtJQUN4QixNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFbEQsaUNBQWlDO0lBQ2pDLE1BQU0sWUFBWSxHQUFrQixFQUFFLENBQUM7SUFFdkMsK0NBQStDO0lBQy9DLE1BQU0sZUFBZSxHQUFHLE1BQU0sTUFBTSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM1RCxZQUFZLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBRW5DLHNDQUFzQztJQUN0QyxLQUFLLElBQUksS0FBSyxHQUFHLENBQUMsRUFBRSxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDO1FBQ2xELE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN4QixNQUFNLFdBQVcsR0FBUTtZQUN4QixLQUFLLEVBQUU7Z0JBQ04sR0FBRyxFQUFFLFNBQVMsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQztnQkFDbEMsVUFBVSxFQUFFLFNBQVMsQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUN2QyxJQUFJLENBQUMsR0FBRyxDQUNQLENBQUMsRUFDRCxJQUFJLENBQUMsR0FBRyxDQUNQLFNBQVMsQ0FBQyxLQUFLLENBQUMsVUFBVTtvQkFDekIsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxLQUFLLENBQUM7d0JBQ2YsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRzt3QkFDaEMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUNsQyxHQUFHLENBQ0gsQ0FDRCxDQUNEO2dCQUNELFNBQVMsRUFBRSxTQUFTLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FDdEMsSUFBSSxDQUFDLEdBQUcsQ0FDUCxDQUFDLEVBQ0QsSUFBSSxDQUFDLEdBQUcsQ0FDUCxTQUFTLENBQUMsS0FBSyxDQUFDLFNBQVM7b0JBQ3hCLENBQUMsS0FBSyxHQUFHLENBQUMsS0FBSyxDQUFDO3dCQUNmLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUs7d0JBQ2xDLENBQUMsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFDcEMsR0FBRyxDQUNILENBQ0QsQ0FDRDthQUNEO1lBQ0QsTUFBTSxFQUFFLEtBQUs7U0FDYixDQUFDO1FBRUYsd0RBQXdEO1FBQ3hELE1BQU0sYUFBYSxHQUFHLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxXQUFXLENBQUM7YUFDN0QsR0FBVSxDQUFDO1FBQ2IsTUFBTSxXQUFXLEdBQUcsTUFBTSxNQUFNLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzVELFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELE1BQU0sVUFBVSxHQUFHLE1BQU0sVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ2xELE1BQU0sU0FBUyxHQUFHLE1BQU0sVUFBVSxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFFdEQsSUFBSSxDQUFDLFNBQVM7UUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHlDQUF5QyxDQUFDLENBQUM7SUFFM0UsbUNBQW1DO0lBQ25DLE1BQU0sY0FBYyxHQUFHLE1BQU0sVUFBVSxDQUFDLGVBQWUsQ0FDdEQsU0FBUyxFQUNULFlBQVksRUFDWixTQUFTLEVBQ1QsSUFBSSxDQUFDLFFBQVEsRUFDYixJQUFJLENBQUMsU0FBUyxFQUNkLElBQUksQ0FBQyxTQUFTLEVBQ2QsSUFBSSxDQUFDLFVBQVUsQ0FDZixDQUFDO0lBRUYsbUNBQW1DO0lBQ25DLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUNyQixNQUFNLElBQUksS0FBSyxDQUFDLDhDQUE4QyxDQUFDLENBQUM7SUFDakUsQ0FBQztJQUVELE9BQU8sY0FBYyxDQUFDO0FBQ3ZCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiBwYWxldHRlL21haW4vdHlwZXMvdHJpYWRpYy5qc1xuXG5pbXBvcnQge1xuXHRIU0wsXG5cdFBhbGV0dGUsXG5cdFBhbGV0dGVHZW5lcmF0aW9uQXJncyxcblx0UGFsZXR0ZUl0ZW1cbn0gZnJvbSAnLi4vLi4vLi4vdHlwZXMvaW5kZXguanMnO1xuaW1wb3J0IHsgSURCTWFuYWdlciB9IGZyb20gJy4uLy4uLy4uL2RiL0lEQk1hbmFnZXIuanMnO1xuaW1wb3J0IHsgY29yZVV0aWxzLCB1dGlscyB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9pbmRleC5qcyc7XG5pbXBvcnQgeyBjb25zdHNEYXRhIGFzIGNvbnN0cyB9IGZyb20gJy4uLy4uLy4uL2RhdGEvY29uc3RzLmpzJztcbmltcG9ydCB7IHN1cGVyVXRpbHMgYXMgcGFsZXR0ZVN1cGVyVXRpbHMgfSBmcm9tICcuLi8uLi9jb21tb24vaW5kZXguanMnO1xuaW1wb3J0IHsgdWlGbiB9IGZyb20gJy4uLy4uLy4uL3VpL2luZGV4LmpzJztcblxuY29uc3QgY29udmVyc2lvbiA9IHV0aWxzLmNvbnZlcnNpb247XG5jb25zdCBjcmVhdGUgPSBwYWxldHRlU3VwZXJVdGlscy5jcmVhdGU7XG5jb25zdCBnZW5IdWVzID0gcGFsZXR0ZVN1cGVyVXRpbHMuZ2VuSHVlcztcbmNvbnN0IHBhbGV0dGVSYW5nZXMgPSBjb25zdHMucGFsZXR0ZVJhbmdlcztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRyaWFkaWMoYXJnczogUGFsZXR0ZUdlbmVyYXRpb25BcmdzKTogUHJvbWlzZTxQYWxldHRlPiB7XG5cdC8vIGVuc3VyZSBleGFjdGx5IDMgc3dhdGNoZXNcblx0aWYgKGFyZ3Muc3dhdGNoZXMgIT09IDMpIHVpRm4uZW5mb3JjZVN3YXRjaFJ1bGVzKDMsIDMpO1xuXG5cdC8vIGJhc2UgY29sb3Igc2V0dXBcblx0Y29uc3QgYmFzZUNvbG9yID0gY3JlYXRlLmJhc2VDb2xvcihhcmdzLmN1c3RvbUNvbG9yKTtcblxuXHQvLyBnZW5lcmF0ZSB0cmlhZGljIGh1ZXNcblx0Y29uc3QgaHVlcyA9IGdlbkh1ZXMudHJpYWRpYyhiYXNlQ29sb3IudmFsdWUuaHVlKTtcblxuXHQvLyBpbml0aWFsaXplIHBhbGV0dGUgaXRlbXMgYXJyYXlcblx0Y29uc3QgcGFsZXR0ZUl0ZW1zOiBQYWxldHRlSXRlbVtdID0gW107XG5cblx0Ly8gYWRkIHRoZSBiYXNlIGNvbG9yIGFzIHRoZSBmaXJzdCBwYWxldHRlIGl0ZW1cblx0Y29uc3QgYmFzZVBhbGV0dGVJdGVtID0gYXdhaXQgY3JlYXRlLnBhbGV0dGVJdGVtKGJhc2VDb2xvcik7XG5cdHBhbGV0dGVJdGVtcy5wdXNoKGJhc2VQYWxldHRlSXRlbSk7XG5cblx0Ly8gYWRkIHRoZSB0cmlhZGljIGNvbG9ycyBzZXF1ZW50aWFsbHlcblx0Zm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGh1ZXMubGVuZ3RoOyBpbmRleCsrKSB7XG5cdFx0Y29uc3QgaHVlID0gaHVlc1tpbmRleF07XG5cdFx0Y29uc3QgYWRqdXN0ZWRIU0w6IEhTTCA9IHtcblx0XHRcdHZhbHVlOiB7XG5cdFx0XHRcdGh1ZTogY29yZVV0aWxzLmJyYW5kLmFzUmFkaWFsKGh1ZSksXG5cdFx0XHRcdHNhdHVyYXRpb246IGNvcmVVdGlscy5icmFuZC5hc1BlcmNlbnRpbGUoXG5cdFx0XHRcdFx0TWF0aC5tYXgoXG5cdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0TWF0aC5taW4oXG5cdFx0XHRcdFx0XHRcdGJhc2VDb2xvci52YWx1ZS5zYXR1cmF0aW9uICtcblx0XHRcdFx0XHRcdFx0XHQoaW5kZXggJSAyID09PSAwXG5cdFx0XHRcdFx0XHRcdFx0XHQ/IC1wYWxldHRlUmFuZ2VzLnNoaWZ0LnRyaWFkLnNhdFxuXHRcdFx0XHRcdFx0XHRcdFx0OiBwYWxldHRlUmFuZ2VzLnNoaWZ0LnRyaWFkLnNhdCksXG5cdFx0XHRcdFx0XHRcdDEwMFxuXHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSxcblx0XHRcdFx0bGlnaHRuZXNzOiBjb3JlVXRpbHMuYnJhbmQuYXNQZXJjZW50aWxlKFxuXHRcdFx0XHRcdE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdE1hdGgubWluKFxuXHRcdFx0XHRcdFx0XHRiYXNlQ29sb3IudmFsdWUubGlnaHRuZXNzICtcblx0XHRcdFx0XHRcdFx0XHQoaW5kZXggJSAyID09PSAwXG5cdFx0XHRcdFx0XHRcdFx0XHQ/IC1wYWxldHRlUmFuZ2VzLnNoaWZ0LnRyaWFkLmxpZ2h0XG5cdFx0XHRcdFx0XHRcdFx0XHQ6IHBhbGV0dGVSYW5nZXMuc2hpZnQudHJpYWQubGlnaHQpLFxuXHRcdFx0XHRcdFx0XHQxMDBcblx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHQpXG5cdFx0XHRcdClcblx0XHRcdH0sXG5cdFx0XHRmb3JtYXQ6ICdoc2wnXG5cdFx0fTtcblxuXHRcdC8vIGdlbmVyYXRlIGFsbCBjb2xvciB2YWx1ZXMgYW5kIGNyZWF0ZSB0aGUgcGFsZXR0ZSBpdGVtXG5cdFx0Y29uc3QgYWRqdXN0ZWRDb2xvciA9IGNvbnZlcnNpb24uZ2VuQWxsQ29sb3JWYWx1ZXMoYWRqdXN0ZWRIU0wpXG5cdFx0XHQuaHNsIGFzIEhTTDtcblx0XHRjb25zdCBwYWxldHRlSXRlbSA9IGF3YWl0IGNyZWF0ZS5wYWxldHRlSXRlbShhZGp1c3RlZENvbG9yKTtcblx0XHRwYWxldHRlSXRlbXMucHVzaChwYWxldHRlSXRlbSk7XG5cdH1cblxuXHRjb25zdCBpZGJNYW5hZ2VyID0gYXdhaXQgSURCTWFuYWdlci5nZXRJbnN0YW5jZSgpO1xuXHRjb25zdCBwYWxldHRlSUQgPSBhd2FpdCBpZGJNYW5hZ2VyLmdldE5leHRQYWxldHRlSUQoKTtcblxuXHRpZiAoIXBhbGV0dGVJRCkgdGhyb3cgbmV3IEVycm9yKCdQYWxldHRlIElEIGlzIGVpdGhlciBudWxsIG9yIHVuZGVmaW5lZC4nKTtcblxuXHQvLyBzYXZlIHRoZSBwYWxldHRlIHRvIHRoZSBkYXRhYmFzZVxuXHRjb25zdCB0cmlhZGljUGFsZXR0ZSA9IGF3YWl0IGlkYk1hbmFnZXIuc2F2ZVBhbGV0dGVUb0RCKFxuXHRcdCd0cmlhZGljJyxcblx0XHRwYWxldHRlSXRlbXMsXG5cdFx0cGFsZXR0ZUlELFxuXHRcdGFyZ3Muc3dhdGNoZXMsXG5cdFx0YXJncy5saW1pdERhcmssXG5cdFx0YXJncy5saW1pdEdyYXksXG5cdFx0YXJncy5saW1pdExpZ2h0XG5cdCk7XG5cblx0Ly8gaGFuZGxlIG51bGwgb3IgdW5kZWZpbmVkIHBhbGV0dGVcblx0aWYgKCF0cmlhZGljUGFsZXR0ZSkge1xuXHRcdHRocm93IG5ldyBFcnJvcignVHJpYWRpYyBwYWxldHRlIGlzIGVpdGhlciBudWxsIG9yIHVuZGVmaW5lZC4nKTtcblx0fVxuXG5cdHJldHVybiB0cmlhZGljUGFsZXR0ZTtcbn1cbiJdfQ==