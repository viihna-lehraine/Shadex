{"version":3,"file":"PaletteManager.js","sources":["../../../../src/palette/PaletteManager.ts"],"sourcesContent":["// File: palette/PaletteManager.js\n\nimport { StateManager } from '../state/StateManager.js';\nimport { StorageManager } from '../storage/StorageManager.js';\nimport {\n\tCommonFunctions,\n\tGenerateHuesFnGroup,\n\tGeneratePaletteFn,\n\tGeneratePaletteFnGroup,\n\tPalette,\n\tPaletteItem,\n\tPaletteManagerInterface,\n\tServicesInterface,\n\tUtilitiesInterface\n} from '../types/index.js';\nimport { config, domConfig, domIndex, regex } from '../config/index.js';\n\nconst ids = domIndex.ids;\n\nexport class PaletteManager implements PaletteManagerInterface {\n\tprivate generateHues: GenerateHuesFnGroup;\n\tprivate generatePaletteFns: GeneratePaletteFnGroup;\n\tprivate generatePalette: GeneratePaletteFn;\n\tprivate common: CommonFunctions;\n\tprivate utils: UtilitiesInterface;\n\tprivate log: ServicesInterface['log'];\n\tprivate errors: ServicesInterface['errors'];\n\tprivate storage: StorageManager;\n\n\tconstructor(\n\t\tprivate stateManager: StateManager,\n\t\tcommon: CommonFunctions,\n\t\tgenerateHues: GenerateHuesFnGroup,\n\t\tgeneratePaletteFns: GeneratePaletteFnGroup,\n\t\tgeneratePalette: GeneratePaletteFn\n\t) {\n\t\tconsole.log(`[PaletteManager.constructor] Entering constructor...`);\n\t\tconsole.log('[PaletteManager.constructor] stateManager', stateManager);\n\t\tconsole.log(`[PaletteManager.constructor] Common Fn Group`, common);\n\t\tconsole.log(\n\t\t\t`[PaletteManager.constructor] Generate Hues Fn Group`,\n\t\t\tgenerateHues\n\t\t);\n\t\tconsole.log(\n\t\t\t`[PaletteManager.constructor] Generate Palette Fn Group`,\n\t\t\tgeneratePaletteFns\n\t\t);\n\t\tconsole.log(\n\t\t\t`[PaletteManager.constructor] Generate Palette Fn`,\n\t\t\tgeneratePalette\n\t\t);\n\n\t\tthis.log = common.services.log;\n\t\tthis.generateHues = generateHues;\n\t\tthis.generatePaletteFns = generatePaletteFns;\n\t\tthis.generatePalette = generatePalette;\n\t\tthis.common = common;\n\t\tthis.errors = common.services.errors;\n\t\tthis.utils = common.utils;\n\n\t\tthis.storage = new StorageManager(this.common.services);\n\n\t\tthis.log('Completing initialization', 'debug');\n\t}\n\n\tpublic extractPaletteFromDOM(): Palette | void {\n\t\treturn this.errors.handle(() => {\n\t\t\tthis.log('Extracting palette from DOM', 'debug');\n\n\t\t\tconst paletteColumns = document.querySelectorAll('.palette-column');\n\t\t\tif (paletteColumns.length === 0) {\n\t\t\t\tthis.log('No palette columns found in DOM.', 'debug');\n\t\t\t\treturn config.defaults.palette;\n\t\t\t}\n\n\t\t\tconst extractedItems: PaletteItem[] = Array.from(\n\t\t\t\tpaletteColumns\n\t\t\t).map((col, index) => {\n\t\t\t\tconst input = col.querySelector(\n\t\t\t\t\t'.color-display'\n\t\t\t\t) as HTMLInputElement;\n\t\t\t\tconst color = input ? input.value.trim() : '#000000';\n\n\t\t\t\tthis.log(\n\t\t\t\t\t`Extracted color from column ${index + 1}: ${color}`,\n\t\t\t\t\t'debug'\n\t\t\t\t);\n\n\t\t\t\tif (!regex.dom.hex.test(color)) {\n\t\t\t\t\tthis.log(\n\t\t\t\t\t\t`Invalid color format for column ${index + 1}: ${color}`,\n\t\t\t\t\t\t'warn'\n\t\t\t\t\t);\n\n\t\t\t\t\tconst fallbackColor = this.utils.brand.asHex({\n\t\t\t\t\t\tvalue: { hex: '#FF00FF' },\n\t\t\t\t\t\tformat: 'hex'\n\t\t\t\t\t});\n\t\t\t\t\tconst fallbackHSL =\n\t\t\t\t\t\tthis.utils.color.convertToHSL(fallbackColor);\n\n\t\t\t\t\treturn this.utils.palette.createPaletteItem(\n\t\t\t\t\t\tfallbackHSL,\n\t\t\t\t\t\tindex + 1\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst parsedColor = this.utils.color.convertCSSToColor(color);\n\t\t\t\tif (!parsedColor) throw new Error(`Invalid color: ${color}`);\n\n\t\t\t\tconst hslColor =\n\t\t\t\t\tparsedColor.format === 'hsl'\n\t\t\t\t\t\t? parsedColor\n\t\t\t\t\t\t: this.utils.color.convertToHSL(parsedColor);\n\n\t\t\t\tconst allColors =\n\t\t\t\t\tthis.utils.palette.generateAllColorValues(hslColor);\n\n\t\t\t\treturn this.utils.palette.createPaletteItem(\n\t\t\t\t\tallColors.hsl,\n\t\t\t\t\tindex + 1\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tconst options = this.utils.palette.getPaletteOptionsFromUI();\n\n\t\t\tthis.log(\n\t\t\t\t`Extracted palette options: ${JSON.stringify(options)}`,\n\t\t\t\t'debug'\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tid: `${options.paletteType}_${crypto.randomUUID()}`,\n\t\t\t\tmetadata: {\n\t\t\t\t\tname: 'EXTRACTED',\n\t\t\t\t\tcolumnCount: extractedItems.length,\n\t\t\t\t\tflags: {\n\t\t\t\t\t\tlimitDark: options.limitDark,\n\t\t\t\t\t\tlimitGray: options.limitGray,\n\t\t\t\t\t\tlimitLight: options.limitLight\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: this.utils.app.getFormattedTimestamp(),\n\t\t\t\t\ttype: options.paletteType\n\t\t\t\t},\n\t\t\t\titems: extractedItems\n\t\t\t};\n\t\t}, 'Failed to extract palette from DOM');\n\t}\n\n\tpublic handleColumnLock(columnID: number): void {\n\t\tconst currentState = this.stateManager.getState();\n\t\tconst columns = currentState.paletteContainer.columns;\n\n\t\t// find column by ID\n\t\tconst columnIndex = columns.findIndex(col => col.id === columnID);\n\n\t\tif (columnIndex === -1) {\n\t\t\tthis.log(`Column with ID ${columnID} not found.`, 'warn');\n\t\t\treturn;\n\t\t}\n\n\t\t// toggle lock state\n\t\tcolumns[columnIndex].isLocked = !columns[columnIndex].isLocked;\n\n\t\tthis.stateManager.updatePaletteColumns(columns, true, 2);\n\t}\n\n\tpublic handleColumnResize(columnID: number, newSize: number): void {\n\t\tthis.errors.handle(() => {\n\t\t\tconst currentState = this.stateManager.getState();\n\t\t\tconst columns = currentState.paletteContainer.columns;\n\n\t\t\tconst columnIndex = columns.findIndex(col => col.id === columnID);\n\t\t\tif (columnIndex === -1) {\n\t\t\t\tthis.log(`Column with ID ${columnID} not found.`, 'warn');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst minSize = domConfig.minColumnSize;\n\t\t\tconst maxSize = domConfig.maxColumnSize;\n\t\t\tconst adjustedSize = Math.max(minSize, Math.min(newSize, maxSize));\n\n\t\t\tconst sizeDiff = adjustedSize - columns[columnIndex].size;\n\t\t\tcolumns[columnIndex].size = adjustedSize;\n\n\t\t\tconst unlockedColumns = columns.filter(\n\t\t\t\t(_, i) => i !== columnIndex && !columns[i].isLocked\n\t\t\t);\n\t\t\tconst distributeAmount = sizeDiff / unlockedColumns.length;\n\n\t\t\tunlockedColumns.forEach(col => {\n\t\t\t\tcol.size = Math.max(\n\t\t\t\t\tminSize,\n\t\t\t\t\tMath.min(col.size - distributeAmount, maxSize)\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// normalize to 100%\n\t\t\tconst totalSize = columns.reduce((sum, col) => sum + col.size, 0);\n\t\t\tconst correctionFactor = 100 / totalSize;\n\t\t\tcolumns.forEach(col => (col.size *= correctionFactor));\n\n\t\t\tthis.stateManager.updatePaletteColumns(columns, true, 2);\n\t\t}, `Failed to resize column ${columnID}`);\n\t}\n\n\tpublic async loadPalette(): Promise<void> {\n\t\tawait this.errors.handleAsync(async () => {\n\t\t\tawait this.stateManager.ensureStateReady();\n\n\t\t\tconst storedPalette = await this.storage.getItem('palette');\n\t\t\tif (\n\t\t\t\tstoredPalette &&\n\t\t\t\tthis.utils.typeGuards.isPalette(storedPalette)\n\t\t\t) {\n\t\t\t\tthis.stateManager.addPaletteToHistory(storedPalette);\n\t\t\t\tthis.log(`Stored palette added to history`, 'debug');\n\t\t\t}\n\n\t\t\tconst randomOptions =\n\t\t\t\tthis.utils.palette.getRandomizedPaleteOptions();\n\t\t\tthis.log(\n\t\t\t\t`Generated randomized palette options: ${JSON.stringify(randomOptions)}`,\n\t\t\t\t'debug'\n\t\t\t);\n\n\t\t\tconst newPalette = this.generatePalette(\n\t\t\t\trandomOptions,\n\t\t\t\tthis.common,\n\t\t\t\tthis.generateHues,\n\t\t\t\tthis.generatePaletteFns\n\t\t\t);\n\n\t\t\tthis.stateManager.addPaletteToHistory(newPalette);\n\t\t\tthis.log(`New palette added to history`, 'debug');\n\n\t\t\tawait this.storage.setItem('palette', newPalette);\n\t\t\tthis.log(`New palette stored`, 'debug');\n\n\t\t\tthis.renderPaletteFromState();\n\t\t\tthis.log(`Palette rendered from state`, 'debug');\n\t\t}, 'Failed to load palette');\n\t}\n\n\tpublic async renderNewPalette(): Promise<void> {\n\t\tawait this.errors.handleAsync(async () => {\n\t\t\tconst paletteContainer = this.utils.core.getElement<HTMLDivElement>(\n\t\t\t\tids.divs.paletteContainer\n\t\t\t);\n\n\t\t\tif (!paletteContainer) {\n\t\t\t\tthrow new Error('Palette container not found');\n\t\t\t}\n\n\t\t\t// retrieve palette generation options\n\t\t\tconst options = this.utils.palette.getPaletteOptionsFromUI();\n\t\t\tthis.log(`Palette options: ${JSON.stringify(options)}`, 'debug');\n\n\t\t\t// store the old palette in history\n\t\t\tconst oldPalette = this.stateManager\n\t\t\t\t.getState()\n\t\t\t\t.paletteHistory.at(-1);\n\t\t\tif (oldPalette) this.stateManager.addPaletteToHistory(oldPalette);\n\n\t\t\t// clear the existing palette\n\t\t\tpaletteContainer.innerHTML = '';\n\n\t\t\t// generate a new palette\n\t\t\tconst newPalette = this.generatePalette(\n\t\t\t\toptions,\n\t\t\t\tthis.common,\n\t\t\t\tthis.generateHues,\n\t\t\t\tthis.generatePaletteFns\n\t\t\t);\n\n\t\t\t// ensure valid palette before storing\n\t\t\tif (!this.utils.typeGuards.isPalette(newPalette)) {\n\t\t\t\tthrow new Error('Generated palette is invalid.');\n\t\t\t}\n\n\t\t\tthis.stateManager.addPaletteToHistory(newPalette);\n\t\t\tawait this.storage.setItem('palette', newPalette);\n\n\t\t\t// create and append palette columns\n\t\t\tconst columnWidth = 100 / newPalette.items.length;\n\t\t\tconst validColorSpace = ['hex', 'hsl', 'rgb'].includes(\n\t\t\t\tthis.stateManager.getState().preferences.colorSpace\n\t\t\t)\n\t\t\t\t? this.stateManager.getState().preferences.colorSpace\n\t\t\t\t: 'hex';\n\n\t\t\tconst columns = newPalette.items.map((item, index) => {\n\t\t\t\tconst columnID = index + 1;\n\t\t\t\tconst colorValue =\n\t\t\t\t\titem.css[validColorSpace as keyof PaletteItem['css']] ||\n\t\t\t\t\titem.css.hex;\n\n\t\t\t\tconst column = document.createElement('div');\n\t\t\t\tcolumn.id = `palette-column-${columnID}`;\n\t\t\t\tcolumn.className = 'palette-column';\n\t\t\t\tcolumn.setAttribute('draggable', 'true');\n\t\t\t\tcolumn.style.backgroundColor = colorValue;\n\n\t\t\t\t// add UI elements inside the column\n\t\t\t\tthis.createColumnInUI(column, columnID, colorValue);\n\n\t\t\t\treturn {\n\t\t\t\t\tcolumn,\n\t\t\t\t\tstate: {\n\t\t\t\t\t\tid: columnID,\n\t\t\t\t\t\tisLocked: false,\n\t\t\t\t\t\tposition: columnID,\n\t\t\t\t\t\tsize: columnWidth\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\n\t\t\t// append new columns to the palette container\n\t\t\tcolumns.forEach(({ column }) =>\n\t\t\t\tpaletteContainer.appendChild(column)\n\t\t\t);\n\n\t\t\t// update state with new columns\n\t\t\tthis.stateManager.updatePaletteColumns(\n\t\t\t\tcolumns.map(col => col.state),\n\t\t\t\ttrue,\n\t\t\t\t3\n\t\t\t);\n\t\t}, 'Failed to render a new palette');\n\t}\n\n\tpublic async renderPaletteFromState(): Promise<void> {\n\t\tawait this.errors.handleAsync(async () => {\n\t\t\tawait this.stateManager.ensureStateReady();\n\t\t\tconst paletteContainer = this.utils.core.getElement<HTMLDivElement>(\n\t\t\t\tids.divs.paletteContainer\n\t\t\t);\n\t\t\tif (!paletteContainer) {\n\t\t\t\tthis.log('Palette container not found', 'error');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// clear existing content\n\t\t\tpaletteContainer.innerHTML = '';\n\t\t\t// get the most recent palette from history\n\t\t\tconst currentState = this.stateManager.getState();\n\t\t\tconst latestPalette = currentState.paletteHistory.at(-1);\n\t\t\tif (!latestPalette) {\n\t\t\t\tthis.log(\n\t\t\t\t\t'No saved palettes in history. Cannot render.',\n\t\t\t\t\t'debug'\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// retrieve user's preferred color format\n\t\t\tconst colorSpace = currentState.preferences?.colorSpace || 'hex';\n\t\t\tconst validColorSpace = ['hex', 'hsl', 'rgb'].includes(colorSpace)\n\t\t\t\t? colorSpace\n\t\t\t\t: 'hex';\n\t\t\tconst columnCount = latestPalette.metadata.columnCount;\n\t\t\tconst columnWidth = 100 / columnCount;\n\t\t\tconst columns = latestPalette.items.map((item, index) => {\n\t\t\t\tconst columnID = item.itemID;\n\t\t\t\tconst colorValue =\n\t\t\t\t\titem.css[validColorSpace as keyof PaletteItem['css']] ||\n\t\t\t\t\titem.css.hex;\n\t\t\t\tconst column = document.createElement('div');\n\t\t\t\tcolumn.id = `palette-column-${columnID}`;\n\t\t\t\tcolumn.className = 'palette-column';\n\t\t\t\tcolumn.setAttribute('draggable', 'true');\n\t\t\t\tcolumn.style.backgroundColor = colorValue;\n\t\t\t\t// add UI elements inside the column\n\t\t\t\tthis.createColumnInUI(column, columnID, colorValue);\n\t\t\t\treturn {\n\t\t\t\t\tcolumn,\n\t\t\t\t\tstate: {\n\t\t\t\t\t\tid: columnID,\n\t\t\t\t\t\tisLocked: false,\n\t\t\t\t\t\tposition: index + 1,\n\t\t\t\t\t\tsize: columnWidth\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t\t// Append new columns to the palette container\n\t\t\tcolumns.forEach(({ column }) =>\n\t\t\t\tpaletteContainer.appendChild(column)\n\t\t\t);\n\t\t\t// Update state with new columns\n\t\t\tthis.stateManager.updatePaletteColumns(\n\t\t\t\tcolumns.map(col => col.state),\n\t\t\t\ttrue,\n\t\t\t\t3\n\t\t\t);\n\n\t\t\tthis.stateManager.updatePaletteHistory([latestPalette]);\n\n\t\t\tawait this.storage.setItem('palette', latestPalette);\n\t\t\tthis.log(\n\t\t\t\t`Restored ${columns.length} columns from saved state.`,\n\t\t\t\t'debug'\n\t\t\t);\n\t\t}, 'Failed to render palette from state');\n\t}\n\n\tpublic swapColumns(draggedID: number, targetID: number): void {\n\t\tthis.errors.handle(() => {\n\t\t\tconst currentState = this.stateManager.getState();\n\t\t\tconst columns = [...currentState.paletteContainer.columns];\n\n\t\t\tconst draggedIndex = columns.findIndex(col => col.id === draggedID);\n\t\t\tconst targetIndex = columns.findIndex(col => col.id === targetID);\n\n\t\t\tif (draggedIndex === -1 || targetIndex === -1) {\n\t\t\t\tthis.log(\n\t\t\t\t\t`Failed to swap columns: Column ID ${draggedID} or ${targetID} not found.`,\n\t\t\t\t\t'warn'\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// swap positions in the array\n\t\t\t[columns[draggedIndex].position, columns[targetIndex].position] = [\n\t\t\t\tcolumns[targetIndex].position,\n\t\t\t\tcolumns[draggedIndex].position\n\t\t\t];\n\n\t\t\t// sort the array based on the new positions\n\t\t\tcolumns.sort((a, b) => a.position - b.position);\n\n\t\t\t// update state with new column order\n\t\t\tthis.stateManager.updatePaletteColumns(columns, true, 3);\n\n\t\t\tthis.log(\n\t\t\t\t`Swapped columns ${draggedID} and ${targetID}. New order: ${columns.map(col => col.id).join(', ')}`,\n\t\t\t\t'debug'\n\t\t\t);\n\t\t}, `Failed to swap columns ${draggedID} and ${targetID}`);\n\t}\n\n\tprivate createColumnInUI(\n\t\tcolumn: HTMLElement,\n\t\tcolumnID: number,\n\t\tcolorValue: string\n\t): void {\n\t\tthis.errors.handle(\n\t\t\t() => {\n\t\t\t\tconst currentState = this.stateManager.getState();\n\t\t\t\tconst colorSpace = currentState.preferences.colorSpace;\n\n\t\t\t\tif (!this.utils.validate.userColorInput(colorValue)) {\n\t\t\t\t\tthis.log(\n\t\t\t\t\t\t`Invalid color value: ${colorValue}. Unable to render column UI.`\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst validColorSpace = ['hex', 'hsl', 'rgb'].includes(\n\t\t\t\t\tcolorSpace\n\t\t\t\t)\n\t\t\t\t\t? colorSpace\n\t\t\t\t\t: 'hex';\n\n\t\t\t\tcolumn.style.backgroundColor = colorValue;\n\n\t\t\t\t// create color display input\n\t\t\t\tconst colorDisplay = document.createElement('input');\n\t\t\t\tcolorDisplay.id = `color-display-${columnID}`;\n\t\t\t\tcolorDisplay.className = 'color-display';\n\t\t\t\tcolorDisplay.type = 'text';\n\t\t\t\tcolorDisplay.value = colorValue;\n\t\t\t\tcolorDisplay.setAttribute('data-format', validColorSpace);\n\n\t\t\t\t// create color input button\n\t\t\t\tconst colorInputBtn = document.createElement('button');\n\t\t\t\tcolorInputBtn.id = `color-input-btn-${columnID}`;\n\t\t\t\tcolorInputBtn.className = 'color-input-btn';\n\t\t\t\tcolorInputBtn.textContent = 'Change Color';\n\n\t\t\t\t// create lock button\n\t\t\t\tconst lockBtn = document.createElement('button');\n\t\t\t\tlockBtn.id = `lock-btn-${columnID}`;\n\t\t\t\tlockBtn.className = 'lock-btn';\n\t\t\t\tlockBtn.textContent = 'Lock 🔒';\n\n\t\t\t\t// create drag handle button\n\t\t\t\tconst dragHandle = document.createElement('button');\n\t\t\t\tdragHandle.id = `drag-handle-${columnID}`;\n\t\t\t\tdragHandle.className = 'drag-handle';\n\t\t\t\tdragHandle.textContent = 'Move ☰';\n\n\t\t\t\t// create resize handle\n\t\t\t\tconst resizeHandle = document.createElement('div');\n\t\t\t\tresizeHandle.id = `resize-handle-${columnID}`;\n\t\t\t\tresizeHandle.className = 'resize-handle';\n\n\t\t\t\t// create color input modal\n\t\t\t\tconst colorInputModal = document.createElement('div');\n\t\t\t\tcolorInputModal.id = `color-input-modal-${columnID}`;\n\t\t\t\tcolorInputModal.className = 'color-input-modal hidden';\n\n\t\t\t\t// create color input inside the modal\n\t\t\t\tconst colorInput = document.createElement('input');\n\t\t\t\tcolorInput.id = `color-input-${columnID}`;\n\t\t\t\tcolorInput.className = 'color-input';\n\t\t\t\tcolorInput.type = 'color';\n\t\t\t\tcolorInput.value = colorValue;\n\n\t\t\t\t// append elements to their parent\n\t\t\t\tcolorInputModal.appendChild(colorInput);\n\t\t\t\tcolumn.appendChild(colorDisplay);\n\t\t\t\tcolumn.appendChild(colorInputBtn);\n\t\t\t\tcolumn.appendChild(lockBtn);\n\t\t\t\tcolumn.appendChild(dragHandle);\n\t\t\t\tcolumn.appendChild(resizeHandle);\n\t\t\t\tcolumn.appendChild(colorInputModal);\n\t\t\t},\n\t\t\t'Failed to create column UI elements',\n\t\t\t{ columnID, colorValue }\n\t\t);\n\t}\n}\n"],"names":[],"mappings":"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"}