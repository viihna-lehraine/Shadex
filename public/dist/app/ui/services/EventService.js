// File: app/ui/services/EventServce.js
import { domData } from '../../../data/dom.js';
export class DOMService {
    domData;
    constructor() {
        this.domData = domData;
    }
    updateHistoryUI(history) {
        const historyList = this.domData.elements.static.divs.paletteHistory;
        if (!historyList)
            return;
        historyList.innerHTML = '';
        history.forEach(palette => {
            const entry = document.createElement('div');
            entry.classList.add('history-item');
            entry.id = `palette_${palette.id}`;
            entry.innerHTML = `
				<p>Palette #${palette.metadata.name || palette.id}</p>
				<div class="color-preview">
					${palette.items.map(item => `<span class="color-box" style="background: ${item.colors.css.hex};"></span>`).join(' ')}
				</div>
				<button class="remove-history-item" data-id="${palette.id}-history-remove-btn">Remove</button>
			`;
            entry
                .querySelector('.remove-history-item')
                ?.addEventListener('click', async () => {
                await IDBManager.getInstance().removePaletteFromHistory(palette.id);
                this.updateHistoryUI(await IDBManager.getInstance().getPaletteHistory());
            });
            historyList.appendChild(entry);
        });
    }
    updateColorBox(color, boxId) {
        const colorBox = document.getElementById(boxId);
        if (colorBox) {
            colorBox.style.backgroundColor = this.colorToCSS(color);
        }
    }
    colorToCSS(color) {
        return `hsl(${color.h}, ${color.s}%, ${color.l}%)`;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnRTZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2FwcC91aS9zZXJ2aWNlcy9FdmVudFNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdUNBQXVDO0FBR3ZDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUUvQyxNQUFNLE9BQU8sVUFBVTtJQUNkLE9BQU8sQ0FBbUI7SUFFbEM7UUFDQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN4QixDQUFDO0lBRU0sZUFBZSxDQUFDLE9BQWtCO1FBQ3hDLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBRXJFLElBQUksQ0FBQyxXQUFXO1lBQUUsT0FBTztRQUV6QixXQUFXLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztRQUUzQixPQUFPLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ3pCLE1BQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDNUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDcEMsS0FBSyxDQUFDLEVBQUUsR0FBRyxXQUFXLE9BQU8sQ0FBQyxFQUFFLEVBQUUsQ0FBQztZQUVuQyxLQUFLLENBQUMsU0FBUyxHQUFHO2tCQUNILE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxFQUFFOztPQUU5QyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLDhDQUE4QyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLFlBQVksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7O21EQUV0RSxPQUFPLENBQUMsRUFBRTtJQUN6RCxDQUFDO1lBRUYsS0FBSztpQkFDSCxhQUFhLENBQUMsc0JBQXNCLENBQUM7Z0JBQ3RDLEVBQUUsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLEtBQUssSUFBSSxFQUFFO2dCQUN0QyxNQUFNLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyx3QkFBd0IsQ0FDdEQsT0FBTyxDQUFDLEVBQUUsQ0FDVixDQUFDO2dCQUNGLElBQUksQ0FBQyxlQUFlLENBQ25CLE1BQU0sVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDLGlCQUFpQixFQUFFLENBQ2xELENBQUM7WUFDSCxDQUFDLENBQUMsQ0FBQztZQUVKLFdBQVcsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDaEMsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBRU0sY0FBYyxDQUFDLEtBQVUsRUFBRSxLQUFhO1FBQzlDLE1BQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDaEQsSUFBSSxRQUFRLEVBQUUsQ0FBQztZQUNkLFFBQVEsQ0FBQyxLQUFLLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekQsQ0FBQztJQUNGLENBQUM7SUFFTyxVQUFVLENBQUMsS0FBVTtRQUM1QixPQUFPLE9BQU8sS0FBSyxDQUFDLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNwRCxDQUFDO0NBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiBhcHAvdWkvc2VydmljZXMvRXZlbnRTZXJ2Y2UuanNcblxuaW1wb3J0IHsgRE9NRGF0YUludGVyZmFjZSwgSFNMLCBQYWxldHRlIH0gZnJvbSAnLi4vLi4vLi4vdHlwZXMvaW5kZXguanMnO1xuaW1wb3J0IHsgZG9tRGF0YSB9IGZyb20gJy4uLy4uLy4uL2RhdGEvZG9tLmpzJztcblxuZXhwb3J0IGNsYXNzIERPTVNlcnZpY2Uge1xuXHRwcml2YXRlIGRvbURhdGE6IERPTURhdGFJbnRlcmZhY2U7XG5cblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5kb21EYXRhID0gZG9tRGF0YTtcblx0fVxuXG5cdHB1YmxpYyB1cGRhdGVIaXN0b3J5VUkoaGlzdG9yeTogUGFsZXR0ZVtdKTogdm9pZCB7XG5cdFx0Y29uc3QgaGlzdG9yeUxpc3QgPSB0aGlzLmRvbURhdGEuZWxlbWVudHMuc3RhdGljLmRpdnMucGFsZXR0ZUhpc3Rvcnk7XG5cblx0XHRpZiAoIWhpc3RvcnlMaXN0KSByZXR1cm47XG5cblx0XHRoaXN0b3J5TGlzdC5pbm5lckhUTUwgPSAnJztcblxuXHRcdGhpc3RvcnkuZm9yRWFjaChwYWxldHRlID0+IHtcblx0XHRcdGNvbnN0IGVudHJ5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRlbnRyeS5jbGFzc0xpc3QuYWRkKCdoaXN0b3J5LWl0ZW0nKTtcblx0XHRcdGVudHJ5LmlkID0gYHBhbGV0dGVfJHtwYWxldHRlLmlkfWA7XG5cblx0XHRcdGVudHJ5LmlubmVySFRNTCA9IGBcblx0XHRcdFx0PHA+UGFsZXR0ZSAjJHtwYWxldHRlLm1ldGFkYXRhLm5hbWUgfHwgcGFsZXR0ZS5pZH08L3A+XG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJjb2xvci1wcmV2aWV3XCI+XG5cdFx0XHRcdFx0JHtwYWxldHRlLml0ZW1zLm1hcChpdGVtID0+IGA8c3BhbiBjbGFzcz1cImNvbG9yLWJveFwiIHN0eWxlPVwiYmFja2dyb3VuZDogJHtpdGVtLmNvbG9ycy5jc3MuaGV4fTtcIj48L3NwYW4+YCkuam9pbignICcpfVxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PGJ1dHRvbiBjbGFzcz1cInJlbW92ZS1oaXN0b3J5LWl0ZW1cIiBkYXRhLWlkPVwiJHtwYWxldHRlLmlkfS1oaXN0b3J5LXJlbW92ZS1idG5cIj5SZW1vdmU8L2J1dHRvbj5cblx0XHRcdGA7XG5cblx0XHRcdGVudHJ5XG5cdFx0XHRcdC5xdWVyeVNlbGVjdG9yKCcucmVtb3ZlLWhpc3RvcnktaXRlbScpXG5cdFx0XHRcdD8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc3luYyAoKSA9PiB7XG5cdFx0XHRcdFx0YXdhaXQgSURCTWFuYWdlci5nZXRJbnN0YW5jZSgpLnJlbW92ZVBhbGV0dGVGcm9tSGlzdG9yeShcblx0XHRcdFx0XHRcdHBhbGV0dGUuaWRcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdHRoaXMudXBkYXRlSGlzdG9yeVVJKFxuXHRcdFx0XHRcdFx0YXdhaXQgSURCTWFuYWdlci5nZXRJbnN0YW5jZSgpLmdldFBhbGV0dGVIaXN0b3J5KClcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9KTtcblxuXHRcdFx0aGlzdG9yeUxpc3QuYXBwZW5kQ2hpbGQoZW50cnkpO1xuXHRcdH0pO1xuXHR9XG5cblx0cHVibGljIHVwZGF0ZUNvbG9yQm94KGNvbG9yOiBIU0wsIGJveElkOiBzdHJpbmcpOiB2b2lkIHtcblx0XHRjb25zdCBjb2xvckJveCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGJveElkKTtcblx0XHRpZiAoY29sb3JCb3gpIHtcblx0XHRcdGNvbG9yQm94LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHRoaXMuY29sb3JUb0NTUyhjb2xvcik7XG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSBjb2xvclRvQ1NTKGNvbG9yOiBIU0wpOiBzdHJpbmcge1xuXHRcdHJldHVybiBgaHNsKCR7Y29sb3IuaH0sICR7Y29sb3Iuc30lLCAke2NvbG9yLmx9JSlgO1xuXHR9XG59XG4iXX0=