{"version":3,"file":"format.js","sources":["../../../../../src/core/utils/format.ts"],"sourcesContent":["import {\n\tBrandingUtilities,\n\tColor,\n\tColorSpace,\n\tFormattingUtilities,\n\tHex,\n\tHSL,\n\tNumericBrandedType,\n\tServices,\n\tValidationUtilities\n} from '../../types/index.js';\nimport { defaults } from '../../config/index.js';\n\nconst defaultColors = defaults.colors;\n\nexport function formattingUtilitiesFactory(\n\tbrand: BrandingUtilities,\n\tservices: Services,\n\tvalidate: ValidationUtilities\n): FormattingUtilities {\n\tconst { errors, log } = services;\n\n\tconst parseColor = (colorSpace: ColorSpace, value: string): Color | null =>\n\t\terrors.handleSync(\n\t\t\t() => {\n\t\t\t\tswitch (colorSpace) {\n\t\t\t\t\tcase 'cmyk': {\n\t\t\t\t\t\tconst [c, m, y, k] = parseComponents(value, 5);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\tcyan: brand.asPercentile(c),\n\t\t\t\t\t\t\t\tmagenta: brand.asPercentile(m),\n\t\t\t\t\t\t\t\tyellow: brand.asPercentile(y),\n\t\t\t\t\t\t\t\tkey: brand.asPercentile(k)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tformat: 'cmyk'\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tcase 'hex': {\n\t\t\t\t\t\tconst hexValue = value.startsWith('#')\n\t\t\t\t\t\t\t? value\n\t\t\t\t\t\t\t: `#${value}`;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\thex: brand.asHexSet(hexValue)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tformat: 'hex'\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tcase 'hsl': {\n\t\t\t\t\t\tconst [h, s, l] = parseComponents(value, 4);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\thue: brand.asRadial(h),\n\t\t\t\t\t\t\t\tsaturation: brand.asPercentile(s),\n\t\t\t\t\t\t\t\tlightness: brand.asPercentile(l)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tformat: 'hsl'\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tcase 'hsv': {\n\t\t\t\t\t\tconst [h, s, v] = parseComponents(value, 4);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\thue: brand.asRadial(h),\n\t\t\t\t\t\t\t\tsaturation: brand.asPercentile(s),\n\t\t\t\t\t\t\t\tvalue: brand.asPercentile(v)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tformat: 'hsv'\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tcase 'lab': {\n\t\t\t\t\t\tconst [l, a, b] = parseComponents(value, 4);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\tl: brand.asLAB_L(l),\n\t\t\t\t\t\t\t\ta: brand.asLAB_A(a),\n\t\t\t\t\t\t\t\tb: brand.asLAB_B(b)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tformat: 'lab'\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tcase 'rgb': {\n\t\t\t\t\t\tconst components = value.split(',').map(Number);\n\n\t\t\t\t\t\tif (components.some(isNaN)) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Invalid RGB format for value: ${value}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst [r, g, b] = components;\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\tred: brand.asByteRange(r),\n\t\t\t\t\t\t\t\tgreen: brand.asByteRange(g),\n\t\t\t\t\t\t\t\tblue: brand.asByteRange(b)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tformat: 'rgb'\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tconst message = `Unsupported color format: ${colorSpace}`;\n\t\t\t\t\t\tlog.error(\n\t\t\t\t\t\t\t`Failed to parse color: ${message}`,\n\t\t\t\t\t\t\t`utils.format.parseColor`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'Error parsing color',\n\t\t\t{ context: { colorSpace, value }, fallback: null }\n\t\t);\n\n\tfunction addHashToHex(hex: Hex): Hex {\n\t\treturn errors.handleSync(() => {\n\t\t\treturn hex.value.hex.startsWith('#')\n\t\t\t\t? hex\n\t\t\t\t: {\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\thex: brand.asHexSet(`#${hex.value}}`)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tformat: 'hex' as 'hex'\n\t\t\t\t\t};\n\t\t}, 'Error occurred while adding hash to hex color.');\n\t}\n\n\tfunction componentToHex(component: number): string {\n\t\treturn errors.handleSync(() => {\n\t\t\tconst hex = Math.max(0, Math.min(255, component)).toString(16);\n\n\t\t\treturn hex.length === 1 ? '0' + hex : hex;\n\t\t}, 'Error occurred while converting component to hex partial.');\n\t}\n\n\tfunction convertShortHexToLong(hex: string): string {\n\t\treturn errors.handleSync(() => {\n\t\t\tif (hex.length !== 4) return hex;\n\n\t\t\treturn `#${hex[1]}${hex[1]}${hex[2]}${hex[2]}${hex[3]}${hex[3]}`;\n\t\t}, 'Error occurred while converting short hex to long hex.');\n\t}\n\n\tfunction formatPercentageValues<\n\t\tT extends Record<string, number | NumericBrandedType>\n\t>(\n\t\tvalue: T\n\t): {\n\t\t[K in keyof T]: T[K] extends number | NumericBrandedType\n\t\t\t? `${number}%` | T[K]\n\t\t\t: T[K];\n\t} {\n\t\treturn errors.handleSync(\n\t\t\t() => {\n\t\t\t\treturn Object.entries(value).reduce(\n\t\t\t\t\t(acc, [key, val]) => {\n\t\t\t\t\t\t(acc as Record<string, unknown>)[key] = [\n\t\t\t\t\t\t\t'saturation',\n\t\t\t\t\t\t\t'lightness',\n\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t'cyan',\n\t\t\t\t\t\t\t'magenta',\n\t\t\t\t\t\t\t'yellow',\n\t\t\t\t\t\t\t'key'\n\t\t\t\t\t\t].includes(key)\n\t\t\t\t\t\t\t? `${val as number}%`\n\t\t\t\t\t\t\t: val;\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t},\n\t\t\t\t\t{} as {\n\t\t\t\t\t\t[K in keyof T]: T[K] extends number | NumericBrandedType\n\t\t\t\t\t\t\t? `${number}%` | T[K]\n\t\t\t\t\t\t\t: T[K];\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\t\t\t'Error formatting percentage values',\n\t\t\t{ context: { value } }\n\t\t);\n\t}\n\n\tfunction hslAddFormat(value: HSL['value']): HSL {\n\t\treturn errors.handleSync(() => {\n\t\t\tif (\n\t\t\t\t!validate.colorValue({\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tformat: 'hsl'\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\tlog.error(\n\t\t\t\t\t`Invalid HSL value ${JSON.stringify(value)}`,\n\t\t\t\t\t`utils.format.hslAddFormat`\n\t\t\t\t);\n\n\t\t\t\treturn defaultColors.hsl;\n\t\t\t}\n\n\t\t\treturn { value: value, format: 'hsl' } as HSL;\n\t\t}, 'Error occurred while adding format to HSL value.');\n\t}\n\n\tfunction parseComponents(value: string, count: number): number[] {\n\t\treturn errors.handleSync(() => {\n\t\t\tconst components = value\n\t\t\t\t.split(',')\n\t\t\t\t.map(val =>\n\t\t\t\t\tval.trim().endsWith('%')\n\t\t\t\t\t\t? parseFloat(val)\n\t\t\t\t\t\t: parseFloat(val) * 100\n\t\t\t\t);\n\t\t\tif (components.length !== count) {\n\t\t\t\tlog.error(\n\t\t\t\t\t`Expected ${count} components.`,\n\t\t\t\t\t`utils.format.parseComponents`\n\t\t\t\t);\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn components;\n\t\t}, 'Error occurred while parsing components.');\n\t}\n\n\tfunction stripHashFromHex(hex: Hex): Hex {\n\t\treturn errors.handleSync(() => {\n\t\t\tconst hexString = `${hex.value.hex}`;\n\n\t\t\treturn hex.value.hex.startsWith('#')\n\t\t\t\t? {\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\thex: brand.asHexSet(hexString.slice(1))\n\t\t\t\t\t\t},\n\t\t\t\t\t\tformat: 'hex' as 'hex'\n\t\t\t\t\t}\n\t\t\t\t: hex;\n\t\t}, 'Error occurred while stripping hash from hex color.');\n\t}\n\n\tfunction stripPercentFromValues<T extends Record<string, number | string>>(\n\t\tvalue: T\n\t): { [K in keyof T]: T[K] extends `${number}%` ? number : T[K] } {\n\t\treturn errors.handleSync(\n\t\t\t() => {\n\t\t\t\treturn Object.entries(value).reduce(\n\t\t\t\t\t(acc, [key, val]) => {\n\t\t\t\t\t\tconst parsedValue =\n\t\t\t\t\t\t\ttypeof val === 'string' && val.endsWith('%')\n\t\t\t\t\t\t\t\t? parseFloat(val.slice(0, -1))\n\t\t\t\t\t\t\t\t: val;\n\n\t\t\t\t\t\tacc[key as keyof T] =\n\t\t\t\t\t\t\tparsedValue as T[keyof T] extends `${number}%`\n\t\t\t\t\t\t\t\t? number\n\t\t\t\t\t\t\t\t: T[keyof T];\n\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t},\n\t\t\t\t\t{} as {\n\t\t\t\t\t\t[K in keyof T]: T[K] extends `${number}%`\n\t\t\t\t\t\t\t? number\n\t\t\t\t\t\t\t: T[K];\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\t\t\t'Error occurred while stripping percent from values.',\n\t\t\t{ context: value }\n\t\t);\n\t}\n\n\tconst formattingUtilities: FormattingUtilities = {\n\t\taddHashToHex,\n\t\tcomponentToHex,\n\t\tconvertShortHexToLong,\n\t\tformatPercentageValues,\n\t\thslAddFormat,\n\t\tparseColor,\n\t\tparseComponents,\n\t\tstripHashFromHex,\n\t\tstripPercentFromValues\n\t};\n\n\treturn errors.handleSync(\n\t\t() => formattingUtilities,\n\t\t'Error occurred while creating formatting utilities group.'\n\t);\n}\n"],"names":[],"mappings":"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"}