{"version":3,"file":"LoggerService.js","sources":["../../../../../src/core/services/LoggerService.ts"],"sourcesContent":["import { LoggerContract } from '../../types/index.js';\nimport { config } from '../../config/index.js';\n\nconst caller = 'LoggerService';\nconst mode = config.mode;\nconst debugLevel = mode.debugLevel;\n\nexport class LoggerService implements LoggerContract {\n\tstatic #instance: LoggerService | null = null;\n\n\tprivate constructor() {\n\t\ttry {\n\t\t\tconsole.log(`[${caller}]: Constructing ${caller}.`);\n\t\t} catch (error) {\n\t\t\tthrow new Error(\n\t\t\t\t`[${caller} constructor]: ${error instanceof Error ? error.message : error}`\n\t\t\t);\n\t\t}\n\t}\n\n\tstatic getInstance(): LoggerService {\n\t\ttry {\n\t\t\tif (!LoggerService.#instance) {\n\t\t\t\tLoggerService.#instance = new LoggerService();\n\n\t\t\t\tconsole.log(\n\t\t\t\t\t`[${caller}]: No existing ${caller} instance found. Creating new instance.`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconsole.log(`[${caller}]: Returning LoggerService instance.`);\n\n\t\t\treturn LoggerService.#instance;\n\t\t} catch (error) {\n\t\t\tthrow new Error(\n\t\t\t\t`[${caller}.getInstance]: ${error instanceof Error ? error.message : error}`\n\t\t\t);\n\t\t}\n\t}\n\n\tdebug(message: string, caller: string): void {\n\t\tthis.#logMessage(message, 'debug', caller);\n\t}\n\n\terror(message: string, caller: string): void {\n\t\tthis.#logMessage(message, 'error', caller);\n\t}\n\n\tinfo(message: string, caller: string): void {\n\t\tthis.#logMessage(message, 'info', caller);\n\t}\n\n\twarn(message: string, caller: string): void {\n\t\tthis.#logMessage(message, 'warn', caller);\n\t}\n\n\t#getDebugThreshold(level: 'debug' | 'info' | 'warn' | 'error'): number {\n\t\tswitch (level) {\n\t\t\tcase 'debug':\n\t\t\t\treturn 2;\n\t\t\tcase 'info':\n\t\t\t\treturn 1;\n\t\t\tcase 'warn':\n\t\t\t\treturn 0;\n\t\t\tcase 'error':\n\t\t\t\treturn 0;\n\t\t\tdefault:\n\t\t\t\treturn 0;\n\t\t}\n\t}\n\n\t#getFormattedTimestamp(): string {\n\t\treturn new Date().toLocaleString('en-US', {\n\t\t\tyear: 'numeric',\n\t\t\tmonth: '2-digit',\n\t\t\tday: '2-digit',\n\t\t\thour: '2-digit',\n\t\t\tminute: '2-digit',\n\t\t\tsecond: '2-digit',\n\t\t\thour12: false\n\t\t});\n\t}\n\n\t#getLevelColor(level: 'debug' | 'info' | 'warn' | 'error'): string {\n\t\tswitch (level) {\n\t\t\tcase 'debug':\n\t\t\t\treturn 'color: green';\n\t\t\tcase 'info':\n\t\t\t\treturn 'color: blue';\n\t\t\tcase 'warn':\n\t\t\t\treturn 'color: orange';\n\t\t\tcase 'error':\n\t\t\t\treturn 'color: red';\n\t\t\tdefault:\n\t\t\t\treturn 'color: black';\n\t\t}\n\t}\n\n\t#logMessage(\n\t\tmessage: string,\n\t\tlevel: 'debug' | 'info' | 'warn' | 'error',\n\t\tcaller?: string\n\t): void {\n\t\tif (debugLevel < this.#getDebugThreshold(level)) return;\n\n\t\tconst callerInfo = caller;\n\t\tconst timestamp = this.#getFormattedTimestamp();\n\n\t\ttry {\n\t\t\tconsole.log(\n\t\t\t\t`%c[${level.toUpperCase()}]%c ${timestamp} [${callerInfo}] %c${message}`,\n\t\t\t\tthis.#getLevelColor(level),\n\t\t\t\t'color: gray',\n\t\t\t\t'color: inherit'\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tconsole.error(\n\t\t\t\t`[${caller}.#logMessage]: Encountered an unexpected error: ${error}.`\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tcallerInfo === 'Unknown caller' &&\n\t\t\tdebugLevel > 1 &&\n\t\t\tmode.stackTrace\n\t\t) {\n\t\t\tconsole.trace(`[${caller}]: Full Stack Trace:`);\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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"}