// File: core/factories/helpers.ts
export async function helpersFactory() {
    console.log(`[HELPERS_FACTORY-1]: Creating helpers.`);
    const helpers = {};
    const [{ colorHelpersFactory }, { dataHelpersFactory }, { domHelpersFactory }, { mathHelpersFactory }, { randomHelpersFactory }, { timeHelpersFactory }, { typeguardsFactory }] = await Promise.all([
        import('../helpers/color.js'),
        import('../helpers/data.js'),
        import('../helpers/dom.js'),
        import('../helpers/math.js'),
        import('../helpers/random.js'),
        import('../helpers/time.js'),
        import('../helpers/typeguards.js')
    ]);
    helpers.data = dataHelpersFactory();
    helpers.dom = domHelpersFactory();
    helpers.math = mathHelpersFactory();
    helpers.random = randomHelpersFactory();
    helpers.time = timeHelpersFactory();
    helpers.typeguards = typeguardsFactory();
    helpers.color = colorHelpersFactory(helpers);
    return helpers;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb3JlL2ZhY3Rvcmllcy9oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtDQUFrQztBQUlsQyxNQUFNLENBQUMsS0FBSyxVQUFVLGNBQWM7SUFDbkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO0lBQ3RELE1BQU0sT0FBTyxHQUFHLEVBQWEsQ0FBQztJQUU5QixNQUFNLENBQ0wsRUFBRSxtQkFBbUIsRUFBRSxFQUN2QixFQUFFLGtCQUFrQixFQUFFLEVBQ3RCLEVBQUUsaUJBQWlCLEVBQUUsRUFDckIsRUFBRSxrQkFBa0IsRUFBRSxFQUN0QixFQUFFLG9CQUFvQixFQUFFLEVBQ3hCLEVBQUUsa0JBQWtCLEVBQUUsRUFDdEIsRUFBRSxpQkFBaUIsRUFBRSxDQUNyQixHQUFHLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQztRQUNyQixNQUFNLENBQUMscUJBQXFCLENBQUM7UUFDN0IsTUFBTSxDQUFDLG9CQUFvQixDQUFDO1FBQzVCLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQztRQUMzQixNQUFNLENBQUMsb0JBQW9CLENBQUM7UUFDNUIsTUFBTSxDQUFDLHNCQUFzQixDQUFDO1FBQzlCLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQztRQUM1QixNQUFNLENBQUMsMEJBQTBCLENBQUM7S0FDbEMsQ0FBQyxDQUFDO0lBRUgsT0FBTyxDQUFDLElBQUksR0FBRyxrQkFBa0IsRUFBRSxDQUFDO0lBQ3BDLE9BQU8sQ0FBQyxHQUFHLEdBQUcsaUJBQWlCLEVBQUUsQ0FBQztJQUNsQyxPQUFPLENBQUMsSUFBSSxHQUFHLGtCQUFrQixFQUFFLENBQUM7SUFDcEMsT0FBTyxDQUFDLE1BQU0sR0FBRyxvQkFBb0IsRUFBRSxDQUFDO0lBQ3hDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsa0JBQWtCLEVBQUUsQ0FBQztJQUNwQyxPQUFPLENBQUMsVUFBVSxHQUFHLGlCQUFpQixFQUFFLENBQUM7SUFDekMsT0FBTyxDQUFDLEtBQUssR0FBRyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM3QyxPQUFPLE9BQU8sQ0FBQztBQUNoQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZTogY29yZS9mYWN0b3JpZXMvaGVscGVycy50c1xuXG5pbXBvcnQgeyBIZWxwZXJzIH0gZnJvbSAnLi4vLi4vdHlwZXMvaW5kZXguanMnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGVscGVyc0ZhY3RvcnkoKTogUHJvbWlzZTxIZWxwZXJzPiB7XG5cdGNvbnNvbGUubG9nKGBbSEVMUEVSU19GQUNUT1JZLTFdOiBDcmVhdGluZyBoZWxwZXJzLmApO1xuXHRjb25zdCBoZWxwZXJzID0ge30gYXMgSGVscGVycztcblxuXHRjb25zdCBbXG5cdFx0eyBjb2xvckhlbHBlcnNGYWN0b3J5IH0sXG5cdFx0eyBkYXRhSGVscGVyc0ZhY3RvcnkgfSxcblx0XHR7IGRvbUhlbHBlcnNGYWN0b3J5IH0sXG5cdFx0eyBtYXRoSGVscGVyc0ZhY3RvcnkgfSxcblx0XHR7IHJhbmRvbUhlbHBlcnNGYWN0b3J5IH0sXG5cdFx0eyB0aW1lSGVscGVyc0ZhY3RvcnkgfSxcblx0XHR7IHR5cGVndWFyZHNGYWN0b3J5IH1cblx0XSA9IGF3YWl0IFByb21pc2UuYWxsKFtcblx0XHRpbXBvcnQoJy4uL2hlbHBlcnMvY29sb3IuanMnKSxcblx0XHRpbXBvcnQoJy4uL2hlbHBlcnMvZGF0YS5qcycpLFxuXHRcdGltcG9ydCgnLi4vaGVscGVycy9kb20uanMnKSxcblx0XHRpbXBvcnQoJy4uL2hlbHBlcnMvbWF0aC5qcycpLFxuXHRcdGltcG9ydCgnLi4vaGVscGVycy9yYW5kb20uanMnKSxcblx0XHRpbXBvcnQoJy4uL2hlbHBlcnMvdGltZS5qcycpLFxuXHRcdGltcG9ydCgnLi4vaGVscGVycy90eXBlZ3VhcmRzLmpzJylcblx0XSk7XG5cblx0aGVscGVycy5kYXRhID0gZGF0YUhlbHBlcnNGYWN0b3J5KCk7XG5cdGhlbHBlcnMuZG9tID0gZG9tSGVscGVyc0ZhY3RvcnkoKTtcblx0aGVscGVycy5tYXRoID0gbWF0aEhlbHBlcnNGYWN0b3J5KCk7XG5cdGhlbHBlcnMucmFuZG9tID0gcmFuZG9tSGVscGVyc0ZhY3RvcnkoKTtcblx0aGVscGVycy50aW1lID0gdGltZUhlbHBlcnNGYWN0b3J5KCk7XG5cdGhlbHBlcnMudHlwZWd1YXJkcyA9IHR5cGVndWFyZHNGYWN0b3J5KCk7XG5cdGhlbHBlcnMuY29sb3IgPSBjb2xvckhlbHBlcnNGYWN0b3J5KGhlbHBlcnMpO1xuXHRyZXR1cm4gaGVscGVycztcbn1cbiJdfQ==