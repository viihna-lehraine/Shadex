{"version":3,"file":"data.js","sources":["../../../../../src/core/helpers/data.ts"],"sourcesContent":["// File: core/helpers/data.ts\n\nimport { DataHelpers, TypeGuards } from '../../types/index.js';\nimport { regex } from '../../config/index.js';\n\nexport function dataHelpersFactory(typeGuards: TypeGuards): DataHelpers {\n\tconst { isObject } = typeGuards;\n\n\tfunction deepClone<T>(value: T): T {\n\t\tif (!isObject(value)) return value;\n\n\t\treturn structuredClone(value) as T;\n\t}\n\n\tfunction deepFreeze<T>(obj: T): T {\n\t\tif (!isObject(obj) || Object.isFrozen(obj)) {\n\t\t\treturn obj;\n\t\t}\n\n\t\t(Object.keys(obj) as Array<keyof T>).forEach(key => {\n\t\t\tconst value = obj[key];\n\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\tdeepFreeze(value);\n\t\t\t}\n\t\t});\n\n\t\treturn Object.freeze(obj);\n\t}\n\n\tfunction getCallerInfo(): string {\n\t\tconst error = new Error();\n\t\tconst stackLines = error.stack?.split('\\n') ?? [];\n\n\t\tconst skipPatterns = [\n\t\t\t'getCallerInfo',\n\t\t\t'ErrorHandler',\n\t\t\t'Logger',\n\t\t\t'handleSync',\n\t\t\t'handleAsync',\n\t\t\t'Module._compile',\n\t\t\t'Object.<anonymous>',\n\t\t\t'processTicksAndRejections'\n\t\t];\n\n\t\t// find the first frame that isn't internal\n\t\tconst callerLine = stackLines.find(\n\t\t\tline => !skipPatterns.some(pattern => line.includes(pattern))\n\t\t);\n\n\t\tif (!callerLine) return 'UNKNOWN CALLER';\n\n\t\tfor (const pattern of Object.values(regex.stackTrace)) {\n\t\t\tconst match = callerLine.match(pattern);\n\t\t\tif (match) {\n\t\t\t\tconst functionName = match[1]?.trim() || 'anonymous';\n\t\t\t\tconst fileName = match[3] ?? match[2] ?? 'unknown';\n\t\t\t\tconst lineNumber = match[4] ?? '0';\n\t\t\t\tconst columnNumber = match[5] ?? '0';\n\n\t\t\t\treturn `${functionName} (${fileName}:${lineNumber}:${columnNumber})`;\n\t\t\t}\n\t\t}\n\n\t\treturn 'UNKNOWN CALLER';\n\t}\n\n\tfunction getFormattedTimestamp(): string {\n\t\tconst now = new Date();\n\t\tconst year = now.getFullYear();\n\t\tconst month = String(now.getMonth() + 1).padStart(2, '0');\n\t\tconst day = String(now.getDate()).padStart(2, '0');\n\t\tconst hours = String(now.getHours()).padStart(2, '0');\n\t\tconst minutes = String(now.getMinutes()).padStart(2, '0');\n\t\tconst seconds = String(now.getSeconds()).padStart(2, '0');\n\n\t\treturn `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n\t}\n\n\tfunction parseValue(value: string | number): number {\n\t\treturn typeof value === 'string' && value.endsWith('%')\n\t\t\t? parseFloat(value.slice(0, -1))\n\t\t\t: Number(value);\n\t}\n\n\tasync function tracePromise(\n\t\tpromise: Promise<unknown>,\n\t\tlabel: string\n\t): Promise<unknown> {\n\t\treturn promise\n\t\t\t.then(result => {\n\t\t\t\tconsole.log(`[TRACE SUCCESS] ${label}:`, result);\n\t\t\t\treturn result;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(`[TRACE ERROR] ${label}:`, error);\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\tconst dataHelpers: DataHelpers = {\n\t\tdeepClone,\n\t\tdeepFreeze,\n\t\tgetCallerInfo,\n\t\tgetFormattedTimestamp,\n\t\tparseValue,\n\t\ttracePromise\n\t};\n\n\treturn dataHelpers;\n}\n"],"names":[],"mappings":"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"}