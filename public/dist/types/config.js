// File: types/config.ts
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../src/types/config.ts"],"names":[],"mappings":"AAAA,wBAAwB","sourcesContent":["// File: types/config.ts\n\nimport { sets } from '../config/index.js';\n\nexport interface DOMIndex {\n\treadonly classes: {\n\t\treadonly colorDisplay: string;\n\t\treadonly colorInput: string;\n\t\treadonly colorInputBtn: string;\n\t\treadonly colorInputModal: string;\n\t\treadonly colorStripe: string;\n\t\treadonly colorSwatch: string;\n\t\treadonly dragHandle: string;\n\t\treadonly hidden: string;\n\t\treadonly lockBtn: string;\n\t\treadonly locked: string;\n\t\treadonly modal: string;\n\t\treadonly modalTrigger: string;\n\t\treadonly paletteColumn: string;\n\t\treadonly resizeHandle: string;\n\t\treadonly tooltipContainer: string;\n\t\treadonly tooltipTrigger: string;\n\t};\n\treadonly dynamicIDs: { globalTooltipDiv: string };\n\treadonly ids: {\n\t\treadonly btns: {\n\t\t\treadonly desaturate: string;\n\t\t\treadonly export: string;\n\t\t\treadonly generate: string;\n\t\t\treadonly helpMenu: string;\n\t\t\treadonly historyMenu: string;\n\t\t\treadonly import: string;\n\t\t\treadonly saturate: string;\n\t\t\treadonly showAsCMYK: string;\n\t\t\treadonly showAsHex: string;\n\t\t\treadonly showAsHSL: string;\n\t\t\treadonly showAsHSV: string;\n\t\t\treadonly showAsLAB: string;\n\t\t\treadonly showAsRGB: string;\n\t\t};\n\t\treadonly divs: {\n\t\t\treadonly helpMenu: string;\n\t\t\treadonly historyMenu: string;\n\t\t\treadonly paletteContainer: string;\n\t\t\treadonly paletteHistory: string;\n\t\t};\n\t\treadonly inputs: {\n\t\t\treadonly columnCount: string;\n\t\t\treadonly limitDarkChkbx: string;\n\t\t\treadonly limitGrayChkbx: string;\n\t\t\treadonly limitLightChkbx: string;\n\t\t\treadonly paletteColumn: string;\n\t\t\treadonly paletteType: string;\n\t\t};\n\t};\n}\n\n// ********************************************************\n/// ******************************************************\n//// **************** 2. DOM CONFIGURARTION *************\n/// ******************************************************\n// ********************************************************\n\nexport interface DOMConfig {\n\treadonly btnDebounce: number;\n\treadonly copyButtonTextTimeout: number;\n\treadonly inputDebounce: number;\n\treadonly minColumnSize: 5;\n\treadonly maxColumnSize: 70;\n\treadonly toastTimer: number;\n\treadonly tooltipFadeIn: number;\n\treadonly tooltipFadeOut: number;\n}\n\n// ***********************************************************\n/// *********************************************************\n//// **************** 3. PALETTE CONFIGURARTION *************\n/// *********************************************************\n// ***********************************************************\n\nexport interface ProbabilityProperties {\n\treadonly values: readonly number[];\n\treadonly weights: readonly number[];\n}\n\ninterface PaletteShiftRange {\n\treadonly hue: number;\n\treadonly sat: number;\n\treadonly light: number;\n}\n\nexport interface PaletteConfig {\n\treadonly adjustment: {\n\t\treadonly slaValue: number;\n\t};\n\treadonly probabilities: {\n\t\treadonly base: ProbabilityProperties;\n\t\treadonly chaotic: ProbabilityProperties;\n\t\treadonly soft: ProbabilityProperties;\n\t\treadonly strong: ProbabilityProperties;\n\t};\n\treadonly shiftRanges: Record<PaletteType, PaletteShiftRange>;\n\treadonly thresholds: {\n\t\treadonly dark: number;\n\t\treadonly gray: number;\n\t\treadonly light: number;\n\t};\n}\n\n// ****************************************************\n/// **************************************************\n//// ************ 5. ENVIRONMENT DATA ***************\n/// **************************************************\n// ****************************************************\n\nexport interface Environment {\n\treadonly app: {\n\t\treadonly historyLimit: number;\n\t\treadonly paletteHistoryLimit: number;\n\t};\n\treadonly idb: {\n\t\treadonly maxReadyAttempts: number;\n\t\treadonly retryDelay: number;\n\t};\n\treadonly mutex: {\n\t\treadonly contentionHistoryLimit: number;\n\t\treadonly timeout: number;\n\t};\n\treadonly observer: {\n\t\treadonly debounce: number;\n\t};\n\treadonly state: {\n\t\treadonly maxReadyAttempts: number;\n\t\treadonly maxSaveRetries: number;\n\t\treadonly readyTimeout: number;\n\t\treadonly saveThrottleDelay: number;\n\t};\n}\n\n// *******************************************************\n/// *****************************************************\n//// **************** 6. FEATURE FLAGS *****************\n/// *****************************************************\n// *******************************************************\n\nexport interface FeatureFlags {\n\treadonly loadStateFromStorage: boolean;\n}\n\n// ****************************************************\n/// **************************************************\n//// ******************* 7. REGEX *******************\n/// **************************************************\n// ****************************************************\n\nexport interface RegexConfig {\n\treadonly brand: { readonly hex: RegExp };\n\treadonly colors: {\n\t\treadonly cmyk: RegExp;\n\t\treadonly hex: RegExp;\n\t\treadonly hsl: RegExp;\n\t\treadonly hsv: RegExp;\n\t\treadonly lab: RegExp;\n\t\treadonly rgb: RegExp;\n\t\treadonly xyz: RegExp;\n\t};\n\treadonly css: {\n\t\treadonly cmyk: RegExp;\n\t\treadonly hsl: RegExp;\n\t\treadonly hsv: RegExp;\n\t\treadonly lab: RegExp;\n\t\treadonly rgb: RegExp;\n\t\treadonly xyz: RegExp;\n\t};\n\treadonly dom: {\n\t\treadonly hex: RegExp;\n\t\treadonly hsl: RegExp;\n\t\treadonly rgb: RegExp;\n\t};\n\treadonly stackTrace: {\n\t\treadonly anon: RegExp;\n\t\treadonly chrome: RegExp;\n\t\treadonly electron: RegExp;\n\t\treadonly fallback: RegExp;\n\t\treadonly firefox: RegExp;\n\t\treadonly node: RegExp;\n\t\treadonly safari: RegExp;\n\t\treadonly workers: RegExp;\n\t};\n\treadonly userInput: {\n\t\treadonly hex: RegExp;\n\t\treadonly hsl: RegExp;\n\t\treadonly rgb: RegExp;\n\t};\n\treadonly validation: {\n\t\treadonly hex: RegExp;\n\t\treadonly hexComponent: RegExp;\n\t};\n}\n\nexport interface Configuration {\n\treadonly math: {\n\t\treadonly epsilon: number;\n\t\treadonly maxXYZ_X: number;\n\t\treadonly maxXYZ_Y: number;\n\t\treadonly maxXYZ_Z: number;\n\t\treadonly minXYZ_X: number;\n\t\treadonly minXYZ_Y: number;\n\t\treadonly minXYZ_Z: number;\n\t};\n\treadonly mode: {\n\t\treadonly debugLevel: 0 | 1 | 2 | 3 | 4 | 5;\n\t\treadonly env: 'dev' | 'prod' | 'test';\n\t\treadonly exposeClasses: boolean;\n\t\treadonly log: {\n\t\t\treadonly debug: boolean;\n\t\t\treadonly error: boolean;\n\t\t\treadonly info: boolean;\n\t\t\treadonly verbosity: 0 | 1 | 2 | 3 | 4 | 5;\n\t\t\treadonly warn: boolean;\n\t\t};\n\t\treadonly logExecution: {\n\t\t\treadonly deepClone: boolean;\n\t\t};\n\t\treadonly showAlerts: boolean;\n\t\treadonly stackTrace: boolean;\n\t};\n\treadonly storage: {\n\t\treadonly idbDBName: string;\n\t\treadonly idbDefaultVersion: number;\n\t\treadonly idbStoreName: string;\n\t};\n}\n\nexport interface Defaults {\n\treadonly colors: {\n\t\treadonly cmyk: CMYK;\n\t\treadonly hex: Hex;\n\t\treadonly hsl: HSL;\n\t\treadonly hsv: HSV;\n\t\treadonly lab: LAB;\n\t\treadonly rgb: RGB;\n\t\treadonly sl: SL;\n\t\treadonly sv: SV;\n\t\treadonly xyz: XYZ;\n\t\treadonly cmykNum: CMYKNumMap;\n\t\treadonly hslNum: HSLNumMap;\n\t\treadonly hsvNum: HSVNumMap;\n\t\treadonly labNum: LABNumMap;\n\t\treadonly rgbNum: RGBNumMap;\n\t\treadonly slNum: SLNumMap;\n\t\treadonly svNum: SVNumMap;\n\t\treadonly xyzNum: XYZNumMap;\n\t\treadonly cmykString: CMYKStringMap;\n\t\treadonly hexString: HexStringMap;\n\t\treadonly hslString: HSLStringMap;\n\t\treadonly hsvString: HSVStringMap;\n\t\treadonly labString: LABStringMap;\n\t\treadonly rgbString: RGBStringMap;\n\t\treadonly slString: SLStringMap;\n\t\treadonly svString: SVStringMap;\n\t\treadonly xyzString: XYZStringMap;\n\t\treadonly cmykCSS: string;\n\t\treadonly hexCSS: string;\n\t\treadonly hslCSS: string;\n\t\treadonly hsvCSS: string;\n\t\treadonly labCSS: string;\n\t\treadonly rgbCSS: string;\n\t\treadonly slCSS: string;\n\t\treadonly svCSS: string;\n\t\treadonly xyzCSS: string;\n\t};\n\treadonly mutation: MutationLog;\n\treadonly palette: Palette;\n\treadonly paletteItem: PaletteItem;\n\treadonly paletteOptions: SelectedPaletteOptions;\n\treadonly state: State;\n\treadonly unbrandedPalette: UnbrandedPalette;\n\treadonly unbrandedPaletteItem: UnbrandedPaletteItem;\n}\n\nexport type MathData = Configuration['math'];\n\nexport type ModeData = Configuration['mode'];\n\nexport interface SetsData {\n\treadonly ByteRange: readonly [0, 255];\n\treadonly HexSet: 'HexSet';\n\treadonly LAB_L: readonly [0, 100];\n\treadonly LAB_A: readonly [-128, 127];\n\treadonly LAB_B: readonly [-128, 127];\n\treadonly Percentile: readonly [0, 100];\n\treadonly Radial: readonly [0, 360];\n\treadonly XYZ_X: readonly [number, number];\n\treadonly XYZ_Y: readonly [number, number];\n\treadonly XYZ_Z: readonly [number, number];\n}\n\nexport type StorageData = Configuration['storage'];\n\n// ***************************************************************\n/// *************************************************************\n//// ******************* 7. SET DECLARATIONS *******************\n/// *************************************************************\n// ***************************************************************\n\nexport type ByteRange = number & { __brand: 'ByteRange' };\n\nexport type HexSet = string & { __brand: 'HexSet' };\n\nexport type LAB_L = number & { __brand: 'LAB_L' };\n\nexport type LAB_A = number & { __brand: 'LAB_A' };\n\nexport type LAB_B = number & { __brand: 'LAB_B' };\n\nexport type Percentile = number & { __brand: 'Percentile' };\n\nexport type Radial = number & { __brand: 'Radial' };\n\nexport type XYZ_X = number & { __brand: 'XYZ_X' };\n\nexport type XYZ_Y = number & { __brand: 'XYZ_Y' };\n\nexport type XYZ_Z = number & { __brand: 'XYZ_Z' };\n\nexport type RangeKeyMap = {\n\treadonly ByteRange: ByteRange;\n\treadonly HexSet: HexSet;\n\treadonly LAB_L: LAB_L;\n\treadonly LAB_A: LAB_A;\n\treadonly LAB_B: LAB_B;\n\treadonly Percentile: Percentile;\n\treadonly Radial: Radial;\n\treadonly XYZ_X: XYZ_X;\n\treadonly XYZ_Y: XYZ_Y;\n\treadonly XYZ_Z: XYZ_Z;\n};\n\nexport type ColorValueRange = RangeKeyMap[keyof RangeKeyMap];\n\nexport type NumericRangeKey = {\n\t[K in keyof typeof sets]: (typeof sets)[K] extends [number, number]\n\t\t? K\n\t\t: never;\n}[keyof typeof sets & string];\n\nexport type NumericBrandedType =\n\t| ByteRange\n\t| LAB_A\n\t| LAB_B\n\t| LAB_L\n\t| Percentile\n\t| Radial\n\t| XYZ_X\n\t| XYZ_Y\n\t| XYZ_Z;\n\nexport type Sets = typeof sets;\n\n// *********************************************************\n/// *******************************************************\n//// ***************** 8. BRANDED COLORS *****************\n/// *******************************************************\n// *********************************************************\n\nexport type CMYK = {\n\tvalue: {\n\t\tcyan: Percentile;\n\t\tmagenta: Percentile;\n\t\tyellow: Percentile;\n\t\tkey: Percentile;\n\t};\n\tformat: 'cmyk';\n};\n\nexport type Hex = {\n\tvalue: { hex: HexSet };\n\tformat: 'hex';\n};\n\nexport type HSL = {\n\tvalue: { hue: Radial; saturation: Percentile; lightness: Percentile };\n\tformat: 'hsl';\n};\n\nexport type HSV = {\n\tvalue: { hue: Radial; saturation: Percentile; value: Percentile };\n\tformat: 'hsv';\n};\n\nexport type LAB = {\n\tvalue: { l: LAB_L; a: LAB_A; b: LAB_B };\n\tformat: 'lab';\n};\n\nexport type RGB = {\n\tvalue: { red: ByteRange; green: ByteRange; blue: ByteRange };\n\tformat: 'rgb';\n};\n\nexport type SL = {\n\tvalue: { saturation: Percentile; lightness: Percentile };\n\tformat: 'sl';\n};\n\nexport type SV = {\n\tvalue: { saturation: Percentile; value: Percentile };\n\tformat: 'sv';\n};\n\nexport type XYZ = {\n\tvalue: { x: XYZ_X; y: XYZ_Y; z: XYZ_Z };\n\tformat: 'xyz';\n};\n\n// *********************************************************************\n/// *******************************************************************\n//// ******** 9. COLORS (UNBRANDED PROPERTIES AS STRINGS) ************\n/// *******************************************************************\n// *********************************************************************\n\nexport type CMYKStringMap = {\n\tvalue: { cyan: string; magenta: string; yellow: string; key: string };\n\tformat: 'cmyk';\n};\n\nexport type HexStringMap = {\n\tvalue: { hex: string };\n\tformat: 'hex';\n};\n\nexport type HSLStringMap = {\n\tvalue: { hue: string; saturation: string; lightness: string };\n\tformat: 'hsl';\n};\n\nexport type HSVStringMap = {\n\tvalue: { hue: string; saturation: string; value: string };\n\tformat: 'hsv';\n};\n\nexport type LABStringMap = {\n\tvalue: { l: string; a: string; b: string };\n\tformat: 'lab';\n};\n\nexport type RGBStringMap = {\n\tvalue: { red: string; green: string; blue: string };\n\tformat: 'rgb';\n};\n\nexport type SLStringMap = {\n\tvalue: { saturation: string; lightness: string };\n\tformat: 'sl';\n};\n\nexport type SVStringMap = {\n\tvalue: { saturation: string; value: string };\n\tformat: 'sv';\n};\n\nexport type XYZStringMap = {\n\tvalue: { x: string; y: string; z: string };\n\tformat: 'xyz';\n};\n\n// **********************************************************************\n/// ********************************************************************\n//// ************ 10. COLORS (UNBRANDED NUMERIC PROPERTIES) ***********\n/// ********************************************************************\n// **********************************************************************\n\nexport type CMYKNumMap = {\n\tvalue: { cyan: number; magenta: number; yellow: number; key: number };\n\tformat: 'cmyk';\n};\n\nexport type HexNumMap = {\n\tvalue: { hex: string };\n\tformat: 'hex';\n};\n\nexport type HSLNumMap = {\n\tvalue: { hue: number; saturation: number; lightness: number };\n\tformat: 'hsl';\n};\n\nexport type HSVNumMap = {\n\tvalue: { hue: number; saturation: number; value: number };\n\tformat: 'hsv';\n};\n\nexport type LABNumMap = {\n\tvalue: { l: number; a: number; b: number };\n\tformat: 'lab';\n};\n\nexport type RGBNumMap = {\n\tvalue: { red: number; green: number; blue: number };\n\tformat: 'rgb';\n};\n\nexport type SLNumMap = {\n\tvalue: { saturation: number; lightness: number };\n\tformat: 'sl';\n};\n\nexport type SVNumMap = {\n\tvalue: { saturation: number; value: number };\n\tformat: 'sv';\n};\n\nexport type XYZNumMap = {\n\tvalue: {\n\t\tx: number;\n\t\ty: number;\n\t\tz: number;\n\t};\n\tformat: 'xyz';\n};\n\n// ***********************************************************************\n/// *********************************************************************\n//// ************ 11. COMPOSITE COLOR INTERFACES AND TYPES *************\n/// *********************************************************************\n// ***********************************************************************\n\nexport interface AllColors {\n\tcmyk: CMYK;\n\thex: Hex;\n\thsl: HSL;\n\thsv: HSV;\n\tlab: LAB;\n\trgb: RGB;\n\tsl: SL;\n\tsv: SV;\n\txyz: XYZ;\n}\n\nexport type Color = CMYK | Hex | HSL | HSV | LAB | RGB | SL | SV | XYZ;\n\nexport interface ColorData {\n\tcmyk?: CMYK;\n\thex?: Hex;\n\thsl?: HSL;\n\thsv?: HSV;\n\tlab?: LAB;\n\trgb?: RGB;\n\txyz?: XYZ;\n}\n\nexport interface ColorDataAssertion {\n\tcmyk: CMYK;\n\thex: Hex;\n\thsl: HSL;\n\thsv: HSV;\n\tlab: LAB;\n\trgb: RGB;\n\txyz: XYZ;\n}\n\nexport interface ColorDataExtended extends ColorData {\n\tsl?: SL;\n\tsv?: SV;\n}\n\nexport type ColorFormat =\n\t| 'cmyk'\n\t| 'hex'\n\t| 'hsl'\n\t| 'hsv'\n\t| 'lab'\n\t| 'rgb'\n\t| 'sl'\n\t| 'sv'\n\t| 'xyz';\n\nexport type ColorFormatMap = {\n\tcmyk: CMYK;\n\thex: Hex;\n\thsl: HSL;\n\thsv: HSV;\n\tlab: LAB;\n\trgb: RGB;\n\tsl: SL;\n\tsv: SV;\n\txyz: XYZ;\n};\n\nexport type ColorSpace = 'cmyk' | 'hex' | 'hsl' | 'hsv' | 'lab' | 'rgb' | 'xyz';\n\nexport type ColorSpaceExtended = ColorSpace | 'sl' | 'sv';\n\nexport type ColorStringMap =\n\t| CMYKStringMap\n\t| HexStringMap\n\t| HSLStringMap\n\t| HSVStringMap\n\t| LABStringMap\n\t| RGBStringMap\n\t| SLStringMap\n\t| SVStringMap\n\t| XYZStringMap;\n\nexport type ColorNumMap =\n\t| CMYKNumMap\n\t| HexNumMap\n\t| HSLNumMap\n\t| HSVNumMap\n\t| LABNumMap\n\t| RGBNumMap\n\t| SLNumMap\n\t| SVNumMap\n\t| XYZNumMap;\n\n// *****************************************************************\n/// ***************************************************************\n//// ******** 12. OTHER APPLICATION TYPES AND INTERFACES *********\n/// ***************************************************************\n// *****************************************************************\n\nexport interface ColorInputElement extends HTMLInputElement {\n\tcolorValues?: Color;\n}\n\nexport type History = State[];\n\nexport interface MutationLog {\n\ttimestamp: string;\n\tkey: string;\n\taction: 'add' | 'delete' | 'update';\n\tnewValue: unknown;\n\toldValue: unknown;\n\torigin: string;\n}\n\nexport interface Palette {\n\tid: string;\n\titems: PaletteItem[];\n\tmetadata: {\n\t\tname?: string;\n\t\tcolumnCount: number;\n\t\tlimitDark: boolean;\n\t\tlimitGray: boolean;\n\t\tlimitLight: boolean;\n\t\ttimestamp: string;\n\t\ttype: PaletteType;\n\t};\n}\n\nexport type PaletteType =\n\t| 'analogous'\n\t| 'complementary'\n\t| 'custom'\n\t| 'diadic'\n\t| 'monochromatic'\n\t| 'hexadic'\n\t| 'random'\n\t| 'splitComplementary'\n\t| 'tetradic'\n\t| 'triadic';\n\nexport interface PaletteItem {\n\titemID: number;\n\tcolors: {\n\t\tcmyk: CMYK['value'];\n\t\thex: Hex['value'];\n\t\thsl: HSL['value'];\n\t\thsv: HSV['value'];\n\t\tlab: LAB['value'];\n\t\trgb: RGB['value'];\n\t\txyz: XYZ['value'];\n\t};\n\tcss: {\n\t\tcmyk: string;\n\t\thex: string;\n\t\thsl: string;\n\t\thsv: string;\n\t\tlab: string;\n\t\trgb: string;\n\t\txyz: string;\n\t};\n}\n\nexport interface SelectedPaletteOptions {\n\tcolumnCount: number;\n\tdistributionType: keyof PaletteConfig['probabilities'];\n\tlimitDark: boolean;\n\tlimitGray: boolean;\n\tlimitLight: boolean;\n\tpaletteType: PaletteType;\n}\n\nexport type AppModeData = 'dev' | 'prod';\n\nexport interface State {\n\treadonly appMode: 'edit' | 'export' | 'preview';\n\treadonly paletteContainer: {\n\t\treadonly columns: {\n\t\t\treadonly id: number;\n\t\t\treadonly isLocked: boolean;\n\t\t\treadonly position: number;\n\t\t\treadonly size: number;\n\t\t}[];\n\t};\n\treadonly preferences: {\n\t\treadonly colorSpace: ColorSpace;\n\t\treadonly distributionType: keyof PaletteConfig['probabilities'];\n\t\treadonly maxHistory: number;\n\t\treadonly maxPaletteHistory: number;\n\t\treadonly theme: 'light' | 'dark';\n\t};\n\treadonly selections: {\n\t\treadonly paletteColumnCount: number;\n\t\treadonly paletteType: PaletteType;\n\t\treadonly targetedColumnPosition: number;\n\t};\n\treadonly timestamp: string;\n\treadonly [key: string]: unknown;\n}\n\nexport interface UnbrandedPaletteItem {\n\titemID: number;\n\tcolors: {\n\t\tcmyk: CMYKNumMap['value'];\n\t\thex: HexNumMap['value'];\n\t\thsl: HSLNumMap['value'];\n\t\thsv: HSVNumMap['value'];\n\t\tlab: LABNumMap['value'];\n\t\trgb: RGBNumMap['value'];\n\t\txyz: XYZNumMap['value'];\n\t};\n\tcss: {\n\t\tcmyk: string;\n\t\thex: string;\n\t\thsl: string;\n\t\thsv: string;\n\t\tlab: string;\n\t\trgb: string;\n\t\txyz: string;\n\t};\n}\n\nexport interface UnbrandedPalette {\n\tid: string;\n\titems: UnbrandedPaletteItem[];\n\tmetadata: {\n\t\tname?: string;\n\t\tcolumnCount: number;\n\t\tlimitDark: boolean;\n\t\tlimitGray: boolean;\n\t\tlimitLight: boolean;\n\t\ttimestamp: string;\n\t\ttype: PaletteType;\n\t};\n}\n\n// ******************************************************************\n/// ****************************************************************\n//// ********************* 13. GENERICS ***************************\n/// ****************************************************************\n// ******************************************************************\n\n// ***********************************************************\n/// *********************************************************\n//// ******************* 14. DOM ELEMENTS *******************\n/// *********************************************************\n// ***********************************************************\n\nexport interface UnvalidatedDOMElements {\n\tbtns: {\n\t\tdesaturate: HTMLButtonElement | null;\n\t\texport: HTMLButtonElement | null;\n\t\tgenerate: HTMLButtonElement | null;\n\t\thelpMenu: HTMLButtonElement | null;\n\t\thistoryMenu: HTMLButtonElement | null;\n\t\timport: HTMLButtonElement | null;\n\t\tsaturate: HTMLButtonElement | null;\n\t\tshowAsCMYK: HTMLButtonElement | null;\n\t\tshowAsHex: HTMLButtonElement | null;\n\t\tshowAsHSL: HTMLButtonElement | null;\n\t\tshowAsHSV: HTMLButtonElement | null;\n\t\tshowAsLAB: HTMLButtonElement | null;\n\t\tshowAsRGB: HTMLButtonElement | null;\n\t};\n\tdivs: {\n\t\thelpMenu: HTMLDivElement | null;\n\t\thistoryMenu: HTMLDivElement | null;\n\t\tpaletteContainer: HTMLDivElement | null;\n\t\tpaletteHistory: HTMLDivElement | null;\n\t};\n\tinputs: {\n\t\tcolumnCount: HTMLInputElement | null;\n\t\tlimitDarkChkbx: HTMLInputElement | null;\n\t\tlimitGrayChkbx: HTMLInputElement | null;\n\t\tlimitLightChkbx: HTMLInputElement | null;\n\t\tpaletteColumn: HTMLInputElement | null;\n\t\tpaletteType: HTMLInputElement | null;\n\t};\n}\n\nexport interface DOMElements {\n\tbtns: {\n\t\tdesaturate: HTMLButtonElement;\n\t\texport: HTMLButtonElement;\n\t\tgenerate: HTMLButtonElement;\n\t\thelpMenu: HTMLButtonElement;\n\t\thistoryMenu: HTMLButtonElement;\n\t\timport: HTMLButtonElement;\n\t\tsaturate: HTMLButtonElement;\n\t\tshowAsCMYK: HTMLButtonElement;\n\t\tshowAsHex: HTMLButtonElement;\n\t\tshowAsHSL: HTMLButtonElement;\n\t\tshowAsHSV: HTMLButtonElement;\n\t\tshowAsLAB: HTMLButtonElement;\n\t\tshowAsRGB: HTMLButtonElement;\n\t};\n\tdivs: {\n\t\thelpMenu: HTMLDivElement;\n\t\thistoryMenu: HTMLDivElement;\n\t\tpaletteContainer: HTMLDivElement;\n\t\tpaletteHistory: HTMLDivElement;\n\t};\n\tinputs: {\n\t\tcolumnCount: HTMLInputElement;\n\t\tlimitDarkChkbx: HTMLInputElement;\n\t\tlimitGrayChkbx: HTMLInputElement;\n\t\tlimitLightChkbx: HTMLInputElement;\n\t\tpaletteColumn: HTMLInputElement;\n\t\tpaletteType: HTMLInputElement;\n\t};\n}\n"]}