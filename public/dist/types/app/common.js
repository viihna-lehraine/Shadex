// File: types/app/common.js
import { dataSets as sets } from '../../data/sets.js';
const _sets = sets;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3R5cGVzL2FwcC9jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEJBQTRCO0FBdUQ1QixPQUFPLEVBQUUsUUFBUSxJQUFJLElBQUksRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXRELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGU6IHR5cGVzL2FwcC9jb21tb24uanNcblxuaW1wb3J0IHtcblx0Qnl0ZVJhbmdlLFxuXHRDTVlLLFxuXHRDTVlLX1N0cmluZ1Byb3BzLFxuXHRDb2xvcixcblx0Q29sb3JEYXRhRXh0ZW5kZWQsXG5cdENvbG9yRGF0YUFzc2VydGlvbixcblx0Q29sb3JGb3JtYXQsXG5cdENvbG9yU3BhY2UsXG5cdENvbG9yU3BhY2VFeHRlbmRlZCxcblx0Q29sb3JfU3RyaW5nUHJvcHMsXG5cdEhleCxcblx0SGV4U2V0LFxuXHRIZXhfU3RyaW5nUHJvcHMsXG5cdEhTTCxcblx0SFNMX1N0cmluZ1Byb3BzLFxuXHRIU1YsXG5cdEhTVl9TdHJpbmdQcm9wcyxcblx0TEFCLFxuXHRMQUJfU3RyaW5nUHJvcHMsXG5cdExBQl9MLFxuXHRMQUJfQSxcblx0TEFCX0IsXG5cdE51bWVyaWNSYW5nZUtleSxcblx0UGFsZXR0ZSxcblx0UGFsZXR0ZUl0ZW0sXG5cdFBlcmNlbnRpbGUsXG5cdFJhZGlhbCxcblx0UmFuZ2VLZXlNYXAsXG5cdFJHQixcblx0UkdCX1N0cmluZ1Byb3BzLFxuXHRTTCxcblx0U0xfU3RyaW5nUHJvcHMsXG5cdFN0b3JlZFBhbGV0dGUsXG5cdFNWLFxuXHRTVl9TdHJpbmdQcm9wcyxcblx0VW5icmFuZGVkQ01ZSyxcblx0VW5icmFuZGVkQ29sb3IsXG5cdFVuYnJhbmRlZEhleCxcblx0VW5icmFuZGVkSFNMLFxuXHRVbmJyYW5kZWRIU1YsXG5cdFVuYnJhbmRlZExBQixcblx0VW5icmFuZGVkUGFsZXR0ZSxcblx0VW5icmFuZGVkUkdCLFxuXHRVbmJyYW5kZWRTTCxcblx0VW5icmFuZGVkU1YsXG5cdFVuYnJhbmRlZFhZWixcblx0WFlaLFxuXHRYWVpfU3RyaW5nUHJvcHMsXG5cdFhZWl9YLFxuXHRYWVpfWSxcblx0WFlaX1pcbn0gZnJvbSAnLi4vaW5kZXguanMnO1xuaW1wb3J0IHsgZGF0YVNldHMgYXMgc2V0cyB9IGZyb20gJy4uLy4uL2RhdGEvc2V0cy5qcyc7XG5cbmNvbnN0IF9zZXRzID0gc2V0cztcblxuZXhwb3J0IGludGVyZmFjZSBDb21tb25Gbl9NYXN0ZXJJbnRlcmZhY2Uge1xuXHRjb252ZXJ0OiB7XG5cdFx0aHNsVG8oY29sb3I6IEhTTCwgY29sb3JTcGFjZTogQ29sb3JTcGFjZUV4dGVuZGVkKTogQ29sb3I7XG5cdFx0dG9IU0woY29sb3I6IEV4Y2x1ZGU8Q29sb3IsIFNMIHwgU1Y+KTogSFNMO1xuXHRcdHdyYXBwZXJzOiB7XG5cdFx0XHRoZXhUb0hTTChpbnB1dDogc3RyaW5nIHwgSGV4KTogSFNMO1xuXHRcdH07XG5cdH07XG5cdGNvcmU6IHtcblx0XHRiYXNlOiB7XG5cdFx0XHRjbGFtcFRvUmFuZ2UodmFsdWU6IG51bWJlciwgcmFuZ2VLZXk6IE51bWVyaWNSYW5nZUtleSk6IG51bWJlcjtcblx0XHRcdGNsb25lPFQ+KHZhbHVlOiBUKTogVDtcblx0XHRcdGRlYm91bmNlPFQgZXh0ZW5kcyAoLi4uYXJnczogUGFyYW1ldGVyczxUPikgPT4gdm9pZD4oXG5cdFx0XHRcdGZ1bmM6IFQsXG5cdFx0XHRcdGRlbGF5OiBudW1iZXJcblx0XHRcdCk6ICguLi5hcmdzOiBQYXJhbWV0ZXJzPFQ+KSA9PiB2b2lkO1xuXHRcdFx0cGFyc2VDdXN0b21Db2xvcihyYXdWYWx1ZTogc3RyaW5nKTogSFNMIHwgbnVsbDtcblx0XHR9O1xuXHRcdGJyYW5kOiB7XG5cdFx0XHRhc0JyYW5kZWQ8VCBleHRlbmRzIGtleW9mIFJhbmdlS2V5TWFwPihcblx0XHRcdFx0dmFsdWU6IG51bWJlcixcblx0XHRcdFx0cmFuZ2VLZXk6IFRcblx0XHRcdCk6IFJhbmdlS2V5TWFwW1RdO1xuXHRcdFx0YXNCeXRlUmFuZ2UodmFsdWU6IG51bWJlcik6IEJ5dGVSYW5nZTtcblx0XHRcdGFzSGV4U2V0KHZhbHVlOiBzdHJpbmcpOiBIZXhTZXQ7XG5cdFx0XHRhc0xBQl9MKHZhbHVlOiBudW1iZXIpOiBMQUJfTDtcblx0XHRcdGFzTEFCX0EodmFsdWU6IG51bWJlcik6IExBQl9BO1xuXHRcdFx0YXNMQUJfQih2YWx1ZTogbnVtYmVyKTogTEFCX0I7XG5cdFx0XHRhc1BlcmNlbnRpbGUodmFsdWU6IG51bWJlcik6IFBlcmNlbnRpbGU7XG5cdFx0XHRhc1JhZGlhbCh2YWx1ZTogbnVtYmVyKTogUmFkaWFsO1xuXHRcdFx0YXNYWVpfWCh2YWx1ZTogbnVtYmVyKTogWFlaX1g7XG5cdFx0XHRhc1hZWl9ZKHZhbHVlOiBudW1iZXIpOiBYWVpfWTtcblx0XHRcdGFzWFlaX1oodmFsdWU6IG51bWJlcik6IFhZWl9aO1xuXHRcdH07XG5cdFx0YnJhbmRDb2xvcjoge1xuXHRcdFx0YXNDTVlLKGNvbG9yOiBVbmJyYW5kZWRDTVlLKTogQ01ZSztcblx0XHRcdGFzSGV4KGNvbG9yOiBVbmJyYW5kZWRIZXgpOiBIZXg7XG5cdFx0XHRhc0hTTChjb2xvcjogVW5icmFuZGVkSFNMKTogSFNMO1xuXHRcdFx0YXNIU1YoY29sb3I6IFVuYnJhbmRlZEhTVik6IEhTVjtcblx0XHRcdGFzTEFCKGNvbG9yOiBVbmJyYW5kZWRMQUIpOiBMQUI7XG5cdFx0XHRhc1JHQihjb2xvcjogVW5icmFuZGVkUkdCKTogUkdCO1xuXHRcdFx0YXNTTChjb2xvcjogVW5icmFuZGVkU0wpOiBTTDtcblx0XHRcdGFzU1YoY29sb3I6IFVuYnJhbmRlZFNWKTogU1Y7XG5cdFx0XHRhc1hZWihjb2xvcjogVW5icmFuZGVkWFlaKTogWFlaO1xuXHRcdH07XG5cdFx0Y29udmVydDoge1xuXHRcdFx0Y29sb3JTdHJpbmdUb0NvbG9yKGNvbG9yU3RyaW5nOiBDb2xvcl9TdHJpbmdQcm9wcyk6IFByb21pc2U8Q29sb3I+O1xuXHRcdFx0Y29sb3JUb0NTU0NvbG9yU3RyaW5nKGNvbG9yOiBDb2xvcik6IFByb21pc2U8c3RyaW5nPjtcblx0XHRcdHN0cmluZ1RvVmFsdWU6IHtcblx0XHRcdFx0Y215ayhjbXlrOiBDTVlLX1N0cmluZ1Byb3BzWyd2YWx1ZSddKTogQ01ZS1sndmFsdWUnXTtcblx0XHRcdFx0aGV4KGhleDogSGV4X1N0cmluZ1Byb3BzWyd2YWx1ZSddKTogSGV4Wyd2YWx1ZSddO1xuXHRcdFx0XHRoc2woaHNsOiBIU0xfU3RyaW5nUHJvcHNbJ3ZhbHVlJ10pOiBIU0xbJ3ZhbHVlJ107XG5cdFx0XHRcdGhzdihoc3Y6IEhTVl9TdHJpbmdQcm9wc1sndmFsdWUnXSk6IEhTVlsndmFsdWUnXTtcblx0XHRcdFx0bGFiKGxhYjogTEFCX1N0cmluZ1Byb3BzWyd2YWx1ZSddKTogTEFCWyd2YWx1ZSddO1xuXHRcdFx0XHRyZ2IocmdiOiBSR0JfU3RyaW5nUHJvcHNbJ3ZhbHVlJ10pOiBSR0JbJ3ZhbHVlJ107XG5cdFx0XHRcdHh5eih4eXo6IFhZWl9TdHJpbmdQcm9wc1sndmFsdWUnXSk6IFhZWlsndmFsdWUnXTtcblx0XHRcdH07XG5cdFx0XHR0b0NvbG9yVmFsdWVSYW5nZTxUIGV4dGVuZHMga2V5b2YgUmFuZ2VLZXlNYXA+KFxuXHRcdFx0XHR2YWx1ZTogc3RyaW5nIHwgbnVtYmVyLFxuXHRcdFx0XHRyYW5nZUtleTogVFxuXHRcdFx0KTogUmFuZ2VLZXlNYXBbVF07XG5cdFx0XHR2YWx1ZVRvU3RyaW5nOiB7XG5cdFx0XHRcdGNteWsoY215azogQ01ZS1sndmFsdWUnXSk6IENNWUtfU3RyaW5nUHJvcHNbJ3ZhbHVlJ107XG5cdFx0XHRcdGhleChoZXg6IEhleFsndmFsdWUnXSk6IEhleF9TdHJpbmdQcm9wc1sndmFsdWUnXTtcblx0XHRcdFx0aHNsKGhzbDogSFNMWyd2YWx1ZSddKTogSFNMX1N0cmluZ1Byb3BzWyd2YWx1ZSddO1xuXHRcdFx0XHRoc3YoaHN2OiBIU1ZbJ3ZhbHVlJ10pOiBIU1ZfU3RyaW5nUHJvcHNbJ3ZhbHVlJ107XG5cdFx0XHRcdGxhYihsYWI6IExBQlsndmFsdWUnXSk6IExBQl9TdHJpbmdQcm9wc1sndmFsdWUnXTtcblx0XHRcdFx0cmdiKHJnYjogUkdCWyd2YWx1ZSddKTogUkdCX1N0cmluZ1Byb3BzWyd2YWx1ZSddO1xuXHRcdFx0XHR4eXooeHl6OiBYWVpbJ3ZhbHVlJ10pOiBYWVpfU3RyaW5nUHJvcHNbJ3ZhbHVlJ107XG5cdFx0XHR9O1xuXHRcdH07XG5cdFx0Z2V0Rm9ybWF0dGVkVGltZXN0YW1wKCk6IHN0cmluZztcblx0XHRndWFyZHM6IHtcblx0XHRcdGlzQ29sb3IodmFsdWU6IHVua25vd24pOiB2YWx1ZSBpcyBDb2xvcjtcblx0XHRcdGlzQ29sb3JTcGFjZSh2YWx1ZTogdW5rbm93bik6IHZhbHVlIGlzIENvbG9yU3BhY2U7XG5cdFx0XHRpc0NvbG9yU3RyaW5nKHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgQ29sb3JfU3RyaW5nUHJvcHM7XG5cdFx0XHRpc0luUmFuZ2U8VCBleHRlbmRzIGtleW9mIHR5cGVvZiBfc2V0cz4oXG5cdFx0XHRcdHZhbHVlOiBudW1iZXIgfCBzdHJpbmcsXG5cdFx0XHRcdHJhbmdlS2V5OiBUXG5cdFx0XHQpOiBib29sZWFuO1xuXHRcdH07XG5cdFx0c2FuaXRpemU6IHtcblx0XHRcdGxhYih2YWx1ZTogbnVtYmVyLCBvdXRwdXQ6ICdsJyB8ICdhJyB8ICdiJyk6IExBQl9MIHwgTEFCX0EgfCBMQUJfQjtcblx0XHRcdHBlcmNlbnRpbGUodmFsdWU6IG51bWJlcik6IFBlcmNlbnRpbGU7XG5cdFx0XHRyYWRpYWwodmFsdWU6IG51bWJlcik6IFJhZGlhbDtcblx0XHRcdHJnYih2YWx1ZTogbnVtYmVyKTogQnl0ZVJhbmdlO1xuXHRcdH07XG5cdFx0dmFsaWRhdGU6IHtcblx0XHRcdGNvbG9yVmFsdWVzKGNvbG9yOiBDb2xvciB8IFNMIHwgU1YpOiBib29sZWFuO1xuXHRcdFx0aGV4KHZhbHVlOiBzdHJpbmcsIHBhdHRlcm46IFJlZ0V4cCk6IGJvb2xlYW47XG5cdFx0XHRoZXhDb21wb25lbnQodmFsdWU6IHN0cmluZyk6IGJvb2xlYW47XG5cdFx0XHRoZXhTZXQodmFsdWU6IHN0cmluZyk6IGJvb2xlYW47XG5cdFx0XHRyYW5nZTxUIGV4dGVuZHMga2V5b2YgdHlwZW9mIF9zZXRzPihcblx0XHRcdFx0dmFsdWU6IG51bWJlciB8IHN0cmluZyxcblx0XHRcdFx0cmFuZ2VLZXk6IFRcblx0XHRcdCk6IHZvaWQ7XG5cdFx0fTtcblx0fTtcblx0aGVscGVyczoge1xuXHRcdGNvbnZlcnNpb246IHtcblx0XHRcdGFwcGx5R2FtbWFDb3JyZWN0aW9uKHZhbHVlOiBudW1iZXIpOiBudW1iZXI7XG5cdFx0XHRjbGFtcFJHQihyZ2I6IFJHQik6IFJHQjtcblx0XHRcdGhzbEFkZEZvcm1hdCh2YWx1ZTogSFNMWyd2YWx1ZSddKTogSFNMO1xuXHRcdFx0aHVlVG9SR0IocDogbnVtYmVyLCBxOiBudW1iZXIsIHQ6IG51bWJlcik6IG51bWJlcjtcblx0XHR9O1xuXHRcdGRvbToge1xuXHRcdFx0dmFsaWRhdGVBbmRDb252ZXJ0Q29sb3IoXG5cdFx0XHRcdGNvbG9yOiBDb2xvciB8IENvbG9yX1N0cmluZ1Byb3BzIHwgbnVsbFxuXHRcdFx0KTogUHJvbWlzZTxDb2xvciB8IG51bGw+O1xuXHRcdH07XG5cdH07XG5cdHRyYW5zZm9ybToge1xuXHRcdGFkZEhhc2hUb0hleChoZXg6IEhleCk6IEhleDtcblx0XHRjb21wb25lbnRUb0hleChjb21wb25lbnQ6IG51bWJlcik6IHN0cmluZztcblx0XHRicmFuZFBhbGV0dGUoZGF0YTogVW5icmFuZGVkUGFsZXR0ZSk6IFBhbGV0dGU7XG5cdFx0ZGVmYXVsdENvbG9yVmFsdWUoY29sb3I6IFVuYnJhbmRlZENvbG9yKTogQ29sb3I7XG5cdH07XG5cdHV0aWxzOiB7XG5cdFx0Y29sb3I6IHtcblx0XHRcdGNvbG9yVG9Db2xvclN0cmluZyhjb2xvcjogQ29sb3IpOiBDb2xvcl9TdHJpbmdQcm9wcztcblx0XHRcdGlzQ29sb3JGb3JtYXQ8VCBleHRlbmRzIENvbG9yPihcblx0XHRcdFx0Y29sb3I6IENvbG9yLFxuXHRcdFx0XHRmb3JtYXQ6IFRbJ2Zvcm1hdCddXG5cdFx0XHQpOiBjb2xvciBpcyBUO1xuXHRcdFx0aXNDb2xvclNwYWNlKHZhbHVlOiBzdHJpbmcpOiB2YWx1ZSBpcyBDb2xvclNwYWNlO1xuXHRcdFx0aXNDb2xvclNwYWNlRXh0ZW5kZWQodmFsdWU6IHN0cmluZyk6IHZhbHVlIGlzIENvbG9yU3BhY2VFeHRlbmRlZDtcblx0XHRcdGlzQ29sb3JTdHJpbmcodmFsdWU6IHVua25vd24pOiB2YWx1ZSBpcyBDb2xvcl9TdHJpbmdQcm9wcztcblx0XHRcdGlzRm9ybWF0KGZvcm1hdDogdW5rbm93bik6IGZvcm1hdCBpcyBDb2xvckZvcm1hdDtcblx0XHRcdGlzQ01ZS0NvbG9yKHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgQ01ZSztcblx0XHRcdGlzQ01ZS0Zvcm1hdChjb2xvcjogQ29sb3IpOiBjb2xvciBpcyBDTVlLO1xuXHRcdFx0aXNDTVlLU3RyaW5nKHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgQ01ZS19TdHJpbmdQcm9wcztcblx0XHRcdGlzSGV4KHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgSGV4O1xuXHRcdFx0aXNIZXhGb3JtYXQoY29sb3I6IENvbG9yKTogY29sb3IgaXMgSGV4O1xuXHRcdFx0aXNIU0xDb2xvcih2YWx1ZTogdW5rbm93bik6IHZhbHVlIGlzIEhTTDtcblx0XHRcdGlzSFNMRm9ybWF0KGNvbG9yOiBDb2xvcik6IGNvbG9yIGlzIEhTTDtcblx0XHRcdGlzSFNMU3RyaW5nKHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgSFNMX1N0cmluZ1Byb3BzO1xuXHRcdFx0aXNIU1ZDb2xvcih2YWx1ZTogdW5rbm93bik6IHZhbHVlIGlzIEhTVjtcblx0XHRcdGlzSFNWRm9ybWF0KGNvbG9yOiBDb2xvcik6IGNvbG9yIGlzIEhTVjtcblx0XHRcdGlzSFNWU3RyaW5nKHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgSFNWX1N0cmluZ1Byb3BzO1xuXHRcdFx0aXNMQUIodmFsdWU6IHVua25vd24pOiB2YWx1ZSBpcyBMQUI7XG5cdFx0XHRpc0xBQkZvcm1hdChjb2xvcjogQ29sb3IpOiBjb2xvciBpcyBMQUI7XG5cdFx0XHRpc1JHQih2YWx1ZTogdW5rbm93bik6IHZhbHVlIGlzIFJHQjtcblx0XHRcdGlzUkdCRm9ybWF0KGNvbG9yOiBDb2xvcik6IGNvbG9yIGlzIFJHQjtcblx0XHRcdGlzU0xDb2xvcih2YWx1ZTogdW5rbm93bik6IHZhbHVlIGlzIFNMO1xuXHRcdFx0aXNTTEZvcm1hdChjb2xvcjogQ29sb3IpOiBjb2xvciBpcyBTTDtcblx0XHRcdGlzU0xTdHJpbmcodmFsdWU6IHVua25vd24pOiB2YWx1ZSBpcyBTTF9TdHJpbmdQcm9wcztcblx0XHRcdGlzU1ZDb2xvcih2YWx1ZTogdW5rbm93bik6IHZhbHVlIGlzIFNWO1xuXHRcdFx0aXNTVkZvcm1hdChjb2xvcjogQ29sb3IpOiBjb2xvciBpcyBTVjtcblx0XHRcdGlzU1ZTdHJpbmcodmFsdWU6IHVua25vd24pOiB2YWx1ZSBpcyBTVl9TdHJpbmdQcm9wcztcblx0XHRcdGlzWFlaKHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgWFlaO1xuXHRcdFx0aXNYWVpGb3JtYXQoY29sb3I6IENvbG9yKTogY29sb3IgaXMgWFlaO1xuXHRcdFx0ZW5zdXJlSGFzaCh2YWx1ZTogc3RyaW5nKTogc3RyaW5nO1xuXHRcdFx0aXNDb252ZXJ0aWJsZUNvbG9yKFxuXHRcdFx0XHRjb2xvcjogQ29sb3Jcblx0XHRcdCk6IGNvbG9yIGlzIENNWUsgfCBIZXggfCBIU0wgfCBIU1YgfCBMQUIgfCBSR0I7XG5cdFx0XHRpc0lucHV0RWxlbWVudChlbGVtZW50OiBIVE1MRWxlbWVudCB8IG51bGwpOiBlbGVtZW50IGlzIEhUTUxFbGVtZW50O1xuXHRcdFx0aXNTdG9yZWRQYWxldHRlKG9iajogdW5rbm93bik6IG9iaiBpcyBTdG9yZWRQYWxldHRlO1xuXHRcdFx0bmFycm93VG9Db2xvcihcblx0XHRcdFx0Y29sb3I6IENvbG9yIHwgQ29sb3JfU3RyaW5nUHJvcHNcblx0XHRcdCk6IFByb21pc2U8Q29sb3IgfCBudWxsPjtcblx0XHRcdGZvcm1hdFBlcmNlbnRhZ2VWYWx1ZXM8VCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHVua25vd24+Pihcblx0XHRcdFx0dmFsdWU6IFRcblx0XHRcdCk6IFQ7XG5cdFx0XHRnZXRDb2xvclN0cmluZyhjb2xvcjogQ29sb3IpOiBzdHJpbmcgfCBudWxsO1xuXHRcdFx0cGFyc2VDb2xvcihjb2xvcjogQ29sb3JTcGFjZSwgdmFsdWU6IHN0cmluZyk6IENvbG9yIHwgbnVsbDtcblx0XHRcdHBhcnNlQ29tcG9uZW50cyh2YWx1ZTogc3RyaW5nLCBjb3VudDogbnVtYmVyKTogbnVtYmVyW107XG5cdFx0XHRzdHJpcEhhc2hGcm9tSGV4KGhleDogSGV4KTogSGV4O1xuXHRcdFx0c3RyaXBQZXJjZW50RnJvbVZhbHVlczxUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgbnVtYmVyIHwgc3RyaW5nPj4oXG5cdFx0XHRcdHZhbHVlOiBUXG5cdFx0XHQpOiB7IFtLIGluIGtleW9mIFRdOiBUW0tdIGV4dGVuZHMgYCR7bnVtYmVyfSVgID8gbnVtYmVyIDogVFtLXSB9O1xuXHRcdH07XG5cdFx0Y29udmVyc2lvbjoge1xuXHRcdFx0Z2V0Q29udmVyc2lvbkZuPFxuXHRcdFx0XHRGcm9tIGV4dGVuZHMga2V5b2YgQ29sb3JEYXRhQXNzZXJ0aW9uLFxuXHRcdFx0XHRUbyBleHRlbmRzIGtleW9mIENvbG9yRGF0YUFzc2VydGlvblxuXHRcdFx0Pihcblx0XHRcdFx0ZnJvbTogRnJvbSxcblx0XHRcdFx0dG86IFRvXG5cdFx0XHQpOlxuXHRcdFx0XHR8ICgodmFsdWU6IENvbG9yRGF0YUFzc2VydGlvbltGcm9tXSkgPT4gQ29sb3JEYXRhQXNzZXJ0aW9uW1RvXSlcblx0XHRcdFx0fCB1bmRlZmluZWQ7XG5cdFx0XHRnZW5BbGxDb2xvclZhbHVlcyhjb2xvcjogSFNMKTogUGFydGlhbDxDb2xvckRhdGFFeHRlbmRlZD47XG5cdFx0fTtcblx0XHRlcnJvcnM6IHtcblx0XHRcdGhhbmRsZUFzeW5jPFQ+KFxuXHRcdFx0XHRhY3Rpb246ICgpID0+IFByb21pc2U8VD4sXG5cdFx0XHRcdGVycm9yTWVzc2FnZTogc3RyaW5nLFxuXHRcdFx0XHRjb250ZXh0PzogUmVjb3JkPHN0cmluZywgdW5rbm93bj5cblx0XHRcdCk6IFByb21pc2U8VCB8IG51bGw+O1xuXHRcdH07XG5cdFx0cGFsZXR0ZToge1xuXHRcdFx0Y3JlYXRlT2JqZWN0KFxuXHRcdFx0XHR0eXBlOiBzdHJpbmcsXG5cdFx0XHRcdGl0ZW1zOiBQYWxldHRlSXRlbVtdLFxuXHRcdFx0XHRzd2F0Y2hlczogbnVtYmVyLFxuXHRcdFx0XHRwYWxldHRlSUQ6IG51bWJlcixcblx0XHRcdFx0bGltaXREYXJrOiBib29sZWFuLFxuXHRcdFx0XHRsaW1pdEdyYXk6IGJvb2xlYW4sXG5cdFx0XHRcdGxpbWl0TGlnaHQ6IGJvb2xlYW5cblx0XHRcdCk6IFBhbGV0dGU7XG5cdFx0XHRwb3B1bGF0ZU91dHB1dEJveChcblx0XHRcdFx0Y29sb3I6IENvbG9yIHwgQ29sb3JfU3RyaW5nUHJvcHMsXG5cdFx0XHRcdGJveE51bWJlcjogbnVtYmVyXG5cdFx0XHQpOiBQcm9taXNlPHZvaWQ+O1xuXHRcdH07XG5cdFx0cmFuZG9tOiB7XG5cdFx0XHRoc2woKTogSFNMO1xuXHRcdFx0c2woKTogU0w7XG5cdFx0fTtcblx0fTtcbn1cbiJdfQ==