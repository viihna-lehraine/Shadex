// File: src/types/app/palette.js
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFsZXR0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90eXBlcy9hcHAvcGFsZXR0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiBzcmMvdHlwZXMvYXBwL3BhbGV0dGUuanNcblxuaW1wb3J0IHsgSFNMLCBQYWxldHRlLCBQYWxldHRlSXRlbSwgUGFsZXR0ZU9wdGlvbnMgfSBmcm9tICcuLi9pbmRleC5qcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGFsZXR0ZUNvbW1vbkZuSW50ZXJmYWNlIHtcblx0aGVscGVyczoge1xuXHRcdGxpbWl0czoge1xuXHRcdFx0aXNDb2xvckluQm91bmRzKGhzbDogSFNMKTogYm9vbGVhbjtcblx0XHRcdGlzVG9vRGFyayhoc2w6IEhTTCk6IGJvb2xlYW47XG5cdFx0XHRpc1Rvb0dyYXkoaHNsOiBIU0wpOiBib29sZWFuO1xuXHRcdFx0aXNUb29MaWdodChoc2w6IEhTTCk6IGJvb2xlYW47XG5cdFx0fTtcblx0XHR1cGRhdGU6IHtcblx0XHRcdGNvbG9yQm94KGNvbG9yOiBIU0wsIGluZGV4OiBudW1iZXIpOiB2b2lkO1xuXHRcdH07XG5cdH07XG5cdHN1cGVyVXRpbHM6IHtcblx0XHRjcmVhdGU6IHtcblx0XHRcdGJhc2VDb2xvcjogKGN1c3RvbUNvbG9yOiBIU0wgfCBudWxsLCBlbmFibGVBbHBoYTogYm9vbGVhbikgPT4gSFNMO1xuXHRcdFx0cGFsZXR0ZUl0ZW06IChcblx0XHRcdFx0Y29sb3I6IEhTTCxcblx0XHRcdFx0ZW5hYmxlQWxwaGE6IGJvb2xlYW5cblx0XHRcdCkgPT4gUHJvbWlzZTxQYWxldHRlSXRlbT47XG5cdFx0XHRwYWxldHRlSXRlbUFycmF5KFxuXHRcdFx0XHRiYXNlQ29sb3I6IEhTTCxcblx0XHRcdFx0aHVlczogbnVtYmVyW10sXG5cdFx0XHRcdGVuYWJsZUFscGhhOiBib29sZWFuLFxuXHRcdFx0XHRsaW1pdERhcms6IGJvb2xlYW4sXG5cdFx0XHRcdGxpbWl0R3JheTogYm9vbGVhbixcblx0XHRcdFx0bGltaXRMaWdodDogYm9vbGVhblxuXHRcdFx0KTogUHJvbWlzZTxQYWxldHRlSXRlbVtdPjtcblx0XHR9O1xuXHRcdGdlbkh1ZXM6IHtcblx0XHRcdGFuYWxvZ291czogKGNvbG9yOiBIU0wsIG51bUJveGVzOiBudW1iZXIpID0+IG51bWJlcltdO1xuXHRcdFx0ZGlhZGljOiAoYmFzZUh1ZTogbnVtYmVyKSA9PiBudW1iZXJbXTtcblx0XHRcdGhleGFkaWM6IChjb2xvcjogSFNMKSA9PiBudW1iZXJbXTtcblx0XHRcdHNwbGl0Q29tcGxlbWVudGFyeTogKGJhc2VIdWU6IG51bWJlcikgPT4gbnVtYmVyW107XG5cdFx0XHR0ZXRyYWRpYzogKGJhc2VIdWU6IG51bWJlcikgPT4gbnVtYmVyW107XG5cdFx0XHR0cmlhZGljOiAoYmFzZUh1ZTogbnVtYmVyKSA9PiBudW1iZXJbXTtcblx0XHR9O1xuXHR9O1xuXHR1dGlsczoge1xuXHRcdGFkanVzdDoge1xuXHRcdFx0c2woY29sb3I6IEhTTCk6IEhTTDtcblx0XHR9O1xuXHRcdHByb2JhYmlsaXR5OiB7XG5cdFx0XHRnZXRXZWlnaHRlZFJhbmRvbUludGVydmFsKCk6IG51bWJlcjtcblx0XHR9O1xuXHR9O1xufVxuXG4vLyAqKioqKioqKiBNQUlOIE1PRFVMRVMgKioqKioqKipcblxuZXhwb3J0IGludGVyZmFjZSBHZW5QYWxldHRlQXJncyB7XG5cdHN3YXRjaGVzOiBudW1iZXI7XG5cdGN1c3RvbUNvbG9yOiBIU0wgfCBudWxsO1xuXHRlbmFibGVBbHBoYTogYm9vbGVhbjtcblx0bGltaXREYXJrOiBib29sZWFuO1xuXHRsaW1pdEdyYXk6IGJvb2xlYW47XG5cdGxpbWl0TGlnaHQ6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2VuUGFsZXR0ZUZuSW50ZXJmYWNlIHtcblx0W2tleTogc3RyaW5nXTogKGFyZ3M6IEdlblBhbGV0dGVBcmdzKSA9PiBQcm9taXNlPFBhbGV0dGU+O1xufVxuXG4vLyAqKioqKioqKiBUT1AtTEVWRUwgQlVORExFIElOVEVSRkFDRSAqKioqKioqKlxuXG5leHBvcnQgaW50ZXJmYWNlIFBhbGV0dGVGbk1hc3RlckludGVyZmFjZSB7XG5cdGdlbmVyYXRlOiB7XG5cdFx0bGltaXRlZEhTTChcblx0XHRcdGJhc2VIdWU6IG51bWJlcixcblx0XHRcdGxpbWl0RGFyazogYm9vbGVhbixcblx0XHRcdGxpbWl0R3JheTogYm9vbGVhbixcblx0XHRcdGxpbWl0TGlnaHQ6IGJvb2xlYW4sXG5cdFx0XHRhbHBoYVZhbHVlOiBudW1iZXIgfCBudWxsXG5cdFx0KTogSFNMO1xuXHRcdHNlbGVjdGVkUGFsZXR0ZShvcHRpb25zOiBQYWxldHRlT3B0aW9ucyk6IFByb21pc2U8UGFsZXR0ZT47XG5cdH07XG5cdHN0YXJ0OiB7XG5cdFx0Z2VuUGFsZXR0ZShvcHRpb25zOiBQYWxldHRlT3B0aW9ucyk6IFByb21pc2U8dm9pZD47XG5cdFx0Z2VuUGFsZXR0ZURPTUJveChcblx0XHRcdGl0ZW1zOiBQYWxldHRlSXRlbVtdLFxuXHRcdFx0bnVtQm94ZXM6IG51bWJlcixcblx0XHRcdHRhYmxlSWQ6IHN0cmluZ1xuXHRcdCk6IFByb21pc2U8dm9pZD47XG5cdH07XG59XG4iXX0=