export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"app.js","sourceRoot":"","sources":["../../../src/types/app.ts"],"names":[],"mappings":"","sourcesContent":["import {\n\tAllColors,\n\tByteRange,\n\tCMYK,\n\tCMYKNumMap,\n\tCMYKStringMap,\n\tColor,\n\tColorNumMap,\n\tColorDataAssertion,\n\tColorFormat,\n\tColorSpace,\n\tColorSpaceExtended,\n\tColorStringMap,\n\tDOMElements,\n\tHex,\n\tHexSet,\n\tHexNumMap,\n\tHexStringMap,\n\tHSL,\n\tHSLNumMap,\n\tHSLStringMap,\n\tHSV,\n\tHSVNumMap,\n\tHSVStringMap,\n\tLAB,\n\tLABNumMap,\n\tLABStringMap,\n\tLAB_A,\n\tLAB_B,\n\tLAB_L,\n\tNumericBrandedType,\n\tNumericRangeKey,\n\tPalette,\n\tPaletteItem,\n\tPaletteType,\n\tPercentile,\n\tRadial,\n\tRangeKeyMap,\n\tRGB,\n\tRGBNumMap,\n\tRGBStringMap,\n\tSelectedPaletteOptions,\n\tSetsData,\n\tSL,\n\tSLNumMap,\n\tState,\n\tSV,\n\tSVNumMap,\n\tUnbrandedPalette,\n\tXYZ,\n\tXYZNumMap,\n\tXYZStringMap,\n\tXYZ_X,\n\tXYZ_Y,\n\tXYZ_Z\n} from './index.js';\nimport { DOMStore } from '../dom/DOMStore.js';\nimport { EventManager } from '../dom/events/EventManager.js';\nimport { PaletteEventsService } from '../dom/events/PaletteEventsService.js';\nimport { UIEventsService } from '../dom/events/UIEventsService.js';\nimport { LoggerService } from '../core/services/index.js';\nimport { PaletteStateService } from '../state/PaletteStateService.js';\nimport { StateManager } from '../state/StateManager.js';\n\n// ******** 1. SERVICES ********\n\nexport interface Services {\n\terrors: ErrorHandlerContract;\n\tlog: LoggerService;\n}\n\n// ******** 2. HELPERS ********\n\nexport interface ColorHelpers {\n\tgetConversionFn<\n\t\tFrom extends keyof ColorDataAssertion,\n\t\tTo extends keyof ColorDataAssertion\n\t>(\n\t\tfrom: From,\n\t\tto: To\n\t):\n\t\t| ((value: ColorDataAssertion[From]) => ColorDataAssertion[To])\n\t\t| undefined;\n\thueToRGB(p: number, q: number, t: number): number;\n}\n\nexport interface DataHelpers {\n\tdeepClone<T>(value: T): T;\n\tdeepFreeze<T>(obj: T): T;\n\tgetCallerInfo: () => string;\n\tgetFormattedTimestamp(): string;\n\tparseValue: (value: string | number) => number;\n\ttracePromise(promise: Promise<unknown>, label: string): Promise<unknown>;\n}\n\nexport interface DOMHelpers {\n\tgetAllElements<T extends HTMLElement>(selector: string): NodeListOf<T>;\n\tgetElement<T extends HTMLElement>(id: string): T | null;\n}\n\nexport interface MathHelpers {\n\tclampToRange: (value: number, rangeKey: NumericRangeKey) => number;\n}\n\nexport interface RandomHelpers {\n\tselectRandomFromWeights(obj: {\n\t\tweights: readonly number[];\n\t\tvalues: readonly number[];\n\t}): number;\n\tselectWeightedRandom(\n\t\tweights: readonly number[],\n\t\tvalues: readonly number[]\n\t): number;\n}\n\nexport interface TimeHelpers {\n\tdebounce<T extends (...args: Parameters<T>) => void>(\n\t\tfunc: T,\n\t\tdelay: number\n\t): (...args: Parameters<T>) => void;\n}\n\nexport interface TypeGuards {\n\thasFormat<T extends { format: string }>(\n\t\tvalue: unknown,\n\t\texpectedFormat: string\n\t): value is T;\n\thasNumericProperties(obj: Record<string, unknown>, keys: string[]): boolean;\n\thasStringProperties(obj: Record<string, unknown>, keys: string[]): boolean;\n\thasValueProperty<T extends { value: unknown }>(value: unknown): value is T;\n\tisByteRange(value: unknown): value is ByteRange;\n\tisCMYK(value: unknown): value is CMYK;\n\tisColor(value: unknown): value is Color;\n\tisColorNumMap(value: unknown, format?: ColorFormat): value is ColorNumMap;\n\tisColorSpace(value: unknown): value is ColorSpace;\n\tisColorSpaceExtended(value: string): value is ColorSpaceExtended;\n\tisColorStringMap(value: unknown): value is ColorStringMap;\n\tisConvertibleColor(\n\t\tcolor: Color\n\t): color is CMYK | Hex | HSL | HSV | LAB | RGB;\n\tisFormat(format: unknown): format is ColorFormat;\n\tisHex(value: unknown): value is Hex;\n\tisHexSet(value: unknown): value is HexSet;\n\tisHSL(value: unknown): value is HSL;\n\tisHSV(value: unknown): value is HSV;\n\tisLAB(value: unknown): value is LAB;\n\tisLAB_A(value: unknown): value is LAB_A;\n\tisLAB_B(value: unknown): value is LAB_B;\n\tisLAB_L(value: unknown): value is LAB_L;\n\tisInputElement(element: HTMLElement | null): element is HTMLElement;\n\tisObject(value: unknown): value is Record<string, unknown>;\n\tisPalette(value: unknown): value is Palette;\n\tisPaletteType(value: string): value is PaletteType;\n\tisPercentile(value: unknown): value is Percentile;\n\tisRadial(value: unknown): value is Radial;\n\tisRGB(value: unknown): value is RGB;\n\tisSL(value: unknown): value is SL;\n\tisSV(value: unknown): value is SV;\n\tisXYZ(value: unknown): value is XYZ;\n\tisXYZ_X(value: unknown): value is XYZ_X;\n\tisXYZ_Y(value: unknown): value is XYZ_Y;\n\tisXYZ_Z(value: unknown): value is XYZ_Z;\n}\n\n// ******** 3. HELPERS ********\n\nexport interface Helpers {\n\tcolor: ColorHelpers;\n\tdata: DataHelpers;\n\tdom: DOMHelpers;\n\tmath: MathHelpers;\n\trandom: RandomHelpers;\n\ttime: TimeHelpers;\n\ttypeGuards: TypeGuards;\n}\n\n// ******** 4. UTILITIES ********\n\nexport interface AdjustmentUtilities {\n\tapplyGammaCorrection(value: number): number;\n\tclampRGB(rgb: RGB): RGB;\n\tclampXYZ(value: number, maxValue: number): number;\n\tnormalizeXYZ(value: number, reference: number): number;\n\tsl(color: HSL): HSL;\n}\n\nexport interface BrandingUtilities {\n\tasBranded<T extends keyof RangeKeyMap>(\n\t\tvalue: number,\n\t\trangeKey: T\n\t): RangeKeyMap[T];\n\tasByteRange(value: number): ByteRange;\n\tasCMYK(color: CMYKNumMap): CMYK;\n\tasHex(color: HexNumMap): Hex;\n\tasHexSet(value: string): HexSet;\n\tasHSL(color: HSLNumMap): HSL;\n\tasHSV(color: HSVNumMap): HSV;\n\tasLAB(color: LABNumMap): LAB;\n\tasLAB_A(value: number): LAB_A;\n\tasLAB_B(value: number): LAB_B;\n\tasLAB_L(value: number): LAB_L;\n\tasPercentile(value: number): Percentile;\n\tasRadial(value: number): Radial;\n\tasRGB(color: RGBNumMap): RGB;\n\tasSL(color: SLNumMap): SL;\n\tasSV(color: SVNumMap): SV;\n\tasXYZ(color: XYZNumMap): XYZ;\n\tasXYZ_X(value: number): XYZ_X;\n\tasXYZ_Y(value: number): XYZ_Y;\n\tasXYZ_Z(value: number): XYZ_Z;\n\tbrandColor(color: ColorNumMap | ColorStringMap): Color;\n\tbrandPalette(data: UnbrandedPalette): Palette;\n}\n\nexport interface ColorBrandUtilities {\n\tbrandCMYKString(cmyk: CMYKStringMap['value']): CMYK['value'];\n\tbrandColorString(color: ColorStringMap): Color;\n\tbrandHexString(hex: HexStringMap['value']): Hex['value'];\n\tbrandHSLString(hsl: HSLStringMap['value']): HSL['value'];\n\tbrandHSVString(hsv: HSVStringMap['value']): HSV['value'];\n\tbrandLABString(lab: LABStringMap['value']): LAB['value'];\n\tbrandRGBString(rgb: RGBStringMap['value']): RGB['value'];\n\tbrandXYZString(xyz: XYZStringMap['value']): XYZ['value'];\n}\n\nexport interface ColorConversionUtilities {\n\tcmykToHSL(cmyk: CMYK): HSL;\n\tcmykToRGB(cmyk: CMYK): RGB;\n\tconvertHSL(color: HSL, colorSpace: ColorSpaceExtended): Color;\n\tconvertToHSL(color: Exclude<Color, SL | SV>): HSL;\n\thexToHSL(hex: Hex): HSL;\n\thexToHSLWrapper(input: string | Hex): HSL;\n\thexToRGB(hex: Hex): RGB;\n\thslToCMYK(hsl: HSL): CMYK;\n\thslToHex(hsl: HSL): Hex;\n\thslToHSV(hsl: HSL): HSV;\n\thslToLAB(hsl: HSL): LAB;\n\thslToRGB(hsl: HSL): RGB;\n\thslToSL(hsl: HSL): SL;\n\thslToSV(hsl: HSL): SV;\n\thslToXYZ(hsl: HSL): XYZ;\n\thsvToHSL(hsv: HSV): HSL;\n\thsvToSV(hsv: HSV): SV;\n\tlabToHSL(lab: LAB): HSL;\n\tlabToRGB(lab: LAB): RGB;\n\tlabToXYZ(lab: LAB): XYZ;\n\trgbToCMYK(rgb: RGB): CMYK;\n\trgbToHex(rgb: RGB): Hex;\n\trgbToHSL(rgb: RGB): HSL;\n\trgbToHSV(rgb: RGB): HSV;\n\trgbToXYZ(rgb: RGB): XYZ;\n\txyzToHSL(xyz: XYZ): HSL;\n\txyzToLAB(xyz: XYZ): LAB;\n\txyzToRGB(xyz: XYZ): RGB;\n}\n\nexport interface ColorFormatUtilities {\n\tformatColorAsCSS(color: Color): string;\n\tformatColorAsStringMap(color: Color): ColorStringMap;\n\tformatCSSAsColor(color: string): Exclude<Color, SL | SV> | null;\n}\n\nexport interface ColorGenerationUtilities {\n\tgenerateRandomHSL(): HSL;\n\tgenerateRandomSL(): SL;\n}\n\nexport interface ColorParsingUtilities {\n\tparseHexValueAsStringMap(hex: Hex['value']): HexStringMap['value'];\n\tparseHSLValueAsStringMap(hsl: HSL['value']): HSLStringMap['value'];\n\tparseHSVValueAsStringMap(hsv: HSV['value']): HSVStringMap['value'];\n\tparseLABValueAsStringMap(lab: LAB['value']): LABStringMap['value'];\n\tparseRGBValueAsStringMap(rgb: RGB['value']): RGBStringMap['value'];\n\tparseXYZValueAsStringMap(xyz: XYZ['value']): XYZStringMap['value'];\n}\n\nexport interface DOMUtilitiesPartial {\n\tcreateTooltip(element: HTMLElement, text: string): HTMLElement | void;\n\tdownloadFile(data: string, filename: string, type: string): void;\n\tenforceSwatchRules(minSwatches: number, maxSwatches: number): void;\n\tgetUpdatedColumnSizes(\n\t\tcolumns: State['paletteContainer']['columns'],\n\t\tcolumnID: number,\n\t\tnewSize: number\n\t): State['paletteContainer']['columns'];\n\thideTooltip(): void;\n\tpositionTooltip(element: HTMLElement, tooltip: HTMLElement): void;\n\treadFile(file: File): Promise<string>;\n\tremoveTooltip(element: HTMLElement): void;\n\tscanPaletteColumns(): State['paletteContainer']['columns'] | void;\n\tswitchColorSpaceInDOM(targetFormat: ColorSpace): void;\n\tupdateColorBox(color: HSL, boxId: string): void;\n\tupdateHistory(history: Palette[]): void;\n}\n\nexport interface DOMParsingUtilities {\n\tparseCheckbox(id: string): boolean | void;\n\tparseColorInput(input: HTMLInputElement): Hex | HSL | RGB | null;\n\tparseDropdownSelection(id: string, validOptions: string[]): string | void;\n\tparseNumberInput(\n\t\tinput: HTMLInputElement,\n\t\tmin?: number,\n\t\tmax?: number\n\t): number | null;\n\tparseTextInput(input: HTMLInputElement, regex?: RegExp): string | null;\n}\n\nexport interface FormattingUtilities {\n\taddHashToHex(hex: Hex): Hex;\n\tcomponentToHex(component: number): string;\n\tconvertShortHexToLong(hex: string): string;\n\tformatPercentageValues<\n\t\tT extends Record<string, number | NumericBrandedType>\n\t>(\n\t\tvalue: T\n\t): {\n\t\t[K in keyof T]: T[K] extends number | NumericBrandedType\n\t\t\t? `${number}%` | T[K]\n\t\t\t: T[K];\n\t};\n\thslAddFormat(value: HSL['value']): HSL;\n\tparseColor(colorSpace: ColorSpace, value: string): Color | null;\n\tparseComponents(value: string, count: number): number[];\n\tstripHashFromHex(hex: Hex): Hex;\n\tstripPercentFromValues<T extends Record<string, number | string>>(\n\t\tvalue: T\n\t): { [K in keyof T]: T[K] extends `${number}%` ? number : T[K] };\n}\n\nexport interface PaletteUtilities {\n\tcreatePaletteItem(color: HSL, itemID: number): PaletteItem;\n\tcreatePaletteItemArray(baseColor: HSL, hues: number[]): PaletteItem[];\n\tcreatePaletteObject(\n\t\toptions: SelectedPaletteOptions,\n\t\tpaletteItems: PaletteItem[]\n\t): Palette;\n\tgenerateAllColorValues(color: HSL): AllColors;\n\tgetPaletteOptionsFromUI(): SelectedPaletteOptions;\n\tgetRandomizedPaleteOptions(): SelectedPaletteOptions;\n\tisHSLTooDark(hsl: HSL): boolean;\n\tisHSLTooGray(hsl: HSL): boolean;\n\tisHSLTooLight(hsl: HSL): boolean;\n\tisHSLInBounds(hsl: HSL): boolean;\n\tshowPaletteColumns(count: number): void;\n}\n\nexport interface ParsingUtilities {\n\tcolorInput(input: HTMLInputElement): Hex | HSL | RGB | null;\n\tdropdownSelection(id: string, validOptions: string[]): string | void;\n\tnumberInput(\n\t\tinput: HTMLInputElement,\n\t\tmin?: number,\n\t\tmax?: number\n\t): number | null;\n\ttextInput(input: HTMLInputElement, regex?: RegExp): string | null;\n}\n\nexport interface SanitationUtilities {\n\tgetSafeQueryParam(param: string): string | null;\n\tlab(value: number, output: 'l' | 'a' | 'b'): LAB_L | LAB_A | LAB_B;\n\tpercentile(value: number): Percentile;\n\tradial(value: number): Radial;\n\trgb(value: number): ByteRange;\n\tsanitizeInput(str: string): string;\n\ttoColorValueRange<T extends keyof RangeKeyMap>(\n\t\tvalue: string | number,\n\t\trangeKey: T\n\t): RangeKeyMap[T];\n}\n\nexport interface ValidationUtilities {\n\tcolorInput(color: string): boolean;\n\tcolorValue(color: Color | SL | SV): boolean;\n\tensureHash(value: string): string;\n\thex(value: string, pattern: RegExp): boolean;\n\thexComponent(value: string): boolean;\n\thexSet(value: string): boolean;\n\trange<T extends keyof SetsData>(value: number | string, rangeKey: T): void;\n}\n\n// ******** 5. UTILITIES OBJECT ********\n\nexport type ColorUtilities = ColorBrandUtilities &\n\tColorConversionUtilities &\n\tColorGenerationUtilities &\n\tColorFormatUtilities &\n\tColorParsingUtilities;\n\nexport type DOMUtilities = DOMParsingUtilities & DOMUtilitiesPartial;\n\nexport interface Utilities {\n\tadjust: AdjustmentUtilities;\n\tbrand: BrandingUtilities;\n\tcolor: ColorUtilities;\n\tcolorConversion: ColorConversionUtilities;\n\tdom: DOMUtilities;\n\tformat: FormattingUtilities;\n\tpalette: PaletteUtilities;\n\tparse: ParsingUtilities;\n\tsanitize: SanitationUtilities;\n\tvalidate: ValidationUtilities;\n}\n\n// ******** 6. COMMON FUNCTIONS OBJECT ********\n\nexport interface CommonFunctions {\n\thelpers: Helpers;\n\tservices: Services;\n\tutils: Utilities;\n}\n\n// ******** 7. CLASSES ********\n\nexport interface DOMStoreContract {\n\tgetElements(): DOMElements | null;\n\tsetElements(elements: DOMElements): void;\n}\n\nexport interface ErrorHandlerContract {\n\thandleAndReturn<T>(\n\t\taction: () => T | Promise<T>,\n\t\terrorMessage: string,\n\t\toptions?: ErrorHandlerOptions & { fallback?: T }\n\t): T | Promise<T>;\n\thandleAsync<T>(\n\t\taction: () => Promise<T>,\n\t\terrorMessage: string,\n\t\toptions?: ErrorHandlerOptions\n\t): Promise<T>;\n\thandleSync<T>(\n\t\taction: () => T,\n\t\terrorMessage: string,\n\t\toptions?: ErrorHandlerOptions\n\t): T;\n}\n\nexport interface IDBStorageContract {\n\tclear(): Promise<void>;\n\tensureDBReady(): Promise<void>;\n\tgetItem<T>(key: string): Promise<T | null>;\n\tinit(): Promise<boolean>;\n\tremoveItem(key: string): Promise<void>;\n\tsetItem(key: string, value: unknown): Promise<void>;\n}\n\nexport interface LocalStorageContract {\n\tclear(): Promise<void>;\n\tgetItem<T>(key: string): Promise<T | null>;\n\tinit(): Promise<boolean>;\n\tremoveItem(key: string): Promise<void>;\n\tsetItem(key: string, value: unknown): Promise<void>;\n}\n\nexport interface LoggerContract {\n\tdebug(message: string, caller?: string): void;\n\terror(message: string, caller?: string): void;\n\tinfo(message: string, caller?: string): void;\n\twarn(message: string, caller?: string): void;\n}\n\nexport interface PaletteEventsContract {\n\tinit(): void;\n\tattachColorCopyHandlers(): void;\n\tattachDragAndDropHandlers(): void;\n\tinitializeColumnPositions(): void;\n\trenderColumnSizeChange(): void;\n\tsyncColumnColorsWithState(): void;\n}\n\nexport interface PaletteHistoryManagerContract {\n\tinit(services: Services): Promise<void>;\n\taddPalette(palette: Palette): void;\n\tclearHistory(): void;\n\tgetCurrentPalette(): Palette | null;\n\tgetHistory(): Palette[];\n\tredo(): Palette | null;\n\tundo(): Palette | null;\n}\n\nexport interface PaletteStateContract {\n\thandleColumnLock(columnID: number): Promise<void>;\n\thandleColumnResize(columnID: number, newSize: number): Promise<void>;\n\tswapColumns(draggedID: number, targetID: number): Promise<void>;\n}\n\nexport interface StateFactoryContract {\n\tcreateInitialState(): Promise<State>;\n}\n\nexport interface StateManagerContract {\n\tinit(services: Services): Promise<void>;\n\tbatchUpdate(\n\t\tupdater: (currentState: State) => Partial<State>\n\t): Promise<void>;\n\tclearHistory(): void;\n\tensureStateReady(): Promise<void>;\n\tget<K extends keyof State>(key?: K): State | State[K];\n\tloadState(): Promise<State>;\n\tredo(): State | null;\n\treplaceState(newState: State): Promise<void>;\n\tresetState(): Promise<void>;\n\tsaveState(state: State, options: { throttle?: boolean }): Promise<void>;\n\tundo(): State | null;\n}\n\nexport interface StorageManagerContract {\n\tclear(): Promise<void>;\n\tgetItem<T>(key: string): Promise<T | null>;\n\tinit(): Promise<boolean>;\n\tremoveItem(key: string): Promise<void>;\n\tsetItem(key: string, value: unknown): Promise<void>;\n}\n\nexport interface UIEventsContract {\n\tattachTooltipListener(id: string, tooltipText: string): void;\n\tinit(): void;\n\tinitButtons(): void;\n}\n\n// ******** 8. FUNCTION INTERFACES ********\n\nexport interface GenerateHuesFn {\n\t(\n\t\tcolor: HSL,\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctions,\n\t\tgenerateHues: GenerateHuesFnGroup\n\t): number[];\n}\n\nexport interface GeneratePaletteFn {\n\t(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctions,\n\t\tgenerateHues: GenerateHuesFnGroup,\n\t\tgeneratePalette: GeneratePaletteFnGroup\n\t): Palette;\n}\n\n// ******** 9. FUNCTION OBJECTS ********\n\nexport interface GenerateHuesFnGroup {\n\tanalogous(\n\t\tcolor: HSL,\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctions\n\t): number[];\n\tdiadic(\n\t\tcolor: HSL,\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctions\n\t): number[];\n\thexadic(color: HSL, common: CommonFunctions): number[];\n\tsplitComplementary(color: HSL, common: CommonFunctions): number[];\n\ttetradic(color: HSL, common: CommonFunctions): number[];\n\ttriadic(color: HSL, common: CommonFunctions): number[];\n}\n\nexport interface GeneratePaletteFnGroup {\n\tanalogous(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctions,\n\t\tgenerateHues: GenerateHuesFnGroup\n\t): Palette;\n\tcomplementary(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctions\n\t): Palette;\n\tdiadic(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctions,\n\t\tgenerateHues: GenerateHuesFnGroup\n\t): Palette;\n\thexadic(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctions,\n\t\tgenerateHues: GenerateHuesFnGroup\n\t): Palette;\n\tmonochromatic(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctions\n\t): Palette;\n\trandom(options: SelectedPaletteOptions, common: CommonFunctions): Palette;\n\tsplitComplementary(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctions\n\t): Palette;\n\ttetradic(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctions,\n\t\tgenerateHues: GenerateHuesFnGroup\n\t): Palette;\n\ttriadic(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctions,\n\t\tgenerateHues: GenerateHuesFnGroup\n\t): Palette;\n}\n\n// ******** 10. OTHER ********\n\nexport interface AppDependencies {\n\tcommon: Required<CommonFunctions>;\n\tdomStore: DOMStore;\n\teventManager: EventManager;\n\tpaletteEvents: PaletteEventsService;\n\tpaletteState: PaletteStateService;\n\tstateManager: StateManager;\n\tuiEvents: UIEventsService;\n}\n\nexport interface DebounceOptions {\n\tdelay?: number;\n}\n\nexport interface ErrorHandlerOptions {\n\tcontext?: Record<string, unknown>;\n\tfallback?: unknown;\n\tuserMessage?: string;\n}\n\nexport type LockQueueEntry = {\n\tisWrite: boolean;\n\tresolve: () => void;\n};\n"]}