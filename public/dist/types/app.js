// File: types/app/app.js
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"app.js","sourceRoot":"","sources":["../../../src/types/app.ts"],"names":[],"mappings":"AAAA,yBAAyB","sourcesContent":["// File: types/app/app.js\n\nimport {\n\tAllColors,\n\tByteRange,\n\tCMYK,\n\tCMYKStringObject,\n\tColor,\n\tColorDataAssertion,\n\tColorFormat,\n\tColorSpace,\n\tColorSpaceExtended,\n\tColorStringObject,\n\tConfigData,\n\tDOM_IDs,\n\tDOMElements,\n\tHex,\n\tHexSet,\n\tHexStringObject,\n\tHSL,\n\tHSLStringObject,\n\tHSV,\n\tHSVStringObject,\n\tLAB,\n\tLAB_A,\n\tLAB_B,\n\tLAB_L,\n\tLABStringObject,\n\tMutationLog,\n\tNumericRangeKey,\n\tPalette,\n\tPaletteItem,\n\tPaletteType,\n\tPercentile,\n\tRadial,\n\tRangeKeyMap,\n\tRGB,\n\tRGBStringObject,\n\tSelectedPaletteOptions,\n\tSetsData,\n\tSL,\n\tSLStringObject,\n\tState,\n\tSV,\n\tSVStringObject,\n\tUnbrandedCMYK,\n\tUnbrandedColor,\n\tUnbrandedHex,\n\tUnbrandedHSL,\n\tUnbrandedHSV,\n\tUnbrandedLAB,\n\tUnbrandedPalette,\n\tUnbrandedRGB,\n\tUnbrandedSL,\n\tUnbrandedSV,\n\tUnbrandedXYZ,\n\tXYZ,\n\tXYZStringObject,\n\tXYZ_X,\n\tXYZ_Y,\n\tXYZ_Z\n} from './index.js';\n\n// ******** 1. SERVICES ********\n\nexport interface LoggerInterface {\n\tdebug: (\n\t\tmessage: string,\n\t\tcaller?: string,\n\t\tverbosityRequirement?: number\n\t) => void;\n\tinfo: (\n\t\tmessage: string,\n\t\tcaller?: string,\n\t\tverbosityRequirement?: number\n\t) => void;\n\twarn: (\n\t\tmessage: string,\n\t\tcaller?: string,\n\t\tverbosityRequirement?: number\n\t) => void;\n\terror: (\n\t\tmessage: string,\n\t\tcaller?: string,\n\t\tverbosityRequirement?: number\n\t) => void;\n\tmutation: (\n\t\tdata: MutationLog,\n\t\tlogCallback: (data: unknown) => void,\n\t\tcaller?: string\n\t) => void;\n\t[key: string]: Function;\n}\n\n// ******** 2. SERVICES OBJECT ********\n\nexport interface ServicesInterface {\n\tlog(\n\t\tlevel: 'debug' | 'info' | 'warn' | 'error',\n\t\tmessage: string,\n\t\tmethod: string,\n\t\tverbosityRequirement?: number\n\t): void;\n\terrors: ErrorHandlerClassInterface;\n}\n\n// ******** 3. HELPERS ********\n\nexport interface ColorConversionHelpersInterface {\n\tcmykToHSL(cmyk: CMYK): HSL;\n\tcmykToRGB(cmyk: CMYK): RGB;\n\thexToHSL(hex: Hex): HSL;\n\thexToRGB(hex: Hex): RGB;\n\thslToCMYK(hsl: HSL): CMYK;\n\thslToHex(hsl: HSL): Hex;\n\thslToHSV(hsl: HSL): HSV;\n\thslToLAB(hsl: HSL): LAB;\n\thslToRGB(hsl: HSL): RGB;\n\thslToSL(hsl: HSL): SL;\n\thslToSV(hsl: HSL): SV;\n\thslToXYZ(hsl: HSL): XYZ;\n\thsvToHSL(hsv: HSV): HSL;\n\thsvToSV(hsv: HSV): SV;\n\tlabToHSL(lab: LAB): HSL;\n\tlabToRGB(lab: LAB): RGB;\n\tlabToXYZ(lab: LAB): XYZ;\n\trgbToCMYK(rgb: RGB): CMYK;\n\trgbToHex(rgb: RGB): Hex;\n\trgbToHSL(rgb: RGB): HSL;\n\trgbToHSV(rgb: RGB): HSV;\n\trgbToXYZ(rgb: RGB): XYZ;\n\txyzToHSL(xyz: XYZ): HSL;\n\txyzToLAB(xyz: XYZ): LAB;\n\txyzToRGB(xyz: XYZ): RGB;\n}\n\nexport interface ColorUtilHelpersInterface\n\textends ColorConversionHelpersInterface {\n\thexToHSLWrapper(input: string | Hex): HSL;\n}\n\nexport interface PaletteUtilHelpersInterface {\n\tgetWeightedRandomInterval(type: keyof ConfigData['probabilities']): number;\n\tisHSLInBounds(hsl: HSL): boolean;\n\tisHSLTooDark(hsl: HSL): boolean;\n\tisHSLTooGray(hsl: HSL): boolean;\n\tisHSLTooLight(hsl: HSL): boolean;\n}\n\n// ******** 4. HELPERS OBJECT ********\n\nexport interface HelpersInterface {\n\tcolor: ColorUtilHelpersInterface;\n\tpalette: PaletteUtilHelpersInterface;\n}\n\n// ******** 5. UTILITIES ********\n\nexport interface AdjustmentUtilsInterface {\n\tapplyGammaCorrection(value: number): number;\n\tclampRGB(rgb: RGB): RGB;\n\tsl(color: HSL): HSL;\n}\n\nexport interface AppUtilsInterface {\n\tgenerateRandomHSL(): HSL;\n\tgenerateRandomSL(): SL;\n\tgetFormattedTimestamp(): string;\n}\n\nexport interface BrandingUtilsInterface {\n\tasBranded<T extends keyof RangeKeyMap>(\n\t\tvalue: number,\n\t\trangeKey: T\n\t): RangeKeyMap[T];\n\tasByteRange(value: number): ByteRange;\n\tasCMYK(color: UnbrandedCMYK): CMYK;\n\tasHex(color: UnbrandedHex): Hex;\n\tasHexSet(value: string): HexSet;\n\tasHSL(color: UnbrandedHSL): HSL;\n\tasHSV(color: UnbrandedHSV): HSV;\n\tasLAB(color: UnbrandedLAB): LAB;\n\tasLAB_A(value: number): LAB_A;\n\tasLAB_B(value: number): LAB_B;\n\tasLAB_L(value: number): LAB_L;\n\tasPercentile(value: number): Percentile;\n\tasRadial(value: number): Radial;\n\tasRGB(color: UnbrandedRGB): RGB;\n\tasSL(color: UnbrandedSL): SL;\n\tasSV(color: UnbrandedSV): SV;\n\tasXYZ(color: UnbrandedXYZ): XYZ;\n\tasXYZ_X(value: number): XYZ_X;\n\tasXYZ_Y(value: number): XYZ_Y;\n\tasXYZ_Z(value: number): XYZ_Z;\n\tbrandColor(color: UnbrandedColor): Color;\n\tbrandPalette(data: UnbrandedPalette): Palette;\n}\n\nexport interface ColorUtilsInterface {\n\tconvertCMYKStringToValue(cmyk: CMYKStringObject['value']): CMYK['value'];\n\tconvertCMYKValueToString(cmyk: CMYK['value']): CMYKStringObject['value'];\n\tconvertColorStringToColor(colorString: ColorStringObject): Color;\n\tconvertColorToColorString(color: Color): ColorStringObject;\n\tconvertColorToCSS(color: Color): string;\n\tconvertCSSToColor(color: string): Exclude<Color, SL | SV> | null;\n\tconvertHexStringToValue(hex: HexStringObject['value']): Hex['value'];\n\tconvertHexValueToString(hex: Hex['value']): HexStringObject['value'];\n\tconvertHSL(color: HSL, colorSpace: ColorSpaceExtended): Color;\n\tconvertHSLStringToValue(hsl: HSLStringObject['value']): HSL['value'];\n\tconvertHSLValueToString(hsl: HSL['value']): HSLStringObject['value'];\n\tconvertHSVStringToValue(hsv: HSVStringObject['value']): HSV['value'];\n\tconvertHSVValueToString(hsv: HSV['value']): HSVStringObject['value'];\n\tconvertLABStringToValue(lab: LABStringObject['value']): LAB['value'];\n\tconvertLABValueToString(lab: LAB['value']): LABStringObject['value'];\n\tconvertRGBStringToValue(rgb: RGBStringObject['value']): RGB['value'];\n\tconvertRGBValueToString(rgb: RGB['value']): RGBStringObject['value'];\n\tconvertToHSL(color: Exclude<Color, SL | SV>): HSL;\n\tconvertXYZStringToValue(xyz: XYZStringObject['value']): XYZ['value'];\n\tconvertXYZValueToString(xyz: XYZ['value']): XYZStringObject['value'];\n\tgetColorString(color: Color): string | null;\n\tgetConversionFn<\n\t\tFrom extends keyof ColorDataAssertion,\n\t\tTo extends keyof ColorDataAssertion\n\t>(\n\t\tfrom: From,\n\t\tto: To\n\t):\n\t\t| ((value: ColorDataAssertion[From]) => ColorDataAssertion[To])\n\t\t| undefined;\n\thueToRGB(p: number, q: number, t: number): number;\n\tnarrowToColor(color: Color | ColorStringObject): Color | null;\n\ttoColorValueRange<T extends keyof RangeKeyMap>(\n\t\tvalue: string | number,\n\t\trangeKey: T\n\t): RangeKeyMap[T];\n\tvalidateAndConvertColor(\n\t\tcolor: Color | ColorStringObject | null\n\t): Color | null;\n}\n\nexport interface CoreUtilsInterface {\n\tclampToRange(value: number, rangeKey: NumericRangeKey): number;\n\tclone<T>(value: T): T;\n\tdebounce<T extends (...args: Parameters<T>) => void>(\n\t\tfunc: T,\n\t\tdelay: number\n\t): (...args: Parameters<T>) => void;\n\tgetAllElements<T extends HTMLElement>(selector: string): NodeListOf<T>;\n\tgetElement<T extends HTMLElement>(id: string): T | null;\n}\n\nexport interface DOMUtilsInterface {\n\taddConversionListener: (id: string, colorSpace: string) => void;\n\taddEventListener<K extends keyof HTMLElementEventMap>(\n\t\tid: string,\n\t\teventType: K,\n\t\tcallback: (ev: HTMLElementEventMap[K]) => void\n\t): void;\n\tcreateTooltip(element: HTMLElement, text: string): HTMLElement;\n\tdownloadFile(data: string, filename: string, type: string): void;\n\tenforceSwatchRules(minSwatches: number, maxSwatches: number): void;\n\tgetValidatedDOMElements(unvalidatedIDs: DOM_IDs): DOMElements | null;\n\thideTooltip(): void;\n\treadFile(file: File): Promise<string>;\n\tremoveTooltip(element: HTMLElement): void;\n\tscanPaletteColumns(): State['paletteContainer']['columns'];\n\tswitchColorSpaceInDOM(targetFormat: ColorSpace): void;\n\tupdateColorBox(color: HSL, boxId: string): void;\n\tupdateHistory(history: Palette[]): void;\n\tvalidateStaticElements(): Promise<void>;\n}\n\nexport interface FormattingUtilsInterface {\n\taddHashToHex(hex: Hex): Hex;\n\tcomponentToHex(component: number): string;\n\tconvertShortHexToLong(hex: string): string;\n\tformatPercentageValues<T extends Record<string, unknown>>(value: T): T;\n\thslAddFormat(value: HSL['value']): HSL;\n\tparseColor(colorSpace: ColorSpace, value: string): Color | null;\n\tparseComponents(value: string, count: number): number[];\n\tstripHashFromHex(hex: Hex): Hex;\n\tstripPercentFromValues<T extends Record<string, number | string>>(\n\t\tvalue: T\n\t): { [K in keyof T]: T[K] extends `${number}%` ? number : T[K] };\n}\n\nexport interface PaletteUtilsInterface {\n\tcreatePaletteItem(color: HSL, itemID: number): PaletteItem;\n\tcreatePaletteItemArray(baseColor: HSL, hues: number[]): PaletteItem[];\n\tcreatePaletteObject(\n\t\toptions: SelectedPaletteOptions,\n\t\tpaletteItems: PaletteItem[]\n\t): Palette;\n\tgenerateAllColorValues(color: HSL): AllColors;\n\tgetPaletteOptionsFromUI(): SelectedPaletteOptions;\n}\n\nexport interface ParseUtilsInterface {\n\tcheckbox(id: string): boolean | void;\n\tcolorInput(input: HTMLInputElement): Hex | HSL | RGB | null;\n\tdropdownSelection(id: string, validOptions: string[]): string | void;\n\tnumberInput(\n\t\tinput: HTMLInputElement,\n\t\tmin?: number,\n\t\tmax?: number\n\t): number | null;\n\ttextInput(input: HTMLInputElement, regex?: RegExp): string | null;\n}\n\nexport interface SanitationUtilsInterface {\n\tlab(value: number, output: 'l' | 'a' | 'b'): LAB_L | LAB_A | LAB_B;\n\tpercentile(value: number): Percentile;\n\tradial(value: number): Radial;\n\trgb(value: number): ByteRange;\n}\n\nexport interface TypeGuardUtilsInterface {\n\tisCMYKColor(value: unknown): value is CMYK;\n\tisCMYKFormat(color: Color): color is CMYK;\n\tisCMYKString(value: unknown): value is CMYKStringObject;\n\tisColor(value: unknown): value is Color;\n\tisColorFormat<T extends Color>(\n\t\tcolor: Color,\n\t\tformat: T['format']\n\t): color is T;\n\tisColorSpace(value: unknown): value is ColorSpace;\n\tisColorSpaceExtended(value: string): value is ColorSpaceExtended;\n\tisColorString(value: unknown): value is ColorStringObject;\n\tisConvertibleColor(\n\t\tcolor: Color\n\t): color is CMYK | Hex | HSL | HSV | LAB | RGB;\n\tisFormat(format: unknown): format is ColorFormat;\n\tisHex(value: unknown): value is Hex;\n\tisHexFormat(color: Color): color is Hex;\n\tisHSLColor(value: unknown): value is HSL;\n\tisHSLFormat(color: Color): color is HSL;\n\tisHSLString(value: unknown): value is HSLStringObject;\n\tisHSVColor(value: unknown): value is HSV;\n\tisHSVFormat(color: Color): color is HSV;\n\tisHSVString(value: unknown): value is HSVStringObject;\n\tisInputElement(element: HTMLElement | null): element is HTMLElement;\n\tisLAB(value: unknown): value is LAB;\n\tisLABFormat(color: Color): color is LAB;\n\tisPaletteType(value: string): value is PaletteType;\n\tisRGB(value: unknown): value is RGB;\n\tisRGBFormat(color: Color): color is RGB;\n\tisSLColor(value: unknown): value is SL;\n\tisSLFormat(color: Color): color is SL;\n\tisSLString(value: unknown): value is SLStringObject;\n\tisSVColor(value: unknown): value is SV;\n\tisSVFormat(color: Color): color is SV;\n\tisSVString(value: unknown): value is SVStringObject;\n\tisXYZ(value: unknown): value is XYZ;\n\tisXYZFormat(color: Color): color is XYZ;\n}\n\nexport interface ValidationUtilsInterface {\n\tcolorValue(color: Color | SL | SV): boolean;\n\tensureHash(value: string): string;\n\thex(value: string, pattern: RegExp): boolean;\n\thexComponent(value: string): boolean;\n\thexSet(value: string): boolean;\n\trange<T extends keyof SetsData>(value: number | string, rangeKey: T): void;\n\tuserColorInput(color: string): boolean;\n}\n\n// ******** 6. UTILITIES OBJECT ********\n\nexport interface UtilitiesInterface {\n\tadjust: AdjustmentUtilsInterface;\n\tapp: AppUtilsInterface;\n\tbrand: BrandingUtilsInterface;\n\tcolor: ColorUtilsInterface;\n\tcore: CoreUtilsInterface;\n\tdom: DOMUtilsInterface;\n\tformat: FormattingUtilsInterface;\n\tpalette: PaletteUtilsInterface;\n\tparse: ParseUtilsInterface;\n\tsanitize: SanitationUtilsInterface;\n\ttypeGuards: TypeGuardUtilsInterface;\n\tvalidate: ValidationUtilsInterface;\n}\n\n// ******** 7. COMMON FUNCTIONS COMPOSITE OBJECT ********\n\nexport interface CommonFunctionsInterface {\n\thelpers: HelpersInterface;\n\tservices: ServicesInterface;\n\tutils: UtilitiesInterface;\n}\n\nexport type RequiredCommonFunctions = Required<CommonFunctionsInterface>;\n\n// ******** 8. CLASSES ********\n\nexport interface AppLoggerClassInterface {\n\tlog(\n\t\tmessage: string,\n\t\tlevel: 'debug' | 'info' | 'warn' | 'error',\n\t\tdebugLevel: number,\n\t\tcaller?: string\n\t): void;\n\tlogAsync(\n\t\tmessage: string,\n\t\tlevel: 'debug' | 'info' | 'warn' | 'error',\n\t\tdebugLevel: number,\n\t\tcaller?: string\n\t): Promise<void>;\n\tlogMutation(\n\t\tdata: MutationLog,\n\t\tlogCallback: (data: MutationLog) => void\n\t): void;\n}\n\nexport interface ErrorHandlerClassInterface {\n\thandle(\n\t\terror: unknown,\n\t\terrorMessage: string,\n\t\tcaller: string,\n\t\tcontext: Record<string, unknown>,\n\t\tseverity: 'warn' | 'error'\n\t): void;\n\thandleAsync<T>(\n\t\taction: () => Promise<T>,\n\t\terrorMessage: string,\n\t\tcaller: string,\n\t\tcontext?: Record<string, unknown>\n\t): Promise<T | null>;\n}\n\nexport interface PaletteManagerClassInterface {\n\thandleColumnLock(columnID: number): void;\n\trenderNewPalette(): void;\n\trenderPaletteColor(\n\t\tcolor: HSL,\n\t\tcolorBox: HTMLDivElement,\n\t\tcolorBoxNumber: number\n\t): void;\n\tswapColumns(draggedID: number, targetID: number): void;\n}\n\nexport interface StateManagerClassInterface {\n\taddPaletteToHistory(palette: Palette): void;\n\tgetState(): State;\n\tredo(): void;\n\tresetState(): void;\n\tsetState(state: State, track: boolean): void;\n\tundo(): void;\n\tupdateAppModeState(appMode: State['appMode'], track: boolean): void;\n\tupdatePaletteColumns(\n\t\tcolumns: State['paletteContainer']['columns'],\n\t\ttrack: boolean,\n\t\tverbosity: number\n\t): void;\n\tupdatePaletteColumnSize(columnID: number, newSize: number): void;\n\tupdatePaletteHistory(updatedHistory: Palette[]): void;\n\tupdateSelections(\n\t\tselections: Partial<State['selections']>,\n\t\ttrack: boolean\n\t): void;\n}\n\n// ******** 10. FUNCTION INTERFACES ********\n\nexport interface GenerateHuesFn {\n\t(\n\t\tcolor: HSL,\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface,\n\t\tgenerateHues: GenerateHuesFnGroup\n\t): number[];\n}\n\nexport interface GeneratePaletteFn {\n\t(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface,\n\t\tgenerateHues: GenerateHuesFnGroup,\n\t\tgeneratePalette: GeneratePaletteFnGroup\n\t): Palette;\n}\n\n// ******** 11. FUNCTION OBJECTS ********\n\nexport interface GenerateHuesFnGroup {\n\tanalogous(\n\t\tcolor: HSL,\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface\n\t): number[];\n\tdiadic(\n\t\tcolor: HSL,\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface\n\t): number[];\n\thexadic(color: HSL, common: CommonFunctionsInterface): number[];\n\tsplitComplementary(color: HSL, common: CommonFunctionsInterface): number[];\n\ttetradic(color: HSL, common: CommonFunctionsInterface): number[];\n\ttriadic(color: HSL, common: CommonFunctionsInterface): number[];\n}\n\nexport interface GeneratePaletteFnGroup {\n\tanalogous(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface,\n\t\tgenerateHues: GenerateHuesFnGroup\n\t): Palette;\n\tcomplementary(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface\n\t): Palette;\n\tdiadic(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface,\n\t\tgenerateHues: GenerateHuesFnGroup\n\t): Palette;\n\thexadic(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface,\n\t\tgenerateHues: GenerateHuesFnGroup\n\t): Palette;\n\tmonochromatic(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface\n\t): Palette;\n\trandom(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface\n\t): Palette;\n\tsplitComplementary(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface\n\t): Palette;\n\ttetradic(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface,\n\t\tgenerateHues: GenerateHuesFnGroup\n\t): Palette;\n\ttriadic(\n\t\toptions: SelectedPaletteOptions,\n\t\tcommon: CommonFunctionsInterface,\n\t\tgenerateHues: GenerateHuesFnGroup\n\t): Palette;\n}\n"]}