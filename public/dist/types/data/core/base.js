// File: types/data/core/base.js
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy9kYXRhL2NvcmUvYmFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQ0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiB0eXBlcy9kYXRhL2NvcmUvYmFzZS5qc1xuXG5pbXBvcnQge1xuXHRDTVlLLFxuXHRDTVlLX1N0cmluZ1Byb3BzLFxuXHRDb2xvclNwYWNlLFxuXHRIZXgsXG5cdEhleF9TdHJpbmdQcm9wcyxcblx0SFNMLFxuXHRIU0xfU3RyaW5nUHJvcHMsXG5cdEhTVixcblx0SFNWX1N0cmluZ1Byb3BzLFxuXHRMQUIsXG5cdExBQl9TdHJpbmdQcm9wcyxcblx0TXV0YXRpb25Mb2csXG5cdFBhbGV0dGUsXG5cdFBhbGV0dGVJdGVtLFxuXHRQYWxldHRlT3B0aW9ucyxcblx0U0wsXG5cdFNMX1N0cmluZ1Byb3BzLFxuXHRTVixcblx0U1ZfU3RyaW5nUHJvcHMsXG5cdFJHQixcblx0UkdCX1N0cmluZ1Byb3BzLFxuXHRTdG9yZWRQYWxldHRlLFxuXHRVbmJyYW5kZWRDTVlLLFxuXHRVbmJyYW5kZWRIZXgsXG5cdFVuYnJhbmRlZEhTTCxcblx0VW5icmFuZGVkSFNWLFxuXHRVbmJyYW5kZWRMQUIsXG5cdFVuYnJhbmRlZFNMLFxuXHRVbmJyYW5kZWRTVixcblx0VW5icmFuZGVkUkdCLFxuXHRVbmJyYW5kZWRQYWxldHRlLFxuXHRVbmJyYW5kZWRQYWxldHRlSXRlbSxcblx0VW5icmFuZGVkU3RvcmVkUGFsZXR0ZSxcblx0VW5icmFuZGVkWFlaLFxuXHRYWVosXG5cdFhZWl9TdHJpbmdQcm9wc1xufSBmcm9tICcuLi8uLi9pbmRleC5qcyc7XG5cbmV4cG9ydCB0eXBlIEFwcE1vZGVEYXRhID0gJ2RldicgfCAncHJvZCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlnRGF0YUludGVyZmFjZSB7XG5cdGRiOiB7XG5cdFx0REVGQVVMVF9LRVlTOiB7XG5cdFx0XHRBUFBfU0VUVElOR1M6IHN0cmluZztcblx0XHRcdENVU1RPTV9DT0xPUjogc3RyaW5nO1xuXHRcdH07XG5cdFx0REVGQVVMVF9TRVRUSU5HUzoge1xuXHRcdFx0Y29sb3JTcGFjZTogQ29sb3JTcGFjZTtcblx0XHRcdGxhc3RUYWJsZUlEOiBudW1iZXI7XG5cdFx0XHR0aGVtZTogJ2xpZ2h0JyB8ICdkYXJrJztcblx0XHRcdGxvZ2dpbmdFbmFibGVkOiBib29sZWFuO1xuXHRcdH07XG5cdFx0U1RPUkVfTkFNRVM6IHtcblx0XHRcdEFQUF9TRVRUSU5HUzogc3RyaW5nO1xuXHRcdFx0Q1VTVE9NX0NPTE9SOiBzdHJpbmc7XG5cdFx0XHRNVVRBVElPTlM6IHN0cmluZztcblx0XHRcdFBBTExFVEVTOiBzdHJpbmc7XG5cdFx0XHRTRVRUSU5HUzogc3RyaW5nO1xuXHRcdFx0VEFCTEVTOiBzdHJpbmc7XG5cdFx0fTtcblx0fTtcblx0cmVnZXg6IHtcblx0XHRjb2xvcnM6IHtcblx0XHRcdGNteWs6IFJlZ0V4cDtcblx0XHRcdGhleDogUmVnRXhwO1xuXHRcdFx0aHNsOiBSZWdFeHA7XG5cdFx0XHRoc3Y6IFJlZ0V4cDtcblx0XHRcdGxhYjogUmVnRXhwO1xuXHRcdFx0cmdiOiBSZWdFeHA7XG5cdFx0XHR4eXo6IFJlZ0V4cDtcblx0XHR9O1xuXHRcdGRvbToge1xuXHRcdFx0aGV4OiBSZWdFeHA7XG5cdFx0XHRoc2w6IFJlZ0V4cDtcblx0XHRcdHJnYjogUmVnRXhwO1xuXHRcdH07XG5cdFx0ZmlsZToge1xuXHRcdFx0cGFsZXR0ZToge1xuXHRcdFx0XHRjc3M6IHtcblx0XHRcdFx0XHRjb2xvcjogUmVnRXhwO1xuXHRcdFx0XHRcdG1ldGFkYXRhOiBSZWdFeHA7XG5cdFx0XHRcdH07XG5cdFx0XHR9O1xuXHRcdH07XG5cdH07XG59XG5cbmludGVyZmFjZSBQYWxldHRlUmFuZ2VTaGlmdFByb3BlcnRpZXMge1xuXHRodWU6IG51bWJlcjtcblx0c2F0OiBudW1iZXI7XG5cdGxpZ2h0OiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29uc3RzRGF0YUludGVyZmFjZSB7XG5cdGFkanVzdG1lbnRzOiB7XG5cdFx0c2xhVmFsdWU6IG51bWJlcjtcblx0fTtcblx0ZGVib3VuY2U6IHtcblx0XHRidG46IG51bWJlcjtcblx0XHRpbnB1dDogbnVtYmVyO1xuXHR9O1xuXHRsaW1pdHM6IHtcblx0XHR4eXo6IHtcblx0XHRcdG1heDoge1xuXHRcdFx0XHR4OiBudW1iZXI7XG5cdFx0XHRcdHk6IG51bWJlcjtcblx0XHRcdFx0ejogbnVtYmVyO1xuXHRcdFx0fTtcblx0XHRcdG1pbjoge1xuXHRcdFx0XHR4OiBudW1iZXI7XG5cdFx0XHRcdHk6IG51bWJlcjtcblx0XHRcdFx0ejogbnVtYmVyO1xuXHRcdFx0fTtcblx0XHR9O1xuXHR9O1xuXHRwYWxldHRlUmFuZ2VzOiB7XG5cdFx0c2hpZnQ6IHtcblx0XHRcdGNvbXA6IFBhbGV0dGVSYW5nZVNoaWZ0UHJvcGVydGllcztcblx0XHRcdGRpYWRpYzogUGFsZXR0ZVJhbmdlU2hpZnRQcm9wZXJ0aWVzO1xuXHRcdFx0aGV4YWQ6IFBhbGV0dGVSYW5nZVNoaWZ0UHJvcGVydGllcztcblx0XHRcdHJhbmRvbTogUGFsZXR0ZVJhbmdlU2hpZnRQcm9wZXJ0aWVzO1xuXHRcdFx0c3BsaXRDb21wOiBQYWxldHRlUmFuZ2VTaGlmdFByb3BlcnRpZXM7XG5cdFx0XHR0ZXRyYTogUGFsZXR0ZVJhbmdlU2hpZnRQcm9wZXJ0aWVzO1xuXHRcdFx0dHJpYWQ6IFBhbGV0dGVSYW5nZVNoaWZ0UHJvcGVydGllcztcblx0XHR9O1xuXHR9O1xuXHRwcm9iYWJpbGl0aWVzOiB7XG5cdFx0dmFsdWVzOiByZWFkb25seSBudW1iZXJbXTtcblx0XHR3ZWlnaHRzOiByZWFkb25seSBudW1iZXJbXTtcblx0fTtcblx0dGhyZXNob2xkczoge1xuXHRcdGRhcms6IG51bWJlcjtcblx0XHRncmF5OiBudW1iZXI7XG5cdFx0bGlnaHQ6IG51bWJlcjtcblx0fTtcblx0dGltZW91dHM6IHtcblx0XHRjb3B5QnV0dG9uVGV4dDogbnVtYmVyO1xuXHRcdHRvYXN0OiBudW1iZXI7XG5cdFx0dG9vbHRpcDogbnVtYmVyO1xuXHR9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERhdGFTZXRzSW50ZXJmYWNlIHtcblx0Qnl0ZVJhbmdlOiByZWFkb25seSBbMCwgMjU1XTtcblx0SGV4U2V0OiAnSGV4U2V0Jztcblx0TEFCX0w6IHJlYWRvbmx5IFswLCAxMDBdO1xuXHRMQUJfQTogcmVhZG9ubHkgWy0xMjgsIDEyN107XG5cdExBQl9COiByZWFkb25seSBbLTEyOCwgMTI3XTtcblx0UGVyY2VudGlsZTogcmVhZG9ubHkgWzAsIDEwMF07XG5cdFJhZGlhbDogcmVhZG9ubHkgWzAsIDM2MF07XG5cdFhZWl9YOiByZWFkb25seSBbbnVtYmVyLCBudW1iZXJdO1xuXHRYWVpfWTogcmVhZG9ubHkgW251bWJlciwgbnVtYmVyXTtcblx0WFlaX1o6IHJlYWRvbmx5IFtudW1iZXIsIG51bWJlcl07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmYXVsdERhdGFJbnRlcmZhY2Uge1xuXHRjb2xvcnM6IHtcblx0XHRiYXNlOiB7XG5cdFx0XHRicmFuZGVkOiB7XG5cdFx0XHRcdGNteWs6IENNWUs7XG5cdFx0XHRcdGhleDogSGV4O1xuXHRcdFx0XHRoc2w6IEhTTDtcblx0XHRcdFx0aHN2OiBIU1Y7XG5cdFx0XHRcdGxhYjogTEFCO1xuXHRcdFx0XHRyZ2I6IFJHQjtcblx0XHRcdFx0c2w6IFNMO1xuXHRcdFx0XHRzdjogU1Y7XG5cdFx0XHRcdHh5ejogWFlaO1xuXHRcdFx0fTtcblx0XHRcdHVuYnJhbmRlZDoge1xuXHRcdFx0XHRjbXlrOiBVbmJyYW5kZWRDTVlLO1xuXHRcdFx0XHRoZXg6IFVuYnJhbmRlZEhleDtcblx0XHRcdFx0aHNsOiBVbmJyYW5kZWRIU0w7XG5cdFx0XHRcdGhzdjogVW5icmFuZGVkSFNWO1xuXHRcdFx0XHRsYWI6IFVuYnJhbmRlZExBQjtcblx0XHRcdFx0cmdiOiBVbmJyYW5kZWRSR0I7XG5cdFx0XHRcdHNsOiBVbmJyYW5kZWRTTDtcblx0XHRcdFx0c3Y6IFVuYnJhbmRlZFNWO1xuXHRcdFx0XHR4eXo6IFVuYnJhbmRlZFhZWjtcblx0XHRcdH07XG5cdFx0fTtcblx0XHRzdHJpbmdzOiB7XG5cdFx0XHRjbXlrOiBDTVlLX1N0cmluZ1Byb3BzO1xuXHRcdFx0aGV4OiBIZXhfU3RyaW5nUHJvcHM7XG5cdFx0XHRoc2w6IEhTTF9TdHJpbmdQcm9wcztcblx0XHRcdGhzdjogSFNWX1N0cmluZ1Byb3BzO1xuXHRcdFx0bGFiOiBMQUJfU3RyaW5nUHJvcHM7XG5cdFx0XHRyZ2I6IFJHQl9TdHJpbmdQcm9wcztcblx0XHRcdHNsOiBTTF9TdHJpbmdQcm9wcztcblx0XHRcdHN2OiBTVl9TdHJpbmdQcm9wcztcblx0XHRcdHh5ejogWFlaX1N0cmluZ1Byb3BzO1xuXHRcdH07XG5cdFx0Y3NzOiB7XG5cdFx0XHRjbXlrOiBzdHJpbmc7XG5cdFx0XHRoZXg6IHN0cmluZztcblx0XHRcdGhzbDogc3RyaW5nO1xuXHRcdFx0aHN2OiBzdHJpbmc7XG5cdFx0XHRsYWI6IHN0cmluZztcblx0XHRcdHJnYjogc3RyaW5nO1xuXHRcdFx0c2w6IHN0cmluZztcblx0XHRcdHN2OiBzdHJpbmc7XG5cdFx0XHR4eXo6IHN0cmluZztcblx0XHR9O1xuXHR9O1xuXHRpZGI6IHtcblx0XHRtdXRhdGlvbjogTXV0YXRpb25Mb2c7XG5cdH07XG5cdHBhbGV0dGU6IHtcblx0XHRicmFuZGVkOiB7XG5cdFx0XHRkYXRhOiBQYWxldHRlO1xuXHRcdFx0aXRlbTogUGFsZXR0ZUl0ZW07XG5cdFx0XHRzdG9yZWQ6IFN0b3JlZFBhbGV0dGU7XG5cdFx0fTtcblx0XHR1bmJyYW5kZWQ6IHtcblx0XHRcdGRhdGE6IFVuYnJhbmRlZFBhbGV0dGU7XG5cdFx0XHRpdGVtOiBVbmJyYW5kZWRQYWxldHRlSXRlbTtcblx0XHRcdHN0b3JlZDogVW5icmFuZGVkU3RvcmVkUGFsZXR0ZTtcblx0XHR9O1xuXHR9O1xuXHRwYWxldHRlT3B0aW9uczogUGFsZXR0ZU9wdGlvbnM7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9kZURhdGFJbnRlcmZhY2Uge1xuXHRkZWJ1ZzogYm9vbGVhbjtcblx0ZGVidWdMZXZlbDogMCB8IDEgfCAyIHwgMyB8IDQgfCA1O1xuXHRlbnZpcm9ubWVudDogJ2RldicgfCAncHJvZCcgfCAndGVzdCc7XG5cdGV4cG9zZToge1xuXHRcdGlkYk1hbmFnZXI6IGJvb2xlYW47XG5cdFx0bG9nZ2VyOiBib29sZWFuO1xuXHRcdHVpTWFuYWdlcjogYm9vbGVhbjtcblx0fTtcblx0Z3JhY2VmdWxFcnJvcnM6IGJvb2xlYW47XG5cdGxvZ2dpbmc6IHtcblx0XHRhcmdzOiBib29sZWFuO1xuXHRcdGNsaWNrczogYm9vbGVhbjtcblx0XHRkZWJ1ZzogYm9vbGVhbjtcblx0XHRlcnJvcjogYm9vbGVhbjtcblx0XHRpbmZvOiBib29sZWFuO1xuXHRcdHZlcmJvc2l0eTogMCB8IDEgfCAyIHwgMyB8IDQgfCA1O1xuXHRcdHdhcm46IGJvb2xlYW47XG5cdH07XG5cdHF1aWV0OiBib29sZWFuO1xuXHRzaG93QWxlcnRzOiBib29sZWFuO1xuXHRzdGFja1RyYWNlOiBib29sZWFuO1xufVxuIl19