{"version":3,"file":"IDBManager.js","sources":["../../../../src/storage/IDBManager.ts"],"sourcesContent":["// File: storage/IDBManager.ts\n\nimport { IDBManagerInterface, Services } from '../types/index.js';\nimport { config } from '../config/index.js';\n\nconst dbName = config.storage.idbDBName;\nconst defaultVerson = config.storage.idbDefaultVersion;\nconst idbRetryDelay = config.env.idbRetryDelay;\nconst storeName = config.storage.idbStoreName;\n\nexport class IDBManager implements IDBManagerInterface {\n\tstatic #instance: IDBManager | null = null;\n\t#defaultVersion: number;\n\t#version: number;\n\t#db: IDBDatabase | null = null;\n\t#log: Services['log'];\n\t#errors: Services['errors'];\n\n\tprivate constructor(services: Services) {\n\t\tthis.#defaultVersion = defaultVerson;\n\t\tthis.#version = this.#defaultVersion;\n\t\tthis.#log = services.log;\n\t\tthis.#errors = services.errors;\n\t}\n\n\tstatic getInstance(services: Services): IDBManager {\n\t\tif (!IDBManager.#instance) {\n\t\t\tIDBManager.#instance = new IDBManager(services);\n\t\t}\n\n\t\treturn IDBManager.#instance;\n\t}\n\n\tasync init(): Promise<boolean> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tif (!window.indexedDB) {\n\t\t\t\tthrow new Error('IndexedDB is not supported in this browser');\n\t\t\t}\n\n\t\t\tconsole.log('[IDBManager.init] Opening IndexedDB...');\n\t\t\tconst request = indexedDB.open(dbName, this.#version);\n\n\t\t\treturn await new Promise((resolve, reject) => {\n\t\t\t\tlet upgradeComplete = false;\n\n\t\t\t\trequest.onupgradeneeded = event => {\n\t\t\t\t\tconst db = (event.target as IDBOpenDBRequest).result;\n\t\t\t\t\tthis.#log(\n\t\t\t\t\t\t`Upgrading IndexedDB to version: ${this.#version}`,\n\t\t\t\t\t\t{ caller: '[IDBManager.init]', level: 'warn' }\n\t\t\t\t\t);\n\n\t\t\t\t\tif (!db.objectStoreNames.contains(storeName)) {\n\t\t\t\t\t\tdb.createObjectStore(storeName, {\n\t\t\t\t\t\t\tkeyPath: 'id',\n\t\t\t\t\t\t\tautoIncrement: true\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.#log(`Created object store: ${storeName}`, {\n\t\t\t\t\t\t\tcaller: '[IDBManager.init]',\n\t\t\t\t\t\t\tlevel: 'info'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tupgradeComplete = true;\n\t\t\t\t};\n\n\t\t\t\trequest.onsuccess = event => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!upgradeComplete &&\n\t\t\t\t\t\trequest.result.version !== this.#version\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.#log('Waiting for upgrade to finish.', {\n\t\t\t\t\t\t\tcaller: '[IDBManager.init]',\n\t\t\t\t\t\t\tlevel: 'warn'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis.#db = (event.target as IDBOpenDBRequest).result;\n\t\t\t\t\tthis.#db.onversionchange = () => {\n\t\t\t\t\t\tthis.#db?.close();\n\t\t\t\t\t\tthis.#log(\n\t\t\t\t\t\t\t'IndexedDB version changed. Closing database',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcaller: '[IDBManager.init]',\n\t\t\t\t\t\t\t\tlevel: 'warn'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.#log(`IndexedDB opened successfully`, {\n\t\t\t\t\t\tcaller: '[IDBManager.init]',\n\t\t\t\t\t\tlevel: 'info'\n\t\t\t\t\t});\n\t\t\t\t\tresolve(true);\n\t\t\t\t};\n\n\t\t\t\trequest.onerror = event => {\n\t\t\t\t\treject(\n\t\t\t\t\t\t(event.target as IDBOpenDBRequest).error?.message ||\n\t\t\t\t\t\t\t'Unknown IDBManager.init() error'\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\trequest.onblocked = () => {\n\t\t\t\t\tthis.#log(`[IDBManager.init] IndexedDB upgade blocked!`, {\n\t\t\t\t\t\tcaller: '[IDBManager.init]',\n\t\t\t\t\t\tlevel: 'warn'\n\t\t\t\t\t});\n\t\t\t\t\treject(\n\t\t\t\t\t\t`Upgrade blocked. Close other tabs using this database.`\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t});\n\t\t}, 'Failed to initialize IndexedDB');\n\t}\n\n\tasync clear(): Promise<void> {\n\t\treturn await this.#errors.handleAsync(async () => {\n\t\t\tconst store = this.getTransaction('readwrite');\n\t\t\tif (!store) throw new Error('IndexedDB is not initialized.');\n\n\t\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\t\tconst request = store.clear();\n\t\t\t\trequest.onsuccess = () => resolve();\n\t\t\t\trequest.onerror = event =>\n\t\t\t\t\treject(\n\t\t\t\t\t\t(event.target as IDBRequest).error?.message ||\n\t\t\t\t\t\t\t'Unknown IDBManager.clear() error'\n\t\t\t\t\t);\n\t\t\t});\n\t\t}, 'Failed to clear IndexedDB');\n\t}\n\n\tasync ensureDBReady(): Promise<void> {\n\t\twhile (!this.#db) {\n\t\t\tthis.#log('Waiting for IndexedDB to initialize...', {\n\t\t\t\tcaller: '[IDBManager.ensureDBReady]',\n\t\t\t\tlevel: 'warn'\n\t\t\t});\n\t\t\t// TODO: replace with a better solution??\n\t\t\tawait new Promise(resolve => setTimeout(resolve, idbRetryDelay));\n\t\t}\n\t}\n\n\tasync getItem<T>(key: string): Promise<T | null> {\n\t\tawait this.ensureDBReady();\n\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tconst store = this.getTransaction('readonly');\n\t\t\tif (!store) throw new Error('IndexedDB is not initialized.');\n\n\t\t\treturn await new Promise<T | null>((resolve, reject) => {\n\t\t\t\tconst request = store.get(key);\n\t\t\t\trequest.onsuccess = () =>\n\t\t\t\t\tresolve(request.result?.value ?? null);\n\t\t\t\trequest.onerror = event =>\n\t\t\t\t\treject(\n\t\t\t\t\t\t(event.target as IDBRequest).error?.message ||\n\t\t\t\t\t\t\t'Unknown IDBManager.getItem() error'\n\t\t\t\t\t);\n\t\t\t});\n\t\t}, `Failed to retrieve item ${key} from IndexedDB`);\n\t}\n\n\tasync setItem(key: string, value: unknown): Promise<void> {\n\t\treturn await this.#errors.handleAsync(async () => {\n\t\t\tconst store = this.getTransaction('readwrite');\n\t\t\tif (!store) throw new Error('IndexedDB is not initialized.');\n\n\t\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\t\tconst request = store.put({ id: key, value });\n\t\t\t\trequest.onsuccess = () => resolve();\n\t\t\t\trequest.onerror = event =>\n\t\t\t\t\treject(\n\t\t\t\t\t\t(event.target as IDBRequest).error?.message ||\n\t\t\t\t\t\t\t'Unknown IDBManager.setItem() error'\n\t\t\t\t\t);\n\t\t\t});\n\t\t}, `Failed to store item ${key} in IndexedDB`);\n\t}\n\n\tasync removeItem(key: string): Promise<void> {\n\t\treturn await this.#errors.handleAsync(async () => {\n\t\t\tconst store = this.getTransaction('readwrite');\n\t\t\tif (!store) throw new Error('IndexedDB is not initialized.');\n\n\t\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\t\tconst request = store.delete(key);\n\t\t\t\trequest.onsuccess = () => resolve();\n\t\t\t\trequest.onerror = event =>\n\t\t\t\t\treject(\n\t\t\t\t\t\t(event.target as IDBRequest).error?.message ||\n\t\t\t\t\t\t\t'Unknown IDBManager.removeItem() error'\n\t\t\t\t\t);\n\t\t\t});\n\t\t}, `Failed to remove item ${key} from IndexedDB`);\n\t}\n\n\tprivate getTransaction(mode: IDBTransactionMode): IDBObjectStore | void {\n\t\treturn this.#errors.handleSync(() => {\n\t\t\tif (!this.#db) throw new Error('IndexedDB is not initialized.');\n\t\t\tconst transaction = this.#db.transaction(storeName, mode);\n\t\t\treturn transaction.objectStore(storeName);\n\t\t}, `Failed to get IndexedDB transaction (${mode})`);\n\t}\n}\n"],"names":[],"mappings":"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"}