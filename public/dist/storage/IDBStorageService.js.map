{"version":3,"file":"IDBStorageService.js","sources":["../../../../src/storage/IDBStorageService.ts"],"sourcesContent":["// File: storage/IDBStorageService.ts\n\nimport { IDBStorageContract, Services } from '../types/index.js';\nimport { config, env } from '../config/index.js';\n\nconst caller = 'IDBStorageService';\nconst dbName = config.storage.idbDBName;\nconst defaultVerson = config.storage.idbDefaultVersion;\nconst idbRetryDelay = env.idb.retryDelay;\nconst maxReadyAttempts = env.idb.maxReadyAttempts;\nconst storeName = config.storage.idbStoreName;\n\nexport class IDBStorageService implements IDBStorageContract {\n\tstatic #instance: IDBStorageService | null = null;\n\n\t#defaultVersion: number;\n\t#version: number;\n\t#db: IDBDatabase | null = null;\n\n\t#isEnsuringDBReady: boolean = false;\n\n\t#errors: Services['errors'];\n\t#log: Services['log'];\n\n\tprivate constructor(services: Services) {\n\t\ttry {\n\t\t\tservices.log.info(\n\t\t\t\t`Constructing ${caller} instance.`,\n\t\t\t\t`${caller} constructor`\n\t\t\t);\n\n\t\t\tthis.#defaultVersion = defaultVerson;\n\t\t\tthis.#version = this.#defaultVersion;\n\t\t\tthis.#errors = services.errors;\n\t\t\tthis.#log = services.log;\n\t\t} catch (error) {\n\t\t\tthrow new Error(\n\t\t\t\t`[${caller} constructor]: ${\n\t\t\t\t\terror instanceof Error ? error.message : error\n\t\t\t\t}`\n\t\t\t);\n\t\t}\n\t}\n\n\tstatic async getInstance(services: Services): Promise<IDBStorageService> {\n\t\treturn services.errors.handleSync(() => {\n\t\t\tif (!IDBStorageService.#instance) {\n\t\t\t\tservices.log.debug(\n\t\t\t\t\t`No ${caller} instance exists yet. Creating new instance.`,\n\t\t\t\t\t`${caller}.getInstance`\n\t\t\t\t);\n\n\t\t\t\tIDBStorageService.#instance = new IDBStorageService(services);\n\t\t\t}\n\n\t\t\tservices.log.debug(\n\t\t\t\t`Returning existing ${caller} instance.`,\n\t\t\t\t`${caller}.getInstance`\n\t\t\t);\n\n\t\t\treturn IDBStorageService.#instance;\n\t\t}, `[${caller}]: Failed to create IDBManager instance.`);\n\t}\n\n\tasync init(): Promise<boolean> {\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tif (!window.indexedDB) {\n\t\t\t\tthrow new Error('IndexedDB is not supported in this browser');\n\t\t\t}\n\n\t\t\tthis.#log.info(`Opening IndexedDB...`, `${caller}.init`);\n\n\t\t\treturn await new Promise((resolve, reject) => {\n\t\t\t\tconst request = indexedDB.open(dbName, this.#version);\n\n\t\t\t\trequest.onupgradeneeded = event => {\n\t\t\t\t\tconst db = (event.target as IDBOpenDBRequest).result;\n\n\t\t\t\t\tthis.#log.warn(\n\t\t\t\t\t\t`Upgrading IndexedDB to version: ${this.#version}`,\n\t\t\t\t\t\t`${caller}.init`\n\t\t\t\t\t);\n\n\t\t\t\t\tif (!db.objectStoreNames.contains(storeName)) {\n\t\t\t\t\t\tdb.createObjectStore(storeName, {\n\t\t\t\t\t\t\tkeyPath: 'id',\n\t\t\t\t\t\t\tautoIncrement: true\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.#log.info(\n\t\t\t\t\t\t\t`Created object store: ${storeName}`,\n\t\t\t\t\t\t\t`${caller}.init`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\trequest.onsuccess = event => {\n\t\t\t\t\tthis.#db = (event.target as IDBOpenDBRequest).result;\n\t\t\t\t\tthis.#db.onversionchange = () => {\n\t\t\t\t\t\tthis.#db?.close();\n\t\t\t\t\t\tthis.#log.warn(\n\t\t\t\t\t\t\t'IndexedDB version changed. Closing database',\n\t\t\t\t\t\t\t`${caller}.init`\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.#log.info(`IndexedDB opened successfully`, `${caller}.init`);\n\t\t\t\t\tresolve(true);\n\t\t\t\t};\n\n\t\t\t\trequest.onerror = event => {\n\t\t\t\t\tthis.#log.error(\n\t\t\t\t\t\t`[${caller}]: IndexedDB error: ${(event.target as IDBOpenDBRequest).error?.message || 'Unknown error'}`,\n\t\t\t\t\t\t`${caller}.init`\n\t\t\t\t\t);\n\t\t\t\t\treject(\n\t\t\t\t\t\t(event.target as IDBOpenDBRequest).error?.message ||\n\t\t\t\t\t\t\t`Unknown ${caller}.init error.`\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\trequest.onblocked = () => {\n\t\t\t\t\tthis.#log.warn(`IndexedDB upgade blocked!`, `${caller}.init`);\n\t\t\t\t\treject(`Upgrade blocked. Close other tabs using this database.`);\n\t\t\t\t};\n\t\t\t});\n\t\t}, `[${caller}]: Failed to initialize IndexedDB`);\n\t}\n\n\tasync clear(): Promise<void> {\n\t\treturn await this.#errors.handleAsync(async () => {\n\t\t\tconst store = await this.#getTransaction('readwrite');\n\n\t\t\tif (!store) throw new Error(`${caller} is not initialized.`);\n\n\t\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\t\tconst request = store.clear();\n\n\t\t\t\trequest.onsuccess = () => resolve();\n\n\t\t\t\trequest.onerror = event =>\n\t\t\t\t\treject(\n\t\t\t\t\t\t(event.target as IDBRequest).error?.message ||\n\t\t\t\t\t\t\t`Unknown ${caller}.clear error`\n\t\t\t\t\t);\n\t\t\t});\n\t\t}, `[${caller}]: Failed to clear IndexedDB.`);\n\t}\n\n\tasync ensureDBReady(): Promise<void> {\n\t\treturn await this.#errors.handleAsync(async () => {\n\t\t\tif (this.#db) return; // already initialized\n\n\t\t\tif (this.#isEnsuringDBReady) {\n\t\t\t\t// if another process is already ensuring readiness, wait for it\n\t\t\t\tlet attempts = 0;\n\t\t\t\twhile (!this.#db && attempts < maxReadyAttempts) {\n\t\t\t\t\tthis.#log.warn(\n\t\t\t\t\t\t`[IDBStorageService] Waiting for DB to be ready (Attempt ${attempts + 1})`,\n\t\t\t\t\t\t`${caller}.ensureDBReady`\n\t\t\t\t\t);\n\n\t\t\t\t\tawait new Promise(res => setTimeout(res, idbRetryDelay));\n\n\t\t\t\t\tattempts++;\n\t\t\t\t}\n\t\t\t\tif (!this.#db)\n\t\t\t\t\tthrow new Error(`[IDBStorageService]: DB never became ready.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// first process to trigger ensureDBReady takes responsibility for init\n\t\t\tthis.#isEnsuringDBReady = true;\n\n\t\t\ttry {\n\t\t\t\tawait this.init();\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(`[IDBStorageService]: Failed to initialize: ${error}`);\n\t\t\t} finally {\n\t\t\t\tthis.#isEnsuringDBReady = false;\n\t\t\t}\n\t\t}, `[${caller}]: Failed to ensure IndexedDB is ready`);\n\t}\n\n\tasync getItem<T>(key: string): Promise<T | null> {\n\t\tawait this.ensureDBReady();\n\n\t\treturn this.#errors.handleAsync(async () => {\n\t\t\tconst store = await this.#getTransaction('readonly');\n\n\t\t\tif (!store) throw new Error(`${caller} is not initialized.`);\n\n\t\t\treturn await new Promise<T | null>((resolve, reject) => {\n\t\t\t\tconst request = store.get(key);\n\n\t\t\t\trequest.onsuccess = () => resolve(request.result?.value ?? null);\n\n\t\t\t\trequest.onerror = event =>\n\t\t\t\t\treject(\n\t\t\t\t\t\t(event.target as IDBRequest).error?.message ||\n\t\t\t\t\t\t\t`Unknown ${caller}.getItem() error`\n\t\t\t\t\t);\n\t\t\t});\n\t\t}, `[${caller}]: Failed to retrieve item ${key} from IndexedDB`);\n\t}\n\n\tasync setItem(key: string, value: unknown): Promise<void> {\n\t\treturn await this.#errors.handleAsync(async () => {\n\t\t\tconst store = await this.#getTransaction('readwrite');\n\n\t\t\tif (!store) throw new Error(`${caller} is not initialized.`);\n\n\t\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\t\tconst request = store.put({ id: key, value });\n\n\t\t\t\trequest.onsuccess = () => resolve();\n\n\t\t\t\trequest.onerror = event =>\n\t\t\t\t\treject(\n\t\t\t\t\t\t(event.target as IDBRequest).error?.message ||\n\t\t\t\t\t\t\t`Unknown ${caller}.setItem error`\n\t\t\t\t\t);\n\t\t\t});\n\t\t}, `[${caller}]: Failed to store item ${key} in IndexedDB`);\n\t}\n\n\tasync removeItem(key: string): Promise<void> {\n\t\treturn await this.#errors.handleAsync(async () => {\n\t\t\tconst store = await this.#getTransaction('readwrite');\n\n\t\t\tif (!store) throw new Error(`${caller} is not initialized.`);\n\n\t\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\t\tconst request = store.delete(key);\n\n\t\t\t\trequest.onsuccess = () => resolve();\n\n\t\t\t\trequest.onerror = event =>\n\t\t\t\t\treject(\n\t\t\t\t\t\t(event.target as IDBRequest).error?.message ||\n\t\t\t\t\t\t\t`Unknown ${caller}.removeItem error.`\n\t\t\t\t\t);\n\t\t\t});\n\t\t}, `[${caller}]: Failed to remove item ${key} from IndexedDB`);\n\t}\n\n\tasync #getTransaction(\n\t\tmode: IDBTransactionMode\n\t): Promise<IDBObjectStore | void> {\n\t\treturn await this.#errors.handleAsync(async () => {\n\t\t\tawait this.ensureDBReady();\n\n\t\t\tif (!this.#db) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`${caller} is still uninitialized after ensureDBReady.`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst transaction = this.#db.transaction(storeName, mode);\n\t\t\t\treturn transaction.objectStore(storeName);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`[${caller}]: Failed to get IndexedDB transaction (${mode})`\n\t\t\t\t);\n\t\t\t}\n\t\t}, `[${caller}]: Failed to get IndexedDB transaction (${mode})`);\n\t}\n}\n"],"names":[],"mappings":"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"}