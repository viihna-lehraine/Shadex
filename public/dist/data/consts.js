// File: data/consts.js
const adjustments = { slaValue: 10 };
const debounce = { button: 300, input: 200 };
const limits = {
    xyz: { max: { x: 95.047, y: 100, z: 108.883 }, min: { x: 0, y: 0, z: 0 } }
};
const paletteRanges = {
    comp: { hueShift: 10, lightShift: 0, satShift: 0 },
    diadic: { hueShift: 30, lightShift: 30, satShift: 30 },
    hexad: { hueShift: 0, lightShift: 30, satShift: 30 },
    random: { hueShift: 0, lightShift: 0, satShift: 0 },
    splitComp: { hueShift: 30, lightShift: 30, satShift: 30 },
    tetra: { hueShift: 0, lightShift: 30, satShift: 30 },
    triad: { hueShift: 0, lightShift: 30, satShift: 30 }
};
const probabilities = {
    values: [40, 45, 50, 55, 60, 65, 70],
    weights: [0.1, 0.15, 0.2, 0.3, 0.15, 0.05, 0.05]
};
const thresholds = { dark: 25, gray: 20, light: 75 };
const timeouts = { copyButtonText: 1000, toast: 3000, tooltip: 1000 };
export const constsData = {
    adjustments,
    debounce,
    limits,
    paletteRanges,
    probabilities,
    thresholds,
    timeouts
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2RhdGEvY29uc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QjtBQUl2QixNQUFNLFdBQVcsR0FBRyxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsQ0FBQztBQUVyQyxNQUFNLFFBQVEsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBRTdDLE1BQU0sTUFBTSxHQUFHO0lBQ2QsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0NBQzFFLENBQUM7QUFFRixNQUFNLGFBQWEsR0FBRztJQUNyQixJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtJQUNsRCxNQUFNLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtJQUN0RCxLQUFLLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtJQUNwRCxNQUFNLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLFVBQVUsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRTtJQUNuRCxTQUFTLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtJQUN6RCxLQUFLLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtJQUNwRCxLQUFLLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtDQUNwRCxDQUFDO0FBRUYsTUFBTSxhQUFhLEdBQUc7SUFDckIsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ3BDLE9BQU8sRUFBRSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQztDQUNoRCxDQUFDO0FBRUYsTUFBTSxVQUFVLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxDQUFDO0FBRXJELE1BQU0sUUFBUSxHQUFHLEVBQUUsY0FBYyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQztBQUV0RSxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQXdCO0lBQzlDLFdBQVc7SUFDWCxRQUFRO0lBQ1IsTUFBTTtJQUNOLGFBQWE7SUFDYixhQUFhO0lBQ2IsVUFBVTtJQUNWLFFBQVE7Q0FDQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZTogZGF0YS9jb25zdHMuanNcblxuaW1wb3J0IHsgQ29uc3RzRGF0YUludGVyZmFjZSB9IGZyb20gJy4uL3R5cGVzL2luZGV4LmpzJztcblxuY29uc3QgYWRqdXN0bWVudHMgPSB7IHNsYVZhbHVlOiAxMCB9O1xuXG5jb25zdCBkZWJvdW5jZSA9IHsgYnV0dG9uOiAzMDAsIGlucHV0OiAyMDAgfTtcblxuY29uc3QgbGltaXRzID0ge1xuXHR4eXo6IHsgbWF4OiB7IHg6IDk1LjA0NywgeTogMTAwLCB6OiAxMDguODgzIH0sIG1pbjogeyB4OiAwLCB5OiAwLCB6OiAwIH0gfVxufTtcblxuY29uc3QgcGFsZXR0ZVJhbmdlcyA9IHtcblx0Y29tcDogeyBodWVTaGlmdDogMTAsIGxpZ2h0U2hpZnQ6IDAsIHNhdFNoaWZ0OiAwIH0sXG5cdGRpYWRpYzogeyBodWVTaGlmdDogMzAsIGxpZ2h0U2hpZnQ6IDMwLCBzYXRTaGlmdDogMzAgfSxcblx0aGV4YWQ6IHsgaHVlU2hpZnQ6IDAsIGxpZ2h0U2hpZnQ6IDMwLCBzYXRTaGlmdDogMzAgfSxcblx0cmFuZG9tOiB7IGh1ZVNoaWZ0OiAwLCBsaWdodFNoaWZ0OiAwLCBzYXRTaGlmdDogMCB9LFxuXHRzcGxpdENvbXA6IHsgaHVlU2hpZnQ6IDMwLCBsaWdodFNoaWZ0OiAzMCwgc2F0U2hpZnQ6IDMwIH0sXG5cdHRldHJhOiB7IGh1ZVNoaWZ0OiAwLCBsaWdodFNoaWZ0OiAzMCwgc2F0U2hpZnQ6IDMwIH0sXG5cdHRyaWFkOiB7IGh1ZVNoaWZ0OiAwLCBsaWdodFNoaWZ0OiAzMCwgc2F0U2hpZnQ6IDMwIH1cbn07XG5cbmNvbnN0IHByb2JhYmlsaXRpZXMgPSB7XG5cdHZhbHVlczogWzQwLCA0NSwgNTAsIDU1LCA2MCwgNjUsIDcwXSxcblx0d2VpZ2h0czogWzAuMSwgMC4xNSwgMC4yLCAwLjMsIDAuMTUsIDAuMDUsIDAuMDVdXG59O1xuXG5jb25zdCB0aHJlc2hvbGRzID0geyBkYXJrOiAyNSwgZ3JheTogMjAsIGxpZ2h0OiA3NSB9O1xuXG5jb25zdCB0aW1lb3V0cyA9IHsgY29weUJ1dHRvblRleHQ6IDEwMDAsIHRvYXN0OiAzMDAwLCB0b29sdGlwOiAxMDAwIH07XG5cbmV4cG9ydCBjb25zdCBjb25zdHNEYXRhOiBDb25zdHNEYXRhSW50ZXJmYWNlID0ge1xuXHRhZGp1c3RtZW50cyxcblx0ZGVib3VuY2UsXG5cdGxpbWl0cyxcblx0cGFsZXR0ZVJhbmdlcyxcblx0cHJvYmFiaWxpdGllcyxcblx0dGhyZXNob2xkcyxcblx0dGltZW91dHNcbn0gYXMgY29uc3Q7XG4iXX0=