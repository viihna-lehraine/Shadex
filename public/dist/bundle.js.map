{"version":3,"file":"bundle.js","sources":["../js/config/constants.js","../js/utils/core-utils.js","../js/utils/common-utils.js","../js/config/defaults.js","../js/helpers/conversion.js","../js/utils/color-utils.js","../js/palette-gen/conversion-index.js","../js/utils/conversion-utils.js","../js/dom/drag-and-drop.js","../js/helpers/dom.js","../js/helpers/notification.js","../js/palette-gen/limits.js","../js/helpers/palette.js","../js/palette-gen/hues.js","../../node_modules/idb/build/index.js","../js/utils/palette-utils.js","../js/database/database.js","../js/utils/random-color-utils.js","../js/palette-gen/palettes.js","../js/utils/dom-utils.js","../js/palette-gen/generate.js","../js/dom/dom-main.js","../js/app.js"],"sourcesContent":["function getElement(id) {\n    return document.getElementById(id);\n}\nconst adjustSLAmount = 10;\nconst xyzMaxX = 95.047;\nconst xyzMaxY = 100;\nconst xyzMaxZ = 108.883;\nconst xyzMinX = 0;\nconst xyzMinY = 0;\nconst xyzMinZ = 0;\nconst buttonDebounce = 300;\nconst inputDebounce = 200;\nconst advancedMenuToggleButton = getElement('advanced-menu-toggle-button');\nconst applyCustomColorButton = getElement('apply-custom-color-button');\nconst clearCustomColorButton = getElement('clear-custom-color-button');\nconst closeHelpMenuButton = getElement('close-help-menu-button');\nconst closeHistoryMenuButton = getElement('close-history-menu-button');\nconst closeSubMenuAButton = getElement('close-sub-menu-A-button');\nconst closeSubMenuBButton = getElement('close-sub-menu-B-button');\nconst customColorElement = getElement('custom-color');\nconst customColorMenuButton = getElement('custom-color-menu-button');\nconst desaturateButton = getElement('desaturate-button');\nconst enableAlphaCheckbox = getElement('enable-alpha-checkbox');\nconst generateButton = getElement('generate-button');\nconst helpMenuToggleButton = getElement('help-menu-toggle-button');\nconst historyMenuToggleButton = getElement('history-menu-toggle-button');\nconst limitBrightCheckbox = getElement('limit-bright-checkbox');\nconst limitDarkCheckbox = getElement('limit-dark-checkbox');\nconst limitGrayCheckbox = getElement('limit-gray-checkbox');\nconst paletteNumberOptions = getElement('palette-number-options');\nconst paletteTypeOptions = getElement('palette-type-options');\nconst popupDivButton = getElement('custom-color-button');\nconst saturateButton = getElement('saturate-button');\nconst selectedColorOptions = getElement('selected-color-options');\nconst showAsCMYKButton = getElement('show-as-cmyk-button');\nconst showAsHexButton = getElement('show-as-hex-button');\nconst showAsHSLButton = getElement('show-as-hsl-button');\nconst showAsHSVButton = getElement('show-as-hsv-button');\nconst showAsLABButton = getElement('show-as-lab-button');\nconst showAsRGBButton = getElement('show-as-rgb-button');\nconst complementaryHueShiftRange = 10;\nconst diadicLightnessShiftRange = 30;\nconst diadicSaturationShiftRange = 30;\nconst hexadicLightnessShiftRange = 30;\nconst hexadicSaturationShiftRange = 30;\nconst splitComplementaryLightnessShiftRange = 30;\nconst splitComplementarySaturationShiftRange = 30;\nconst tetradicLightnessShiftRange = 30;\nconst tetradicSaturationShiftRange = 30;\nconst triadicLightnessShiftRange = 30;\nconst triadicSaturationShiftRange = 30;\nconst probabilities = [40, 45, 50, 55, 60, 65, 70];\nconst weights = [0.1, 0.15, 0.2, 0.3, 0.15, 0.05, 0.05];\nconst brightnessThreshold = 75;\nconst darknessThreshold = 25;\nconst grayThreshold = 20;\nconst copyButtonTextTimeout = 1000;\nconst toastTimeout = 3000;\nconst tooltipTimeout = 1000;\n// ***** Constructed Constants *****\nconst adjustments = {\n    adjustSLAmount\n};\nconst boundaries = {\n    xyzMaxX,\n    xyzMaxY,\n    xyzMaxZ,\n    xyzMinX,\n    xyzMinY,\n    xyzMinZ\n};\nconst debounce = {\n    buttonDebounce,\n    inputDebounce\n};\nconst domElements = {\n    advancedMenuToggleButton,\n    applyCustomColorButton,\n    clearCustomColorButton,\n    closeHelpMenuButton,\n    closeHistoryMenuButton,\n    closeSubMenuAButton,\n    closeSubMenuBButton,\n    customColorElement,\n    customColorMenuButton,\n    desaturateButton,\n    enableAlphaCheckbox,\n    generateButton,\n    helpMenuToggleButton,\n    historyMenuToggleButton,\n    limitBrightCheckbox,\n    limitDarkCheckbox,\n    limitGrayCheckbox,\n    paletteNumberOptions,\n    paletteTypeOptions,\n    popupDivButton,\n    saturateButton,\n    selectedColorOptions,\n    showAsCMYKButton,\n    showAsHexButton,\n    showAsHSLButton,\n    showAsHSVButton,\n    showAsLABButton,\n    showAsRGBButton\n};\nconst paletteShiftRanges = {\n    complementaryHueShiftRange,\n    diadicLightnessShiftRange,\n    diadicSaturationShiftRange,\n    hexadicLightnessShiftRange,\n    hexadicSaturationShiftRange,\n    splitComplementaryLightnessShiftRange,\n    splitComplementarySaturationShiftRange,\n    tetradicLightnessShiftRange,\n    tetradicSaturationShiftRange,\n    triadicLightnessShiftRange,\n    triadicSaturationShiftRange\n};\nconst probabilityConstants = {\n    probabilities,\n    weights\n};\nconst thresholds = {\n    brightnessThreshold,\n    darknessThreshold,\n    grayThreshold\n};\nconst timeouts = {\n    copyButtonTextTimeout,\n    toastTimeout,\n    tooltipTimeout\n};\n// **** Master Config Object ****\nexport const config = {\n    ...adjustments,\n    ...boundaries,\n    ...debounce,\n    ...domElements,\n    ...paletteShiftRanges,\n    ...probabilityConstants,\n    ...thresholds,\n    ...timeouts\n};\n//# sourceMappingURL=data:application/json;base64,","function clone(value) {\n    return structuredClone(value);\n}\nfunction debounce(func, delay) {\n    let timeout = null;\n    return (...args) => {\n        if (timeout)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            func(...args);\n        }, delay);\n    };\n}\nfunction isInRange(value, min, max) {\n    return value >= min && value <= max;\n}\nexport const core = { clone, debounce, isInRange };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9jb3JlLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLFNBQVMsS0FBSyxDQUFJLEtBQVE7SUFDekIsT0FBTyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDL0IsQ0FBQztBQUVELFNBQVMsUUFBUSxDQUNoQixJQUFPLEVBQ1AsS0FBYTtJQUViLElBQUksT0FBTyxHQUF5QyxJQUFJLENBQUM7SUFFekQsT0FBTyxDQUFDLEdBQUcsSUFBbUIsRUFBUSxFQUFFO1FBQ3ZDLElBQUksT0FBTztZQUFFLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUVuQyxPQUFPLEdBQUcsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUN6QixJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztRQUNmLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNYLENBQUMsQ0FBQztBQUNILENBQUM7QUFFRCxTQUFTLFNBQVMsQ0FBQyxLQUFhLEVBQUUsR0FBVyxFQUFFLEdBQVc7SUFDekQsT0FBTyxLQUFLLElBQUksR0FBRyxJQUFJLEtBQUssSUFBSSxHQUFHLENBQUM7QUFDckMsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBbUIsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZm5PYmplY3RzIGZyb20gJy4uL2luZGV4L2ZuLW9iamVjdHMnO1xuXG5mdW5jdGlvbiBjbG9uZTxUPih2YWx1ZTogVCk6IFQge1xuXHRyZXR1cm4gc3RydWN0dXJlZENsb25lKHZhbHVlKTtcbn1cblxuZnVuY3Rpb24gZGVib3VuY2U8VCBleHRlbmRzICguLi5hcmdzOiBQYXJhbWV0ZXJzPFQ+KSA9PiB2b2lkPihcblx0ZnVuYzogVCxcblx0ZGVsYXk6IG51bWJlclxuKSB7XG5cdGxldCB0aW1lb3V0OiBSZXR1cm5UeXBlPHR5cGVvZiBzZXRUaW1lb3V0PiB8IG51bGwgPSBudWxsO1xuXG5cdHJldHVybiAoLi4uYXJnczogUGFyYW1ldGVyczxUPik6IHZvaWQgPT4ge1xuXHRcdGlmICh0aW1lb3V0KSBjbGVhclRpbWVvdXQodGltZW91dCk7XG5cblx0XHR0aW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG5cdFx0XHRmdW5jKC4uLmFyZ3MpO1xuXHRcdH0sIGRlbGF5KTtcblx0fTtcbn1cblxuZnVuY3Rpb24gaXNJblJhbmdlKHZhbHVlOiBudW1iZXIsIG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcik6IGJvb2xlYW4ge1xuXHRyZXR1cm4gdmFsdWUgPj0gbWluICYmIHZhbHVlIDw9IG1heDtcbn1cblxuZXhwb3J0IGNvbnN0IGNvcmU6IGZuT2JqZWN0cy5Db3JlID0geyBjbG9uZSwgZGVib3VuY2UsIGlzSW5SYW5nZSB9O1xuIl19","import { core } from './core-utils.js';\nfunction sanitizeLAB(value) {\n    return Math.round(Math.min(Math.max(value, -125), 125));\n}\nfunction sanitizePercentage(value) {\n    return Math.round(Math.min(Math.max(value, 0), 100));\n}\nfunction sanitizeRadial(value) {\n    return Math.round(Math.min(Math.max(value, 0), 360)) & 360;\n}\nfunction sanitizeRGB(value) {\n    return Math.round(Math.min(Math.max(value, 0), 255));\n}\nfunction validateColorValues(color) {\n    const clonedColor = core.clone(color);\n    const isNumericValid = (value) => typeof value === 'number' && !isNaN(value);\n    const normalizePercentage = (value) => {\n        if (typeof value === 'string' && value.endsWith('%')) {\n            return parseFloat(value.slice(0, -1));\n        }\n        return typeof value === 'number' ? value : NaN;\n    };\n    switch (clonedColor.format) {\n        case 'cmyk':\n            return ([\n                clonedColor.value.cyan,\n                clonedColor.value.magenta,\n                clonedColor.value.yellow,\n                clonedColor.value.key\n            ].every(isNumericValid) &&\n                clonedColor.value.cyan >= 0 &&\n                clonedColor.value.cyan <= 100 &&\n                clonedColor.value.magenta >= 0 &&\n                clonedColor.value.magenta <= 100 &&\n                clonedColor.value.yellow >= 0 &&\n                clonedColor.value.yellow <= 100 &&\n                clonedColor.value.key >= 0 &&\n                clonedColor.value.key <= 100);\n        case 'hex':\n            return /^#[0-9A-Fa-f]{6}$/.test(clonedColor.value.hex);\n        case 'hsl':\n            const isValidHSLHue = isNumericValid(clonedColor.value.hue) &&\n                clonedColor.value.hue >= 0 &&\n                clonedColor.value.hue <= 360;\n            const isValidHSLSaturation = normalizePercentage(clonedColor.value.saturation) >= 0 &&\n                normalizePercentage(clonedColor.value.saturation) <= 100;\n            const isValidHSLLightness = clonedColor.value.lightness\n                ? normalizePercentage(clonedColor.value.lightness) >= 0 &&\n                    normalizePercentage(clonedColor.value.lightness) <= 100\n                : true;\n            return isValidHSLHue && isValidHSLSaturation && isValidHSLLightness;\n        case 'hsv':\n            const isValidHSVHue = isNumericValid(clonedColor.value.hue) &&\n                clonedColor.value.hue >= 0 &&\n                clonedColor.value.hue <= 360;\n            const isValidHSVSaturation = normalizePercentage(clonedColor.value.saturation) >= 0 &&\n                normalizePercentage(clonedColor.value.saturation) <= 100;\n            const isValidHSVValue = clonedColor.value.value\n                ? normalizePercentage(clonedColor.value.value) >= 0 &&\n                    normalizePercentage(clonedColor.value.value) <= 100\n                : true;\n            return isValidHSVHue && isValidHSVSaturation && isValidHSVValue;\n        case 'lab':\n            return ([\n                clonedColor.value.l,\n                clonedColor.value.a,\n                clonedColor.value.b\n            ].every(isNumericValid) &&\n                clonedColor.value.l >= 0 &&\n                clonedColor.value.l <= 100 &&\n                clonedColor.value.a >= -125 &&\n                clonedColor.value.a <= 125 &&\n                clonedColor.value.b >= -125 &&\n                clonedColor.value.b <= 125);\n        case 'rgb':\n            return ([\n                clonedColor.value.red,\n                clonedColor.value.green,\n                clonedColor.value.blue\n            ].every(isNumericValid) &&\n                clonedColor.value.red >= 0 &&\n                clonedColor.value.red <= 255 &&\n                clonedColor.value.green >= 0 &&\n                clonedColor.value.green <= 255 &&\n                clonedColor.value.blue >= 0 &&\n                clonedColor.value.blue <= 255);\n        case 'sl':\n            return ([\n                clonedColor.value.saturation,\n                clonedColor.value.lightness\n            ].every(isNumericValid) &&\n                clonedColor.value.saturation >= 0 &&\n                clonedColor.value.saturation <= 100 &&\n                clonedColor.value.lightness >= 0 &&\n                clonedColor.value.lightness <= 100);\n        case 'sv':\n            return ([clonedColor.value.saturation, clonedColor.value.value].every(isNumericValid) &&\n                clonedColor.value.saturation >= 0 &&\n                clonedColor.value.saturation <= 100 &&\n                clonedColor.value.value >= 0 &&\n                clonedColor.value.value <= 100);\n        case 'xyz':\n            return ([\n                clonedColor.value.x,\n                clonedColor.value.y,\n                clonedColor.value.z\n            ].every(isNumericValid) &&\n                clonedColor.value.x >= 0 &&\n                clonedColor.value.x <= 95.047 &&\n                clonedColor.value.y >= 0 &&\n                clonedColor.value.y <= 100.0 &&\n                clonedColor.value.z >= 0 &&\n                clonedColor.value.z <= 108.883);\n        default:\n            console.error(`Unsupported color format: ${color.format}`);\n            return false;\n    }\n}\nexport const commonUtils = {\n    sanitizeLAB,\n    sanitizePercentage,\n    sanitizeRadial,\n    sanitizeRGB,\n    validateColorValues\n};\n//# sourceMappingURL=data:application/json;base64,","const cmyk = {\n    value: { cyan: 0, magenta: 0, yellow: 0, key: 0, alpha: 1 },\n    format: 'cmyk'\n};\nconst cmykString = {\n    value: { cyan: '0%', magenta: '0%', yellow: '0%', key: '0%', alpha: '1' },\n    format: 'cmyk'\n};\nconst hex = {\n    value: {\n        hex: '#000000FF',\n        alpha: 'FF',\n        numericAlpha: 1\n    },\n    format: 'hex'\n};\nconst hsl = {\n    value: { hue: 0, saturation: 0, lightness: 0, alpha: 1 },\n    format: 'hsl'\n};\nconst hslString = {\n    value: { hue: '0', saturation: '0%', lightness: '0%', alpha: '1' },\n    format: 'hsl'\n};\nconst hsv = {\n    value: { hue: 0, saturation: 0, value: 0, alpha: 1 },\n    format: 'hsv'\n};\nconst hsvString = {\n    value: { hue: '0', saturation: '0%', value: '0%', alpha: '1' },\n    format: 'hsv'\n};\nconst lab = {\n    value: { l: 0, a: 0, b: 0, alpha: 1 },\n    format: 'lab'\n};\nconst labString = {\n    value: { l: '0', a: '0', b: '0', alpha: '1' },\n    format: 'lab'\n};\nconst rgb = {\n    value: { red: 0, green: 0, blue: 0, alpha: 1 },\n    format: 'rgb'\n};\nconst rgbString = {\n    value: { red: '0', green: '0', blue: '0', alpha: '1' },\n    format: 'rgb'\n};\nconst settings = {\n    colorSpace: 'hsl',\n    lastTableID: 0\n};\nconst sl = {\n    value: { saturation: 0, lightness: 0, alpha: 1 },\n    format: 'sl'\n};\nconst slString = {\n    value: { saturation: '0%', lightness: '0%', alpha: '1' },\n    format: 'sl'\n};\nconst sv = {\n    value: { saturation: 0, value: 0, alpha: 1 },\n    format: 'sv'\n};\nconst svString = {\n    value: { saturation: '0%', value: '0%', alpha: '1' },\n    format: 'sv'\n};\nconst xyz = {\n    value: { x: 0, y: 0, z: 0, alpha: 1 },\n    format: 'xyz'\n};\nconst xyzString = {\n    value: { x: '0', y: '0', z: '0', alpha: '1' },\n    format: 'xyz'\n};\nconst mutation = {\n    timestamp: new Date().toISOString(),\n    key: 'test_key',\n    action: 'update',\n    newValue: { value: 'new_value' },\n    oldValue: { value: 'old_value' },\n    origin: 'test'\n};\nconst paletteData = {\n    id: `null-palette-${Date.now()}`,\n    items: [],\n    flags: {\n        enableAlpha: false,\n        limitDark: false,\n        limitGray: false,\n        limitLight: false\n    },\n    metadata: {\n        numBoxes: 5,\n        paletteType: 'ERROR',\n        customColor: {\n            hslColor: hsl,\n            convertedColors: {\n                cmyk: cmyk.value,\n                hex: hex.value,\n                hsl: hsl.value,\n                hsv: hsv.value,\n                lab: lab.value,\n                rgb: rgb.value,\n                xyz: xyz.value\n            }\n        }\n    }\n};\nconst paletteItem = {\n    id: 'fake',\n    colors: {\n        cmyk: cmyk.value,\n        hex: hex.value,\n        hsl: hsl.value,\n        hsv: hsv.value,\n        lab: lab.value,\n        rgb: rgb.value,\n        xyz: xyz.value\n    },\n    colorStrings: {\n        cmykString: cmykString.value,\n        hexString: hex.value,\n        hslString: hslString.value,\n        hsvString: hsvString.value,\n        labString: labString.value,\n        rgbString: rgbString.value,\n        xyzString: xyzString.value\n    },\n    cssStrings: {\n        cmykCSSString: 'cmyk(0%, 0%, 0%, 100%, 1)',\n        hexCSSString: '#000000FF',\n        hslCSSString: 'hsl(0, 0%, 0%, 0)',\n        hsvCSSString: 'hsv(0, 0%, 0%, 0)',\n        labCSSString: 'lab(0, 0, 0, 0)',\n        rgbCSSString: 'rgb(0, 0, 0, 1)',\n        xyzCSSString: 'xyz(0, 0, 0, 0)'\n    }\n};\nconst storedPalette = {\n    tableID: 1,\n    palette: paletteData\n};\nexport const defaults = {\n    cmyk,\n    cmykString,\n    hex,\n    hsl,\n    hslString,\n    hsv,\n    hsvString,\n    lab,\n    labString,\n    mutation,\n    paletteData,\n    paletteItem,\n    rgb,\n    rgbString,\n    settings,\n    sl,\n    slString,\n    storedPalette,\n    sv,\n    svString,\n    xyz,\n    xyzString\n};\n//# sourceMappingURL=data:application/json;base64,","import { core } from '../utils/core-utils.js';\nimport { defaults } from '../config/defaults.js';\nimport { commonUtils } from '../utils/common-utils.js';\nfunction applyGammaCorrection(value) {\n    try {\n        return value > 0.0031308\n            ? 1.055 * Math.pow(value, 1 / 2.4) - 0.055\n            : 12.92 * value;\n    }\n    catch (error) {\n        console.error(`Error applying gamma correction: ${error}`);\n        return value;\n    }\n}\nfunction clampRGB(rgb) {\n    if (!commonUtils.validateColorValues(rgb)) {\n        console.error(`Invalid RGB value ${JSON.stringify(rgb)}`);\n        return core.clone(defaults.rgb);\n    }\n    try {\n        return {\n            value: {\n                red: Math.round(Math.min(Math.max(0, rgb.value.red), 1) * 255),\n                green: Math.round(Math.min(Math.max(0, rgb.value.green), 1) * 255),\n                blue: Math.round(Math.min(Math.max(0, rgb.value.blue), 1) * 255),\n                alpha: parseFloat(Math.min(Math.max(0, rgb.value.alpha), 1).toFixed(2))\n            },\n            format: 'rgb'\n        };\n    }\n    catch (error) {\n        console.error(`Error clamping RGB values: ${error}`);\n        return rgb;\n    }\n}\nexport function hueToRGB(p, q, t) {\n    try {\n        const clonedP = core.clone(p);\n        const clonedQ = core.clone(q);\n        let clonedT = core.clone(t);\n        if (clonedT < 0)\n            clonedT += 1;\n        if (clonedT > 1)\n            clonedT -= 1;\n        if (clonedT < 1 / 6)\n            return clonedP + (clonedQ - clonedP) * 6 * clonedT;\n        if (clonedT < 1 / 2)\n            return clonedQ;\n        if (clonedT < 2 / 3)\n            return clonedP + (clonedQ - clonedP) * (2 / 3 - clonedT) * 6;\n        return clonedP;\n    }\n    catch (error) {\n        console.error(`Error converting hue to RGB: ${error}`);\n        return 0;\n    }\n}\nfunction hslAddFormat(value) {\n    try {\n        if (!commonUtils.validateColorValues({ value: value, format: 'hsl' })) {\n            console.error(`Invalid HSL value ${JSON.stringify(value)}`);\n            return core.clone(defaults.hsl);\n        }\n        return { value: value, format: 'hsl' };\n    }\n    catch (error) {\n        console.error(`Error adding HSL format: ${error}`);\n        return core.clone(defaults.hsl);\n    }\n}\nexport const conversionHelpers = {\n    applyGammaCorrection,\n    clampRGB,\n    hslAddFormat,\n    hueToRGB\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVyc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9oZWxwZXJzL2NvbnZlcnNpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM5QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFcEQsU0FBUyxvQkFBb0IsQ0FBQyxLQUFhO0lBQzFDLElBQUksQ0FBQztRQUNKLE9BQU8sS0FBSyxHQUFHLFNBQVM7WUFDdkIsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsS0FBSztZQUMxQyxDQUFDLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNsQixDQUFDO0lBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztRQUNoQixPQUFPLENBQUMsS0FBSyxDQUFDLG9DQUFvQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBRTNELE9BQU8sS0FBSyxDQUFDO0lBQ2QsQ0FBQztBQUNGLENBQUM7QUFFRCxTQUFTLFFBQVEsQ0FBQyxHQUFlO0lBQ2hDLElBQUksQ0FBQyxXQUFXLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUMzQyxPQUFPLENBQUMsS0FBSyxDQUFDLHFCQUFxQixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUUxRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCxJQUFJLENBQUM7UUFDSixPQUFPO1lBQ04sS0FBSyxFQUFFO2dCQUNOLEdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFB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QUFFLE1BQU0sRUFBRSxLQUFLLEVBQWdCLENBQUM7SUFDdEQsQ0FBQztJQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7UUFDaEIsT0FBTyxDQUFDLEtBQUssQ0FBQyw0QkFBNEIsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUVuRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7QUFDRixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQWdDO0lBQzdELG9CQUFvQjtJQUNwQixRQUFRO0lBQ1IsWUFBWTtJQUNaLFFBQVE7Q0FDUixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZm5PYmplY3RzIGZyb20gJy4uL2luZGV4L2ZuLW9iamVjdHMnO1xuaW1wb3J0ICogYXMgY29sb3JzIGZyb20gJy4uL2luZGV4L2NvbG9ycyc7XG5pbXBvcnQgeyBjb3JlIH0gZnJvbSAnLi4vdXRpbHMvY29yZS11dGlscyc7XG5pbXBvcnQgeyBkZWZhdWx0cyB9IGZyb20gJy4uL2NvbmZpZy9kZWZhdWx0cyc7XG5pbXBvcnQgeyBjb21tb25VdGlscyB9IGZyb20gJy4uL3V0aWxzL2NvbW1vbi11dGlscyc7XG5cbmZ1bmN0aW9uIGFwcGx5R2FtbWFDb3JyZWN0aW9uKHZhbHVlOiBudW1iZXIpOiBudW1iZXIge1xuXHR0cnkge1xuXHRcdHJldHVybiB2YWx1ZSA+IDAuMDAzMTMwOFxuXHRcdFx0PyAxLjA1NSAqIE1hdGgucG93KHZhbHVlLCAxIC8gMi40KSAtIDAuMDU1XG5cdFx0XHQ6IDEyLjkyICogdmFsdWU7XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0Y29uc29sZS5lcnJvcihgRXJyb3IgYXBwbHlpbmcgZ2FtbWEgY29ycmVjdGlvbjogJHtlcnJvcn1gKTtcblxuXHRcdHJldHVybiB2YWx1ZTtcblx0fVxufVxuXG5mdW5jdGlvbiBjbGFtcFJHQihyZ2I6IGNvbG9ycy5SR0IpOiBjb2xvcnMuUkdCIHtcblx0aWYgKCFjb21tb25VdGlscy52YWxpZGF0ZUNvbG9yVmFsdWVzKHJnYikpIHtcblx0XHRjb25zb2xlLmVycm9yKGBJbnZhbGlkIFJHQiB2YWx1ZSAke0pTT04uc3RyaW5naWZ5KHJnYil9YCk7XG5cblx0XHRyZXR1cm4gY29yZS5jbG9uZShkZWZhdWx0cy5yZ2IpO1xuXHR9XG5cblx0dHJ5IHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0dmFsdWU6IHtcblx0XHRcdFx0cmVkOiBNYXRoLnJvdW5kKE1hdGgubWluKE1hdGgubWF4KDAsIHJnYi52YWx1ZS5yZWQpLCAxKSAqIDI1NSksXG5cdFx0XHRcdGdyZWVuOiBNYXRoLnJvdW5kKFxuXHRcdFx0XHRcdE1hdGgubWluKE1hdGgubWF4KDAsIHJnYi52YWx1ZS5ncmVlbiksIDEpICogMjU1XG5cdFx0XHRcdCksXG5cdFx0XHRcdGJsdWU6IE1hdGgucm91bmQoXG5cdFx0XHRcdFx0TWF0aC5taW4oTWF0aC5tYXgoMCwgcmdiLnZhbHVlLmJsdWUpLCAxKSAqIDI1NVxuXHRcdFx0XHQpLFxuXHRcdFx0XHRhbHBoYTogcGFyc2VGbG9hdChcblx0XHRcdFx0XHRNYXRoLm1pbihNYXRoLm1heCgwLCByZ2IudmFsdWUuYWxwaGEpLCAxKS50b0ZpeGVkKDIpXG5cdFx0XHRcdClcblx0XHRcdH0sXG5cdFx0XHRmb3JtYXQ6ICdyZ2InXG5cdFx0fTtcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLmVycm9yKGBFcnJvciBjbGFtcGluZyBSR0IgdmFsdWVzOiAke2Vycm9yfWApO1xuXG5cdFx0cmV0dXJuIHJnYjtcblx0fVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaHVlVG9SR0IocDogbnVtYmVyLCBxOiBudW1iZXIsIHQ6IG51bWJlcik6IG51bWJlciB7XG5cdHRyeSB7XG5cdFx0Y29uc3QgY2xvbmVkUCA9IGNvcmUuY2xvbmUocCk7XG5cdFx0Y29uc3QgY2xvbmVkUSA9IGNvcmUuY2xvbmUocSk7XG5cblx0XHRsZXQgY2xvbmVkVCA9IGNvcmUuY2xvbmUodCk7XG5cblx0XHRpZiAoY2xvbmVkVCA8IDApIGNsb25lZFQgKz0gMTtcblx0XHRpZiAoY2xvbmVkVCA+IDEpIGNsb25lZFQgLT0gMTtcblx0XHRpZiAoY2xvbmVkVCA8IDEgLyA2KSByZXR1cm4gY2xvbmVkUCArIChjbG9uZWRRIC0gY2xvbmVkUCkgKiA2ICogY2xvbmVkVDtcblx0XHRpZiAoY2xvbmVkVCA8IDEgLyAyKSByZXR1cm4gY2xvbmVkUTtcblx0XHRpZiAoY2xvbmVkVCA8IDIgLyAzKVxuXHRcdFx0cmV0dXJuIGNsb25lZFAgKyAoY2xvbmVkUSAtIGNsb25lZFApICogKDIgLyAzIC0gY2xvbmVkVCkgKiA2O1xuXG5cdFx0cmV0dXJuIGNsb25lZFA7XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0Y29uc29sZS5lcnJvcihgRXJyb3IgY29udmVydGluZyBodWUgdG8gUkdCOiAke2Vycm9yfWApO1xuXG5cdFx0cmV0dXJuIDA7XG5cdH1cbn1cblxuZnVuY3Rpb24gaHNsQWRkRm9ybWF0KHZhbHVlOiBjb2xvcnMuSFNMVmFsdWUpOiBjb2xvcnMuSFNMIHtcblx0dHJ5IHtcblx0XHRpZiAoIWNvbW1vblV0aWxzLnZhbGlkYXRlQ29sb3JWYWx1ZXMoeyB2YWx1ZTogdmFsdWUsIGZvcm1hdDogJ2hzbCcgfSkpIHtcblx0XHRcdGNvbnNvbGUuZXJyb3IoYEludmFsaWQgSFNMIHZhbHVlICR7SlNPTi5zdHJpbmdpZnkodmFsdWUpfWApO1xuXG5cdFx0XHRyZXR1cm4gY29yZS5jbG9uZShkZWZhdWx0cy5oc2wpO1xuXHRcdH1cblxuXHRcdHJldHVybiB7IHZhbHVlOiB2YWx1ZSwgZm9ybWF0OiAnaHNsJyB9IGFzIGNvbG9ycy5IU0w7XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0Y29uc29sZS5lcnJvcihgRXJyb3IgYWRkaW5nIEhTTCBmb3JtYXQ6ICR7ZXJyb3J9YCk7XG5cblx0XHRyZXR1cm4gY29yZS5jbG9uZShkZWZhdWx0cy5oc2wpO1xuXHR9XG59XG5cbmV4cG9ydCBjb25zdCBjb252ZXJzaW9uSGVscGVyczogZm5PYmplY3RzLkNvbnZlcnNpb25IZWxwZXJzID0ge1xuXHRhcHBseUdhbW1hQ29ycmVjdGlvbixcblx0Y2xhbXBSR0IsXG5cdGhzbEFkZEZvcm1hdCxcblx0aHVlVG9SR0Jcbn07XG4iXX0=","import { core } from './core-utils.js';\nimport { defaults } from '../config/defaults.js';\n// ******** SECTION 1: Robust Type Guards ********\nfunction isColor(value) {\n    if (typeof value !== 'object' || value === null)\n        return false;\n    const color = value;\n    const validFormats = [\n        'cmyk',\n        'hex',\n        'hsl',\n        'hsv',\n        'lab',\n        'rgb',\n        'sl',\n        'sv',\n        'xyz'\n    ];\n    return ('value' in color &&\n        'format' in color &&\n        validFormats.includes(color.format));\n}\nfunction isColorFormat(color, format) {\n    return color.format === format;\n}\nfunction isColorSpace(value) {\n    return ['cmyk', 'hex', 'hsl', 'hsv', 'lab', 'rgb', 'xyz'].includes(value);\n}\nfunction isColorSpaceExtended(value) {\n    return [\n        'cmyk',\n        'hex',\n        'hsl',\n        'hsv',\n        'lab',\n        'rgb',\n        'sl',\n        'sv',\n        'xyz'\n    ].includes(value);\n}\nexport function isColorString(value) {\n    if (typeof value !== 'object' || value === null)\n        return false;\n    const colorString = value;\n    const validStringFormats = [\n        'cmyk',\n        'hsl',\n        'hsv',\n        'sl',\n        'sv'\n    ];\n    return ('value' in colorString &&\n        'format' in colorString &&\n        validStringFormats.includes(colorString.format));\n}\nfunction isFormat(format) {\n    return (typeof format === 'string' &&\n        ['cmyk', 'hex', 'hsl', 'hsv', 'lab', 'rgb', 'sl', 'sv', 'xyz'].includes(format));\n}\n// ******** SECTIOn 2: Narrower Type Guards ********\nfunction isCMYKColor(value) {\n    return (typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'cmyk' &&\n        'value' in value &&\n        typeof value.value.cyan === 'number' &&\n        typeof value.value.magenta === 'number' &&\n        typeof value.value.yellow === 'number' &&\n        typeof value.value.key === 'number');\n}\nfunction isCMYKFormat(color) {\n    return isColorFormat(color, 'cmyk');\n}\nfunction isCMYKString(value) {\n    return (isColorString(value) &&\n        typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'cmyk' &&\n        'value' in value &&\n        typeof value.value.cyan === 'string' &&\n        typeof value.value.magenta === 'string' &&\n        typeof value.value.yellow === 'string' &&\n        typeof value.value.key === 'string');\n}\nfunction isHex(value) {\n    return (typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'hex' &&\n        'value' in value &&\n        typeof value.value.hex === 'string');\n}\nfunction isHexFormat(color) {\n    return isColorFormat(color, 'hex');\n}\nfunction isHSLColor(value) {\n    return (typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'hsl' &&\n        'value' in value &&\n        typeof value.value.hue === 'number' &&\n        typeof value.value.saturation === 'number' &&\n        typeof value.value.lightness === 'number');\n}\nfunction isHSLFormat(color) {\n    return isColorFormat(color, 'hsl');\n}\nfunction isHSLString(value) {\n    return (isColorString(value) &&\n        typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'hsl' &&\n        'value' in value &&\n        typeof value.value.hue === 'number' &&\n        typeof value.value.saturation === 'string' &&\n        typeof value.value.lightness === 'string');\n}\nfunction isHSVColor(value) {\n    return (isColor(value) &&\n        typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'hsv' &&\n        'value' in value &&\n        typeof value.value.hue === 'number' &&\n        typeof value.value.saturation === 'number' &&\n        typeof value.value.value === 'number');\n}\nfunction isHSVFormat(color) {\n    return isColorFormat(color, 'hsv');\n}\nfunction isHSVString(value) {\n    return (isColorString(value) &&\n        typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'hsv' &&\n        'value' in value &&\n        typeof value.value.hue === 'number' &&\n        typeof value.value.saturation === 'string' &&\n        typeof value.value.value === 'string');\n}\nfunction isLAB(value) {\n    return (isColor(value) &&\n        typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'lab' &&\n        'value' in value &&\n        typeof value.value.l === 'number' &&\n        typeof value.value.a === 'number' &&\n        typeof value.value.b === 'number');\n}\nfunction isLABFormat(color) {\n    return isColorFormat(color, 'lab');\n}\nfunction isRGB(value) {\n    return (isColor(value) &&\n        typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'rgb' &&\n        'value' in value &&\n        typeof value.value.red === 'number' &&\n        typeof value.value.green === 'number' &&\n        typeof value.value.blue === 'number');\n}\nfunction isRGBFormat(color) {\n    return isColorFormat(color, 'rgb');\n}\nfunction isSLColor(value) {\n    return (typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'sl' &&\n        'value' in value &&\n        typeof value.value.saturation === 'number' &&\n        typeof value.value.lightness === 'number');\n}\nfunction isSLFormat(color) {\n    return isColorFormat(color, 'sl');\n}\nfunction isSLString(value) {\n    return (typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'sl' &&\n        'value' in value &&\n        typeof value.value.saturation === 'string' &&\n        typeof value.value.lightness === 'string');\n}\nfunction isSVColor(value) {\n    return (typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'sv' &&\n        'value' in value &&\n        typeof value.value.saturation === 'number' &&\n        typeof value.value.value === 'number');\n}\nfunction isSVFormat(color) {\n    return isColorFormat(color, 'sv');\n}\nfunction isSVString(value) {\n    return (typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'sv' &&\n        'value' in value &&\n        typeof value.value.saturation === 'string' &&\n        typeof value.value.value === 'string');\n}\nfunction isXYZ(value) {\n    return (typeof value === 'object' &&\n        value !== null &&\n        'format' in value &&\n        value.format === 'xyz' &&\n        'value' in value &&\n        typeof value.value.x === 'number' &&\n        typeof value.value.y === 'number' &&\n        typeof value.value.z === 'number');\n}\nfunction isXYZFormat(color) {\n    return isColorFormat(color, 'xyz');\n}\n// ***** SECTION 3: Utility Guards *****\nfunction ensureHash(value) {\n    return value.startsWith('#') ? value : `#${value}`;\n}\nfunction isConvertibleColor(color) {\n    return (color.format === 'cmyk' ||\n        color.format === 'hex' ||\n        color.format === 'hsl' ||\n        color.format === 'hsv' ||\n        color.format === 'lab' ||\n        color.format === 'rgb');\n}\nfunction isInputElement(element) {\n    return element instanceof HTMLInputElement;\n}\nfunction isStoredPalette(obj) {\n    if (typeof obj !== 'object' || obj === null)\n        return false;\n    const candidate = obj;\n    return (typeof candidate.tableID === 'number' &&\n        typeof candidate.palette === 'object' &&\n        Array.isArray(candidate.palette.items) &&\n        typeof candidate.palette.id === 'string');\n}\nfunction narrowToColor(color) {\n    if (isColorString(color)) {\n        return colorStringToColor(color);\n    }\n    switch (color.format) {\n        case 'cmyk':\n        case 'hex':\n        case 'hsl':\n        case 'hsv':\n        case 'lab':\n        case 'sl':\n        case 'sv':\n        case 'rgb':\n        case 'xyz':\n            return color;\n        default:\n            return null;\n    }\n}\n// ******** SECTION 4: TRANSFORM UTILS ********\nfunction addHashToHex(hex) {\n    try {\n        return hex.value.hex.startsWith('#')\n            ? hex\n            : {\n                value: {\n                    hex: `#${hex.value}}`,\n                    alpha: hex.value.alpha,\n                    numericAlpha: hex.value.numericAlpha\n                },\n                format: 'hex'\n            };\n    }\n    catch (error) {\n        console.error(`addHashToHex error: ${error}`);\n        return defaults.hex;\n    }\n}\nfunction colorStringToColor(colorString) {\n    const clonedColor = core.clone(colorString);\n    const parseValue = (value) => typeof value === 'string' && value.endsWith('%')\n        ? parseFloat(value.slice(0, -1))\n        : Number(value);\n    const newValue = Object.entries(clonedColor.value).reduce((acc, [key, val]) => {\n        acc[key] = parseValue(val);\n        return acc;\n    }, {});\n    switch (clonedColor.format) {\n        case 'cmyk':\n            return { format: 'cmyk', value: newValue };\n        case 'hsl':\n            return { format: 'hsl', value: newValue };\n        case 'hsv':\n            return { format: 'hsv', value: newValue };\n        case 'sl':\n            return { format: 'sl', value: newValue };\n        case 'sv':\n            return { format: 'sv', value: newValue };\n        default:\n            throw new Error('Unsupported format for colorStringToColor');\n    }\n}\nfunction colorToColorString(color) {\n    const clonedColor = core.clone(color);\n    if (isColorString(clonedColor)) {\n        console.log(`Already formatted as color string: ${JSON.stringify(color)}`);\n        return clonedColor;\n    }\n    const newValue = formatPercentageValues(clonedColor.value);\n    if (isCMYKColor(clonedColor)) {\n        return {\n            format: 'cmyk',\n            value: newValue\n        };\n    }\n    else if (isHex(clonedColor)) {\n        return {\n            format: 'hex',\n            value: newValue\n        };\n    }\n    else if (isHSLColor(clonedColor)) {\n        return {\n            format: 'hsl',\n            value: newValue\n        };\n    }\n    else if (isHSVColor(clonedColor)) {\n        return {\n            format: 'hsv',\n            value: newValue\n        };\n    }\n    else if (isLAB(clonedColor)) {\n        return {\n            format: 'lab',\n            value: newValue\n        };\n    }\n    else if (isRGB(clonedColor)) {\n        return {\n            format: 'rgb',\n            value: newValue\n        };\n    }\n    else if (isXYZ(clonedColor)) {\n        return {\n            format: 'xyz',\n            value: newValue\n        };\n    }\n    else {\n        throw new Error(`Unsupported format: ${clonedColor.format}`);\n    }\n}\nfunction formatColor(color, asColorString = false, asCSSString = false) {\n    const baseColor = core.clone(color);\n    let formattedString = undefined;\n    if (asColorString) {\n        formattedString = colorToColorString(color);\n    }\n    else if (asCSSString) {\n        formattedString = getCSSColorString(color);\n    }\n    return formattedString !== undefined\n        ? { baseColor, formattedString }\n        : { baseColor };\n}\nfunction formatPercentageValues(value) {\n    return Object.entries(value).reduce((acc, [key, val]) => {\n        acc[key] = [\n            'saturation',\n            'lightness',\n            'value',\n            'cyan',\n            'magenta',\n            'yellow',\n            'key'\n        ].includes(key)\n            ? `${val}%`\n            : val;\n        return acc;\n    }, {});\n}\nfunction getAlphaFromHex(hex) {\n    if (hex.length !== 9 || !hex.startsWith('#')) {\n        throw new Error(`Invalid hex color: ${hex}. Expected format #RRGGBBAA`);\n    }\n    const alphaHex = hex.slice(-2);\n    const alphaDecimal = parseInt(alphaHex, 16);\n    return alphaDecimal / 255;\n}\nfunction componentToHex(component) {\n    try {\n        const hex = Math.max(0, Math.min(255, component)).toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    }\n    catch (error) {\n        console.error(`componentToHex error: ${error}`);\n        return '00';\n    }\n}\nfunction getColorString(color) {\n    try {\n        const formatters = {\n            cmyk: (c) => `cmyk(${c.value.cyan}, ${c.value.magenta}, ${c.value.yellow}, ${c.value.key}, ${c.value.alpha})`,\n            hex: (c) => c.value.hex,\n            hsl: (c) => `hsl(${c.value.hue}, ${c.value.saturation}%, ${c.value.lightness}%,${c.value.alpha})`,\n            hsv: (c) => `hsv(${c.value.hue}, ${c.value.saturation}%, ${c.value.value}%,${c.value.alpha})`,\n            lab: (c) => `lab(${c.value.l}, ${c.value.a}, ${c.value.b},${c.value.alpha})`,\n            rgb: (c) => `rgb(${c.value.red}, ${c.value.green}, ${c.value.blue},${c.value.alpha})`,\n            xyz: (c) => `xyz(${c.value.x}, ${c.value.y}, ${c.value.z},${c.value.alpha})`\n        };\n        switch (color.format) {\n            case 'cmyk':\n                return formatters.cmyk(color);\n            case 'hex':\n                return formatters.hex(color);\n            case 'hsl':\n                return formatters.hsl(color);\n            case 'hsv':\n                return formatters.hsv(color);\n            case 'lab':\n                return formatters.lab(color);\n            case 'rgb':\n                return formatters.rgb(color);\n            case 'xyz':\n                return formatters.xyz(color);\n            default:\n                console.error(`Unsupported color format for ${color}`);\n                return null;\n        }\n    }\n    catch (error) {\n        console.error(`getColorString error: ${error}`);\n        return null;\n    }\n}\nfunction getCSSColorString(color) {\n    try {\n        switch (color.format) {\n            case 'cmyk':\n                return `cmyk(${color.value.cyan},${color.value.magenta},${color.value.yellow},${color.value.key}${color.value.alpha})`;\n            case 'hex':\n                return String(color.value.hex);\n            case 'hsl':\n                return `hsl(${color.value.hue},${color.value.saturation}%,${color.value.lightness}%,${color.value.alpha})`;\n            case 'hsv':\n                return `hsv(${color.value.hue},${color.value.saturation}%,${color.value.value}%,${color.value.alpha})`;\n            case 'lab':\n                return `lab(${color.value.l},${color.value.a},${color.value.b},${color.value.alpha})`;\n            case 'rgb':\n                return `rgb(${color.value.red},${color.value.green},${color.value.blue},${color.value.alpha})`;\n            case 'xyz':\n                return `xyz(${color.value.x},${color.value.y},${color.value.z},${color.value.alpha})`;\n            default:\n                console.error('Unexpected color format');\n                return '#FFFFFFFF';\n        }\n    }\n    catch (error) {\n        console.error(`getCSSColorString error: ${error}`);\n        return '#FFFFFFFF';\n    }\n}\nfunction hexAlphaToNumericAlpha(hexAlpha) {\n    return parseInt(hexAlpha, 16) / 255;\n}\nconst parseColor = (colorSpace, value) => {\n    try {\n        switch (colorSpace) {\n            case 'cmyk': {\n                const [c, m, y, k, a] = parseComponents(value, 5);\n                return {\n                    value: { cyan: c, magenta: m, yellow: y, key: k, alpha: a },\n                    format: 'cmyk'\n                };\n            }\n            case 'hex':\n                const hexValue = value.startsWith('#') ? value : `#${value}`;\n                const alpha = hexValue.length === 9 ? hexValue.slice(-2) : 'FF';\n                const numericAlpha = hexAlphaToNumericAlpha(alpha);\n                return {\n                    value: {\n                        hex: hexValue,\n                        alpha,\n                        numericAlpha\n                    },\n                    format: 'hex'\n                };\n            case 'hsl': {\n                const [h, s, l, a] = parseComponents(value, 4);\n                return {\n                    value: { hue: h, saturation: s, lightness: l, alpha: a },\n                    format: 'hsl'\n                };\n            }\n            case 'hsv': {\n                const [h, s, v, a] = parseComponents(value, 4);\n                return {\n                    value: { hue: h, saturation: s, value: v, alpha: a },\n                    format: 'hsv'\n                };\n            }\n            case 'lab': {\n                const [l, a, b, alpha] = parseComponents(value, 4);\n                return { value: { l, a, b, alpha }, format: 'lab' };\n            }\n            case 'rgb': {\n                const [r, g, b, a] = value.split(',').map(Number);\n                return {\n                    value: { red: r, green: g, blue: b, alpha: a },\n                    format: 'rgb'\n                };\n            }\n            default:\n                throw new Error(`Unsupported color format: ${colorSpace}`);\n        }\n    }\n    catch (error) {\n        console.error(`parseColor error: ${error}`);\n        return null;\n    }\n};\nfunction parseComponents(value, count) {\n    try {\n        const components = value\n            .split(',')\n            .map(val => val.trim().endsWith('%')\n            ? parseFloat(val)\n            : parseFloat(val) * 100);\n        if (components.length !== count)\n            throw new Error(`Expected ${count} components.`);\n        return components;\n    }\n    catch (error) {\n        console.error(`Error parsing components: ${error}`);\n        return [];\n    }\n}\nfunction parseCustomColor(rawValue) {\n    try {\n        console.log(`Parsing custom color: ${JSON.stringify(rawValue)}`);\n        const match = rawValue.match(/hsl\\((\\d+),\\s*(\\d+)%?,\\s*(\\d+)%?,\\s*(\\d*\\.?\\d+)\\)/);\n        if (match) {\n            const [, hue, saturation, lightness, alpha] = match;\n            return {\n                value: {\n                    hue: Number(hue),\n                    saturation: Number(saturation),\n                    lightness: Number(lightness),\n                    alpha: Number(alpha)\n                },\n                format: 'hsl'\n            };\n        }\n        else {\n            console.error('Invalid HSL custom color. Expected format: hsl(H, S%, L%, A)');\n            return null;\n        }\n    }\n    catch (error) {\n        console.error(`parseCustomColor error: ${error}`);\n        return null;\n    }\n}\nfunction parseHexWithAlpha(hexValue) {\n    const hex = hexValue.startsWith('#') ? hexValue : `#${hexValue}`;\n    const alpha = hex.length === 9 ? hex.slice(-2) : 'FF';\n    const numericAlpha = hexAlphaToNumericAlpha(alpha);\n    return { hex, alpha, numericAlpha };\n}\nfunction stripHashFromHex(hex) {\n    try {\n        const hexString = `${hex.value.hex}${hex.value.alpha}`;\n        return hex.value.hex.startsWith('#')\n            ? {\n                value: {\n                    hex: hexString.slice(1),\n                    alpha: hex.value.alpha,\n                    numericAlpha: hexAlphaToNumericAlpha(hex.value.alpha)\n                },\n                format: 'hex'\n            }\n            : hex;\n    }\n    catch (error) {\n        console.error(`stripHashFromHex error: ${error}`);\n        return core.clone(defaults.hex);\n    }\n}\nfunction stripPercentFromValues(value) {\n    return Object.entries(value).reduce((acc, [key, val]) => {\n        const parsedValue = typeof val === 'string' && val.endsWith('%')\n            ? parseFloat(val.slice(0, -1))\n            : val;\n        acc[key] = parsedValue;\n        return acc;\n    }, {});\n}\nfunction toHexWithAlpha(rgbValue) {\n    const { red, green, blue, alpha } = rgbValue;\n    const hex = `#${((1 << 24) + (red << 16) + (green << 8) + blue)\n        .toString(16)\n        .slice(1)}`;\n    const alphaHex = Math.round(alpha * 255)\n        .toString(16)\n        .padStart(2, '0');\n    return `${hex}${alphaHex}`;\n}\nexport const colorUtils = {\n    addHashToHex,\n    colorStringToColor,\n    colorToColorString,\n    componentToHex,\n    ensureHash,\n    formatColor,\n    formatPercentageValues,\n    getAlphaFromHex,\n    getColorString,\n    getCSSColorString,\n    hexAlphaToNumericAlpha,\n    isCMYKColor,\n    isCMYKFormat,\n    isCMYKString,\n    isColor,\n    isColorFormat,\n    isColorString,\n    isColorSpace,\n    isColorSpaceExtended,\n    isConvertibleColor,\n    isFormat,\n    isHex,\n    isHexFormat,\n    isHSLColor,\n    isHSLFormat,\n    isHSLString,\n    isInputElement,\n    isHSVColor,\n    isHSVFormat,\n    isHSVString,\n    isLAB,\n    isLABFormat,\n    isRGB,\n    isRGBFormat,\n    isSLColor,\n    isSLFormat,\n    isSLString,\n    isStoredPalette,\n    isSVColor,\n    isSVFormat,\n    isSVString,\n    isXYZ,\n    isXYZFormat,\n    narrowToColor,\n    parseColor,\n    parseComponents,\n    parseCustomColor,\n    parseHexWithAlpha,\n    stripHashFromHex,\n    stripPercentFromValues,\n    toHexWithAlpha\n};\n//# sourceMappingURL=data:application/json;base64,","import { defaults } from '../config/defaults.js';\nimport { conversionHelpers } from '../helpers/conversion.js';\nimport { colorUtils } from '../utils/color-utils.js';\nimport { commonUtils } from '../utils/common-utils.js';\nimport { core } from '../utils/core-utils.js';\nfunction cmykToHSL(cmyk) {\n    try {\n        if (!commonUtils.validateColorValues(cmyk)) {\n            console.error(`Invalid CMYK value ${JSON.stringify(cmyk)}`);\n            return core.clone(defaults.hsl);\n        }\n        return rgbToHSL(cmykToRGB(core.clone(cmyk)));\n    }\n    catch (error) {\n        console.error(`cmykToHSL() error: ${error}`);\n        return core.clone(defaults.hsl);\n    }\n}\nexport function cmykToRGB(cmyk) {\n    try {\n        if (!commonUtils.validateColorValues(cmyk)) {\n            console.error(`Invalid CMYK value ${JSON.stringify(cmyk)}`);\n            return core.clone(defaults.rgb);\n        }\n        const clonedCMYK = core.clone(cmyk);\n        const r = 255 *\n            (1 - clonedCMYK.value.cyan / 100) *\n            (1 - clonedCMYK.value.key / 100);\n        const g = 255 *\n            (1 - clonedCMYK.value.magenta / 100) *\n            (1 - clonedCMYK.value.key / 100);\n        const b = 255 *\n            (1 - clonedCMYK.value.yellow / 100) *\n            (1 - clonedCMYK.value.key / 100);\n        const alpha = cmyk.value.alpha;\n        const rgb = {\n            value: { red: r, green: g, blue: b, alpha },\n            format: 'rgb'\n        };\n        return conversionHelpers.clampRGB(rgb);\n    }\n    catch (error) {\n        console.error(`cmykToRGB error: ${error}`);\n        return core.clone(defaults.rgb);\n    }\n}\nfunction hexToHSL(hex) {\n    try {\n        if (!commonUtils.validateColorValues(hex)) {\n            console.error(`Invalid Hex value ${JSON.stringify(hex)}`);\n            return core.clone(defaults.hsl);\n        }\n        return rgbToHSL(hexToRGB(core.clone(hex)));\n    }\n    catch (error) {\n        console.error(`hexToHSL() error: ${error}`);\n        return core.clone(defaults.hsl);\n    }\n}\nexport function hexToRGB(hex) {\n    try {\n        if (!commonUtils.validateColorValues(hex)) {\n            console.error(`Invalid Hex value ${JSON.stringify(hex)}`);\n            return core.clone(defaults.rgb);\n        }\n        const clonedHex = core.clone(hex);\n        const strippedHex = colorUtils.stripHashFromHex(clonedHex).value.hex;\n        const bigint = parseInt(strippedHex, 16);\n        return {\n            value: {\n                red: (bigint >> 16) & 255,\n                green: (bigint >> 8) & 255,\n                blue: bigint & 255,\n                alpha: hex.value.numericAlpha\n            },\n            format: 'rgb'\n        };\n    }\n    catch (error) {\n        console.error(`hexToRGB error: ${error}`);\n        return core.clone(defaults.rgb);\n    }\n}\nfunction hslToCMYK(hsl) {\n    try {\n        if (!commonUtils.validateColorValues(hsl)) {\n            console.error(`Invalid HSL value ${JSON.stringify(hsl)}`);\n            return core.clone(defaults.cmyk);\n        }\n        return rgbToCMYK(hslToRGB(core.clone(hsl)));\n    }\n    catch (error) {\n        console.error(`Error converting HSL ${JSON.stringify(hsl)} to CMYK: ${error}`);\n        return core.clone(defaults.cmyk);\n    }\n}\nfunction hslToHex(hsl) {\n    try {\n        if (!commonUtils.validateColorValues(hsl)) {\n            console.error(`Invalid HSL value ${JSON.stringify(hsl)}`);\n            return core.clone(defaults.hex);\n        }\n        return rgbToHex(hslToRGB(core.clone(hsl)));\n    }\n    catch (error) {\n        console.warn(`hslToHex error: ${error}`);\n        return core.clone(defaults.hex);\n    }\n}\nfunction hslToHSV(hsl) {\n    try {\n        if (!commonUtils.validateColorValues(hsl)) {\n            console.error(`Invalid HSL value ${JSON.stringify(hsl)}`);\n            return core.clone(defaults.hsv);\n        }\n        const clonedHSL = core.clone(hsl);\n        const s = clonedHSL.value.saturation / 100;\n        const l = clonedHSL.value.lightness / 100;\n        const value = l + s * Math.min(l, 1 - 1);\n        const newSaturation = value === 0 ? 0 : 2 * (1 - l / value);\n        return {\n            value: {\n                hue: Math.round(clonedHSL.value.hue),\n                saturation: Math.round(newSaturation * 100),\n                value: Math.round(value * 100),\n                alpha: hsl.value.alpha\n            },\n            format: 'hsv'\n        };\n    }\n    catch (error) {\n        console.error(`hslToHSV() error: ${error}`);\n        return core.clone(defaults.hsv);\n    }\n}\nfunction hslToLAB(hsl) {\n    try {\n        if (!commonUtils.validateColorValues(hsl)) {\n            console.error(`Invalid HSL value ${JSON.stringify(hsl)}`);\n            return core.clone(defaults.lab);\n        }\n        return xyzToLAB(rgbToXYZ(hslToRGB(core.clone(hsl))));\n    }\n    catch (error) {\n        console.error(`hslToLab() error: ${error}`);\n        return core.clone(defaults.lab);\n    }\n}\nexport function hslToRGB(hsl) {\n    try {\n        if (!commonUtils.validateColorValues(hsl)) {\n            console.error(`Invalid HSL value ${JSON.stringify(hsl)}`);\n            return core.clone(defaults.rgb);\n        }\n        const clonedHSL = core.clone(hsl);\n        const s = clonedHSL.value.saturation / 100;\n        const l = clonedHSL.value.lightness / 100;\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n        return {\n            value: {\n                red: Math.round(conversionHelpers.hueToRGB(p, q, clonedHSL.value.hue + 1 / 3) * 255),\n                green: Math.round(conversionHelpers.hueToRGB(p, q, clonedHSL.value.hue) * 255),\n                blue: Math.round(conversionHelpers.hueToRGB(p, q, clonedHSL.value.hue - 1 / 3) * 255),\n                alpha: hsl.value.alpha\n            },\n            format: 'rgb'\n        };\n    }\n    catch (error) {\n        console.error(`hslToRGB error: ${error}`);\n        return core.clone(defaults.rgb);\n    }\n}\nfunction hslToSL(hsl) {\n    try {\n        if (!commonUtils.validateColorValues(hsl)) {\n            console.error(`Invalid HSL value ${JSON.stringify(hsl)}`);\n            return core.clone(defaults.sl);\n        }\n        return {\n            value: {\n                saturation: hsl.value.saturation,\n                lightness: hsl.value.lightness,\n                alpha: hsl.value.alpha\n            },\n            format: 'sl'\n        };\n    }\n    catch (error) {\n        console.error(`Error converting HSL to SL: ${error}`);\n        return defaults.sl;\n    }\n}\nfunction hslToSV(hsl) {\n    try {\n        if (!commonUtils.validateColorValues(hsl)) {\n            console.error(`Invalid HSL value ${JSON.stringify(hsl)}`);\n            return core.clone(defaults.sv);\n        }\n        return hsvToSV(rgbToHSV(hslToRGB(core.clone(hsl))));\n    }\n    catch (error) {\n        console.error(`Error converting HSL to SV: ${error}`);\n        return defaults.sv;\n    }\n}\nfunction hslToXYZ(hsl) {\n    try {\n        if (!commonUtils.validateColorValues(hsl)) {\n            console.error(`Invalid HSL value ${JSON.stringify(hsl)}`);\n            return core.clone(defaults.xyz);\n        }\n        return labToXYZ(hslToLAB(core.clone(hsl)));\n    }\n    catch (error) {\n        console.error(`hslToXYZ error: ${error}`);\n        return core.clone(defaults.xyz);\n    }\n}\nfunction hsvToHSL(hsv) {\n    try {\n        if (!commonUtils.validateColorValues(hsv)) {\n            console.error(`Invalid HSV value ${JSON.stringify(hsv)}`);\n            return core.clone(defaults.hsl);\n        }\n        const clonedHSV = core.clone(hsv);\n        const newSaturation = clonedHSV.value.value * (1 - clonedHSV.value.saturation / 100) ===\n            0 || clonedHSV.value.value === 0\n            ? 0\n            : (clonedHSV.value.value -\n                clonedHSV.value.value *\n                    (1 - clonedHSV.value.saturation / 100)) /\n                Math.min(clonedHSV.value.value, 100 - clonedHSV.value.value);\n        const lightness = clonedHSV.value.value * (1 - clonedHSV.value.saturation / 200);\n        return {\n            value: {\n                hue: Math.round(clonedHSV.value.hue),\n                saturation: Math.round(newSaturation * 100),\n                lightness: Math.round(lightness),\n                alpha: hsv.value.alpha\n            },\n            format: 'hsl'\n        };\n    }\n    catch (error) {\n        console.error(`hsvToHSL() error: ${error}`);\n        return core.clone(defaults.hsl);\n    }\n}\nfunction hsvToSV(hsv) {\n    try {\n        if (!commonUtils.validateColorValues(hsv)) {\n            console.error(`Invalid HSV value ${JSON.stringify(hsv)}`);\n            return core.clone(defaults.sv);\n        }\n        return {\n            value: {\n                saturation: hsv.value.saturation,\n                value: hsv.value.value,\n                alpha: hsv.value.alpha\n            },\n            format: 'sv'\n        };\n    }\n    catch (error) {\n        console.error(`Error converting HSV to SV: ${error}`);\n        return defaults.sv;\n    }\n}\nfunction labToHSL(lab) {\n    try {\n        if (!commonUtils.validateColorValues(lab)) {\n            console.error(`Invalid LAB value ${JSON.stringify(lab)}`);\n            return core.clone(defaults.hsl);\n        }\n        return rgbToHSL(labToRGB(core.clone(lab)));\n    }\n    catch (error) {\n        console.error(`labToHSL() error: ${error}`);\n        return core.clone(defaults.hsl);\n    }\n}\nexport function labToRGB(lab) {\n    try {\n        if (!commonUtils.validateColorValues(lab)) {\n            console.error(`Invalid LAB value ${JSON.stringify(lab)}`);\n            return core.clone(defaults.rgb);\n        }\n        return xyzToRGB(labToXYZ(core.clone(lab)));\n    }\n    catch (error) {\n        console.error(`labToRGB error: ${error}`);\n        return core.clone(defaults.rgb);\n    }\n}\nfunction labToXYZ(lab) {\n    try {\n        if (!commonUtils.validateColorValues(lab)) {\n            console.error(`Invalid LAB value ${JSON.stringify(lab)}`);\n            return core.clone(defaults.xyz);\n        }\n        const clonedLAB = core.clone(lab);\n        const refX = 95.047, refY = 100.0, refZ = 108.883;\n        let y = (clonedLAB.value.l + 16) / 116;\n        let x = clonedLAB.value.a / 500 + y;\n        let z = y - clonedLAB.value.b / 200;\n        const pow = Math.pow;\n        return {\n            value: {\n                x: refX *\n                    (pow(x, 3) > 0.008856 ? pow(x, 3) : (x - 16 / 116) / 7.787),\n                y: refY *\n                    (pow(y, 3) > 0.008856 ? pow(y, 3) : (y - 16 / 116) / 7.787),\n                z: refZ *\n                    (pow(z, 3) > 0.008856 ? pow(z, 3) : (z - 16 / 116) / 7.787),\n                alpha: lab.value.alpha\n            },\n            format: 'xyz'\n        };\n    }\n    catch (error) {\n        console.error(`labToXYZ error: ${error}`);\n        return core.clone(defaults.xyz);\n    }\n}\nfunction rgbToCMYK(rgb) {\n    try {\n        if (!commonUtils.validateColorValues(rgb)) {\n            console.error(`Invalid RGB value ${JSON.stringify(rgb)}`);\n            return core.clone(defaults.cmyk);\n        }\n        const clonedRGB = core.clone(rgb);\n        const redPrime = clonedRGB.value.red / 255;\n        const greenPrime = clonedRGB.value.green / 255;\n        const bluePrime = clonedRGB.value.blue / 255;\n        const key = commonUtils.sanitizePercentage(1 - Math.max(redPrime, greenPrime, bluePrime));\n        const cyan = commonUtils.sanitizePercentage((1 - redPrime - key) / (1 - key) || 0);\n        const magenta = commonUtils.sanitizePercentage((1 - greenPrime - key) / (1 - key) || 0);\n        const yellow = commonUtils.sanitizePercentage((1 - bluePrime - key) / (1 - key) || 0);\n        const alpha = rgb.value.alpha;\n        const format = 'cmyk';\n        const cmyk = { value: { cyan, magenta, yellow, key, alpha }, format };\n        console.log(`Converted RGB ${JSON.stringify(clonedRGB)} to CMYK: ${JSON.stringify(core.clone(cmyk))}`);\n        return cmyk;\n    }\n    catch (error) {\n        console.error(`Error converting RGB to CMYK: ${error}`);\n        return core.clone(defaults.cmyk);\n    }\n}\nfunction rgbToHex(rgb) {\n    try {\n        if (!commonUtils.validateColorValues(rgb)) {\n            console.error(`Invalid RGB value ${JSON.stringify(rgb)}`);\n            return core.clone(defaults.hex);\n        }\n        const clonedRGB = core.clone(rgb);\n        if ([\n            clonedRGB.value.red,\n            clonedRGB.value.green,\n            clonedRGB.value.blue\n        ].some(v => isNaN(v) || v < 0 || v > 255) ||\n            [clonedRGB.value.alpha].some(v => isNaN(v) || v < 0 || v > 1)) {\n            console.warn(`Invalid RGB values: R=${JSON.stringify(clonedRGB.value.red)}, G=${JSON.stringify(clonedRGB.value.green)}, B=${JSON.stringify(clonedRGB.value.blue)}, A=${JSON.stringify(clonedRGB.value.alpha)}`);\n            return {\n                value: {\n                    hex: '#000000FF',\n                    alpha: 'FF',\n                    numericAlpha: 1\n                },\n                format: 'hex'\n            };\n        }\n        return {\n            value: {\n                hex: `#${colorUtils.componentToHex(clonedRGB.value.red)}${colorUtils.componentToHex(clonedRGB.value.green)}${colorUtils.componentToHex(clonedRGB.value.blue)}`,\n                alpha: colorUtils.componentToHex(clonedRGB.value.alpha),\n                numericAlpha: clonedRGB.value.alpha\n            },\n            format: 'hex'\n        };\n    }\n    catch (error) {\n        console.warn(`rgbToHex error: ${error}`);\n        return core.clone(defaults.hex);\n    }\n}\nfunction rgbToHSL(rgb) {\n    try {\n        if (!commonUtils.validateColorValues(rgb)) {\n            console.error(`Invalid RGB value ${JSON.stringify(rgb)}`);\n            return core.clone(defaults.hsl);\n        }\n        const clonedRGB = core.clone(rgb);\n        clonedRGB.value.red /= 255;\n        clonedRGB.value.green /= 255;\n        clonedRGB.value.blue /= 255;\n        const max = Math.max(clonedRGB.value.red, clonedRGB.value.green, clonedRGB.value.blue);\n        const min = Math.min(clonedRGB.value.red, clonedRGB.value.green, clonedRGB.value.blue);\n        let hue = 0, saturation = 0, lightness = (max + min) / 2;\n        if (max !== min) {\n            const delta = max - min;\n            saturation =\n                lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n            switch (max) {\n                case clonedRGB.value.red:\n                    hue =\n                        (clonedRGB.value.green - clonedRGB.value.blue) / delta +\n                            (clonedRGB.value.green < clonedRGB.value.blue ? 6 : 0);\n                    break;\n                case clonedRGB.value.green:\n                    hue =\n                        (clonedRGB.value.blue - clonedRGB.value.red) / delta +\n                            2;\n                    break;\n                case clonedRGB.value.blue:\n                    hue =\n                        (clonedRGB.value.red - clonedRGB.value.green) / delta +\n                            4;\n                    break;\n            }\n            hue *= 60;\n        }\n        return {\n            value: {\n                hue: Math.round(hue),\n                saturation: Math.round(saturation * 100),\n                lightness: Math.round(lightness * 100),\n                alpha: rgb.value.alpha\n            },\n            format: 'hsl'\n        };\n    }\n    catch (error) {\n        console.error(`rgbToHSL() error: ${error}`);\n        return core.clone(defaults.hsl);\n    }\n}\nfunction rgbToHSV(rgb) {\n    try {\n        if (!commonUtils.validateColorValues(rgb)) {\n            console.error(`Invalid RGB value ${JSON.stringify(rgb)}`);\n            return core.clone(defaults.hsv);\n        }\n        const clonedRGB = core.clone(rgb);\n        clonedRGB.value.red /= 255;\n        clonedRGB.value.green /= 255;\n        clonedRGB.value.blue /= 255;\n        const max = Math.max(clonedRGB.value.red, clonedRGB.value.green, clonedRGB.value.blue);\n        const min = Math.min(clonedRGB.value.red, clonedRGB.value.green, clonedRGB.value.blue);\n        const delta = max - min;\n        let hue = 0;\n        const value = max;\n        const saturation = max === 0 ? 0 : delta / max;\n        if (max !== min) {\n            switch (max) {\n                case clonedRGB.value.red:\n                    hue =\n                        (clonedRGB.value.green - clonedRGB.value.blue) / delta +\n                            (clonedRGB.value.green < clonedRGB.value.blue ? 6 : 0);\n                    break;\n                case clonedRGB.value.green:\n                    hue =\n                        (clonedRGB.value.blue - clonedRGB.value.red) / delta +\n                            2;\n                    break;\n                case clonedRGB.value.blue:\n                    hue =\n                        (clonedRGB.value.red - clonedRGB.value.green) / delta +\n                            4;\n                    break;\n            }\n            hue *= 60;\n        }\n        return {\n            value: {\n                hue: Math.round(hue),\n                saturation: Math.round(saturation * 100),\n                value: Math.round(value * 100),\n                alpha: rgb.value.alpha\n            },\n            format: 'hsv'\n        };\n    }\n    catch (error) {\n        console.error(`rgbToHSV() error: ${error}`);\n        return core.clone(defaults.hsv);\n    }\n}\nfunction rgbToXYZ(rgb) {\n    try {\n        if (!commonUtils.validateColorValues(rgb)) {\n            console.error(`Invalid RGB value ${JSON.stringify(rgb)}`);\n            return core.clone(defaults.xyz);\n        }\n        const clonedRGB = core.clone(rgb);\n        clonedRGB.value.red = clonedRGB.value.red / 255;\n        clonedRGB.value.green = clonedRGB.value.green / 255;\n        clonedRGB.value.blue = clonedRGB.value.blue / 255;\n        clonedRGB.value.red =\n            clonedRGB.value.red > 0.04045\n                ? Math.pow((clonedRGB.value.red + 0.055) / 1.055, 2.4)\n                : clonedRGB.value.red / 12.92;\n        clonedRGB.value.green =\n            clonedRGB.value.green > 0.04045\n                ? Math.pow((clonedRGB.value.green + 0.055) / 1.055, 2.4)\n                : clonedRGB.value.green / 12.92;\n        clonedRGB.value.blue =\n            clonedRGB.value.blue > 0.04045\n                ? Math.pow((clonedRGB.value.blue + 0.055) / 1.055, 2.4)\n                : clonedRGB.value.blue / 12.92;\n        clonedRGB.value.red = clonedRGB.value.red * 100;\n        clonedRGB.value.green = clonedRGB.value.green * 100;\n        clonedRGB.value.blue = clonedRGB.value.blue * 100;\n        return {\n            value: {\n                x: clonedRGB.value.red * 0.4124 +\n                    clonedRGB.value.green * 0.3576 +\n                    clonedRGB.value.blue * 0.1805,\n                y: clonedRGB.value.red * 0.2126 +\n                    clonedRGB.value.green * 0.7152 +\n                    clonedRGB.value.blue * 0.0722,\n                z: clonedRGB.value.red * 0.0193 +\n                    clonedRGB.value.green * 0.1192 +\n                    clonedRGB.value.blue * 0.9505,\n                alpha: rgb.value.alpha\n            },\n            format: 'xyz'\n        };\n    }\n    catch (error) {\n        console.error(`rgbToXYZ error: ${error}`);\n        return core.clone(defaults.xyz);\n    }\n}\nfunction xyzToLAB(xyz) {\n    try {\n        if (!commonUtils.validateColorValues(xyz)) {\n            console.error(`Invalid XYZ value ${JSON.stringify(xyz)}`);\n            return core.clone(defaults.lab);\n        }\n        const clonedXYZ = core.clone(xyz);\n        const refX = 95.047, refY = 100.0, refZ = 108.883;\n        clonedXYZ.value.x = clonedXYZ.value.x / refX;\n        clonedXYZ.value.y = clonedXYZ.value.y / refY;\n        clonedXYZ.value.z = clonedXYZ.value.z / refZ;\n        clonedXYZ.value.x =\n            clonedXYZ.value.x > 0.008856\n                ? Math.pow(clonedXYZ.value.x, 1 / 3)\n                : 7.787 * clonedXYZ.value.x + 16 / 116;\n        clonedXYZ.value.y =\n            clonedXYZ.value.y > 0.008856\n                ? Math.pow(clonedXYZ.value.y, 1 / 3)\n                : 7.787 * clonedXYZ.value.y + 16 / 116;\n        clonedXYZ.value.z =\n            clonedXYZ.value.z > 0.008856\n                ? Math.pow(clonedXYZ.value.z, 1 / 3)\n                : 7.787 * clonedXYZ.value.z + 16 / 116;\n        const l = commonUtils.sanitizePercentage(parseFloat((116 * clonedXYZ.value.y - 16).toFixed(2)));\n        const a = commonUtils.sanitizeLAB(parseFloat((500 * (clonedXYZ.value.x - clonedXYZ.value.y)).toFixed(2)));\n        const b = commonUtils.sanitizeLAB(parseFloat((200 * (clonedXYZ.value.y - clonedXYZ.value.z)).toFixed(2)));\n        const lab = {\n            value: { l, a, b, alpha: xyz.value.alpha },\n            format: 'lab'\n        };\n        if (!commonUtils.validateColorValues(lab)) {\n            console.error(`Invalid LAB value ${JSON.stringify(lab)}`);\n            return core.clone(defaults.lab);\n        }\n        return lab;\n    }\n    catch (error) {\n        console.error(`xyzToLab() error: ${error}`);\n        return core.clone(defaults.lab);\n    }\n}\nfunction xyzToHSL(xyz) {\n    try {\n        if (!commonUtils.validateColorValues(xyz)) {\n            console.error(`Invalid XYZ value ${JSON.stringify(xyz)}`);\n            return core.clone(defaults.hsl);\n        }\n        return rgbToHSL(xyzToRGB(core.clone(xyz)));\n    }\n    catch (error) {\n        console.error(`xyzToHSL() error: ${error}`);\n        return core.clone(defaults.hsl);\n    }\n}\nexport function xyzToRGB(xyz) {\n    try {\n        if (!commonUtils.validateColorValues(xyz)) {\n            console.error(`Invalid XYZ value ${JSON.stringify(xyz)}`);\n            return core.clone(defaults.rgb);\n        }\n        const clonedXYZ = core.clone(xyz);\n        clonedXYZ.value.x /= 100;\n        clonedXYZ.value.y /= 100;\n        clonedXYZ.value.z /= 100;\n        let red = clonedXYZ.value.x * 3.2406 +\n            clonedXYZ.value.y * -1.5372 +\n            clonedXYZ.value.z * -0.4986;\n        let green = clonedXYZ.value.x * -0.9689 +\n            clonedXYZ.value.y * 1.8758 +\n            clonedXYZ.value.z * 0.0415;\n        let blue = clonedXYZ.value.x * 0.0557 +\n            clonedXYZ.value.y * -0.204 +\n            clonedXYZ.value.z * 1.057;\n        red = conversionHelpers.applyGammaCorrection(red);\n        green = conversionHelpers.applyGammaCorrection(green);\n        blue = conversionHelpers.applyGammaCorrection(blue);\n        return conversionHelpers.clampRGB({\n            value: { red, green, blue, alpha: xyz.value.alpha },\n            format: 'rgb'\n        });\n    }\n    catch (error) {\n        console.error(`xyzToRGB error: ${error}`);\n        return core.clone(defaults.rgb);\n    }\n}\nexport const convert = {\n    cmykToHSL,\n    hexToHSL,\n    hslToCMYK,\n    hslToHex,\n    hslToHSV,\n    hslToLAB,\n    hslToRGB,\n    hslToSL,\n    hslToSV,\n    hslToXYZ,\n    hsvToHSL,\n    hsvToSV,\n    labToHSL,\n    labToXYZ,\n    rgbToCMYK,\n    rgbToHex,\n    rgbToHSL,\n    rgbToHSV,\n    rgbToXYZ,\n    xyzToHSL,\n    xyzToLAB\n};\nexport function hslTo(color, colorSpace) {\n    try {\n        if (!commonUtils.validateColorValues(color)) {\n            console.error(`Invalid color value ${JSON.stringify(color)}`);\n            return core.clone(defaults.rgb);\n        }\n        const clonedColor = core.clone(color);\n        switch (colorSpace) {\n            case 'cmyk':\n                return hslToCMYK(clonedColor);\n            case 'hex':\n                return hslToHex(clonedColor);\n            case 'hsl':\n                return core.clone(clonedColor);\n            case 'hsv':\n                return hslToHSV(clonedColor);\n            case 'lab':\n                return hslToLAB(clonedColor);\n            case 'rgb':\n                return hslToRGB(clonedColor);\n            case 'sl':\n                return hslToSL(clonedColor);\n            case 'sv':\n                return hslToSV(clonedColor);\n            case 'xyz':\n                return hslToXYZ(clonedColor);\n            default:\n                throw new Error('Invalid color format');\n        }\n    }\n    catch (error) {\n        throw new Error(`hslTo() error: ${error}`);\n    }\n}\nexport function toHSL(color) {\n    try {\n        if (!commonUtils.validateColorValues(color)) {\n            console.error(`Invalid color value ${JSON.stringify(color)}`);\n            return core.clone(defaults.hsl);\n        }\n        const clonedColor = core.clone(color);\n        switch (color.format) {\n            case 'cmyk':\n                return cmykToHSL(clonedColor);\n            case 'hex':\n                return hexToHSL(clonedColor);\n            case 'hsl':\n                return core.clone(clonedColor);\n            case 'hsv':\n                return hsvToHSL(clonedColor);\n            case 'lab':\n                return labToHSL(clonedColor);\n            case 'rgb':\n                return rgbToHSL(clonedColor);\n            case 'xyz':\n                return xyzToHSL(clonedColor);\n            default:\n                throw new Error('Invalid color format');\n        }\n    }\n    catch (error) {\n        throw new Error(`toHSL() error: ${error}`);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","import { commonUtils } from './common-utils.js';\nimport { core } from './core-utils.js';\nimport { convert } from '../palette-gen/conversion-index.js';\nexport function getConversionFn(from, to) {\n    try {\n        const fnName = `${from}To${to[0].toUpperCase() + to.slice(1)}`;\n        if (!(fnName in convert))\n            return undefined;\n        const conversionFn = convert[fnName];\n        return (value) => structuredClone(conversionFn(value));\n    }\n    catch (error) {\n        console.error(`Error getting conversion function: ${error}`);\n        return undefined;\n    }\n}\nexport function genAllColorValues(color) {\n    const result = {};\n    try {\n        const clonedColor = core.clone(color);\n        if (!commonUtils.validateColorValues(clonedColor)) {\n            console.error(`Invalid color: ${JSON.stringify(clonedColor)}`);\n            return {};\n        }\n        result.cmyk = convert.hslToCMYK(clonedColor);\n        result.hex = convert.hslToHex(clonedColor);\n        result.hsl = clonedColor;\n        result.hsv = convert.hslToHSV(clonedColor);\n        result.lab = convert.hslToLAB(clonedColor);\n        result.rgb = convert.hslToRGB(clonedColor);\n        result.sl = convert.hslToSL(clonedColor);\n        result.sv = convert.hslToSV(clonedColor);\n        result.xyz = convert.hslToXYZ(clonedColor);\n        return result;\n    }\n    catch (error) {\n        console.error(`Error generating all color values: ${error}`);\n        return {};\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVyc2lvbi11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9jb252ZXJzaW9uLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRXBDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUUxRCxNQUFNLFVBQVUsZUFBZSxDQUk5QixJQUFVLEVBQ1YsRUFBTTtJQU1OLElBQUksQ0FBQztRQUNKLE1BQU0sTUFBTSxHQUNYLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUEwQixDQUFDO1FBRXpFLElBQUksQ0FBQyxDQUFDLE1BQU0sSUFBSSxPQUFPLENBQUM7WUFBRSxPQUFPLFNBQVMsQ0FBQztRQUUzQyxNQUFNLFlBQVksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUVELENBQUM7UUFFbkMsT0FBTyxDQUNOLEtBQXNDLEVBQ04sRUFBRSxDQUNsQyxlQUFlLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7UUFDaEIsT0FBTyxDQUFDLEtBQUssQ0FBQyxzQ0FBc0MsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUU3RCxPQUFPLFNBQVMsQ0FBQztJQUNsQixDQUFDO0FBQ0YsQ0FBQztBQUVELE1BQU0sVUFBVSxpQkFBaUIsQ0FDaEMsS0FBaUI7SUFFakIsTUFBTSxNQUFNLEdBQXNDLEVBQUUsQ0FBQztJQUVyRCxJQUFJLENBQUM7UUFDSixNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRXRDLElBQUksQ0FBQyxXQUFXLENBQUMsbUJBQW1CLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQztZQUNuRCxPQUFPLENBQUMsS0FBSyxDQUFDLGtCQUFrQixJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUUvRCxPQUFPLEVBQUUsQ0FBQztRQUNYLENBQUM7UUFFRCxNQUFNLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDN0MsTUFBTSxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsV0FBVyxDQUFDO1FBQ3pCLE1BQU0sQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzQyxNQUFNLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0MsTUFBTSxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN6QyxNQUFNLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDekMsTUFBTSxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBRTNDLE9BQU8sTUFBTSxDQUFDO0lBQ2YsQ0FBQztJQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7UUFDaEIsT0FBTyxDQUFDLEtBQUssQ0FBQyxzQ0FBc0MsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUU3RCxPQUFPLEVBQUUsQ0FBQztJQUNYLENBQUM7QUFDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tbW9uVXRpbHMgfSBmcm9tICcuL2NvbW1vbi11dGlscyc7XG5pbXBvcnQgeyBjb3JlIH0gZnJvbSAnLi9jb3JlLXV0aWxzJztcbmltcG9ydCAqIGFzIGNvbG9ycyBmcm9tICcuLi9pbmRleC9jb2xvcnMnO1xuaW1wb3J0IHsgY29udmVydCB9IGZyb20gJy4uL3BhbGV0dGUtZ2VuL2NvbnZlcnNpb24taW5kZXgnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29udmVyc2lvbkZuPFxuXHRGcm9tIGV4dGVuZHMga2V5b2YgY29sb3JzLkNvbG9yRGF0YUFzc2VydGlvbixcblx0VG8gZXh0ZW5kcyBrZXlvZiBjb2xvcnMuQ29sb3JEYXRhQXNzZXJ0aW9uXG4+KFxuXHRmcm9tOiBGcm9tLFxuXHR0bzogVG9cbik6XG5cdHwgKChcblx0XHRcdHZhbHVlOiBjb2xvcnMuQ29sb3JEYXRhQXNzZXJ0aW9uW0Zyb21dXG5cdCAgKSA9PiBjb2xvcnMuQ29sb3JEYXRhQXNzZXJ0aW9uW1RvXSlcblx0fCB1bmRlZmluZWQge1xuXHR0cnkge1xuXHRcdGNvbnN0IGZuTmFtZSA9XG5cdFx0XHRgJHtmcm9tfVRvJHt0b1swXS50b1VwcGVyQ2FzZSgpICsgdG8uc2xpY2UoMSl9YCBhcyBrZXlvZiB0eXBlb2YgY29udmVydDtcblxuXHRcdGlmICghKGZuTmFtZSBpbiBjb252ZXJ0KSkgcmV0dXJuIHVuZGVmaW5lZDtcblxuXHRcdGNvbnN0IGNvbnZlcnNpb25GbiA9IGNvbnZlcnRbZm5OYW1lXSBhcyB1bmtub3duIGFzIChcblx0XHRcdGlucHV0OiBjb2xvcnMuQ29sb3JEYXRhQXNzZXJ0aW9uW0Zyb21dXG5cdFx0KSA9PiBjb2xvcnMuQ29sb3JEYXRhQXNzZXJ0aW9uW1RvXTtcblxuXHRcdHJldHVybiAoXG5cdFx0XHR2YWx1ZTogY29sb3JzLkNvbG9yRGF0YUFzc2VydGlvbltGcm9tXVxuXHRcdCk6IGNvbG9ycy5Db2xvckRhdGFBc3NlcnRpb25bVG9dID0+XG5cdFx0XHRzdHJ1Y3R1cmVkQ2xvbmUoY29udmVyc2lvbkZuKHZhbHVlKSk7XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0Y29uc29sZS5lcnJvcihgRXJyb3IgZ2V0dGluZyBjb252ZXJzaW9uIGZ1bmN0aW9uOiAke2Vycm9yfWApO1xuXG5cdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0fVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2VuQWxsQ29sb3JWYWx1ZXMoXG5cdGNvbG9yOiBjb2xvcnMuSFNMXG4pOiBQYXJ0aWFsPGNvbG9ycy5Db2xvckRhdGFFeHRlbmRlZD4ge1xuXHRjb25zdCByZXN1bHQ6IFBhcnRpYWw8Y29sb3JzLkNvbG9yRGF0YUV4dGVuZGVkPiA9IHt9O1xuXG5cdHRyeSB7XG5cdFx0Y29uc3QgY2xvbmVkQ29sb3IgPSBjb3JlLmNsb25lKGNvbG9yKTtcblxuXHRcdGlmICghY29tbW9uVXRpbHMudmFsaWRhdGVDb2xvclZhbHVlcyhjbG9uZWRDb2xvcikpIHtcblx0XHRcdGNvbnNvbGUuZXJyb3IoYEludmFsaWQgY29sb3I6ICR7SlNPTi5zdHJpbmdpZnkoY2xvbmVkQ29sb3IpfWApO1xuXG5cdFx0XHRyZXR1cm4ge307XG5cdFx0fVxuXG5cdFx0cmVzdWx0LmNteWsgPSBjb252ZXJ0LmhzbFRvQ01ZSyhjbG9uZWRDb2xvcik7XG5cdFx0cmVzdWx0LmhleCA9IGNvbnZlcnQuaHNsVG9IZXgoY2xvbmVkQ29sb3IpO1xuXHRcdHJlc3VsdC5oc2wgPSBjbG9uZWRDb2xvcjtcblx0XHRyZXN1bHQuaHN2ID0gY29udmVydC5oc2xUb0hTVihjbG9uZWRDb2xvcik7XG5cdFx0cmVzdWx0LmxhYiA9IGNvbnZlcnQuaHNsVG9MQUIoY2xvbmVkQ29sb3IpO1xuXHRcdHJlc3VsdC5yZ2IgPSBjb252ZXJ0LmhzbFRvUkdCKGNsb25lZENvbG9yKTtcblx0XHRyZXN1bHQuc2wgPSBjb252ZXJ0LmhzbFRvU0woY2xvbmVkQ29sb3IpO1xuXHRcdHJlc3VsdC5zdiA9IGNvbnZlcnQuaHNsVG9TVihjbG9uZWRDb2xvcik7XG5cdFx0cmVzdWx0Lnh5eiA9IGNvbnZlcnQuaHNsVG9YWVooY2xvbmVkQ29sb3IpO1xuXG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLmVycm9yKGBFcnJvciBnZW5lcmF0aW5nIGFsbCBjb2xvciB2YWx1ZXM6ICR7ZXJyb3J9YCk7XG5cblx0XHRyZXR1cm4ge307XG5cdH1cbn1cbiJdfQ==","let dragSrcEl = null;\nfunction attachDragAndDropEventListeners(element) {\n    try {\n        if (element) {\n            element.addEventListener('dragstart', dragAndDrop.handleDragStart);\n            element.addEventListener('dragover', dragAndDrop.handleDragOver);\n            element.addEventListener('drop', dragAndDrop.handleDrop);\n            element.addEventListener('dragend', dragAndDrop.handleDragEnd);\n        }\n        console.log('Drag and drop event listeners successfully attached');\n    }\n    catch (error) {\n        console.error(`Failed to execute attachDragAndDropEventListeners: ${error}`);\n    }\n}\nfunction handleDragStart(e) {\n    try {\n        dragSrcEl = e.currentTarget;\n        if (e.dataTransfer) {\n            e.dataTransfer.effectAllowed = 'move';\n            e.dataTransfer.setData('text/html', dragSrcEl.outerHTML);\n        }\n        console.log('handleDragStart complete');\n    }\n    catch (error) {\n        console.error(`Error in handleDragStart: ${error}`);\n    }\n}\nfunction handleDragOver(e) {\n    try {\n        e.preventDefault();\n        if (e.dataTransfer) {\n            e.dataTransfer.dropEffect = 'move';\n        }\n        console.log('handleDragOver complete');\n        return false;\n    }\n    catch (error) {\n        console.error(`Error in handleDragOver: ${error}`);\n        return false;\n    }\n}\nfunction handleDragEnd(e) {\n    try {\n        const target = e.currentTarget;\n        target.classList.remove('dragging');\n        document.querySelectorAll('.color-stripe').forEach(el => {\n            el.classList.remove('dragging');\n        });\n        console.log('handleDragEnd complete');\n    }\n    catch (error) {\n        console.error(`Error in handleDragEnd: ${error}`);\n    }\n}\nfunction handleDrop(e) {\n    try {\n        e.stopPropagation();\n        const target = e.currentTarget;\n        if (dragSrcEl && dragSrcEl !== target) {\n            const dragSrcId = dragSrcEl.id;\n            const dropTargetId = target.id;\n            const dragSrcText = dragSrcEl.querySelector('.color-text-output-box').value;\n            const dropTargetText = target.querySelector('.color-text-output-box').value;\n            const dragSrcOuterHTML = dragSrcEl.outerHTML;\n            const dropTargetOuterHTML = target.outerHTML;\n            dragSrcEl.outerHTML = dropTargetOuterHTML;\n            target.outerHTML = dragSrcOuterHTML;\n            const newDragSrcEl = document.getElementById(dropTargetId);\n            const newDropTargetEl = document.getElementById(dragSrcId);\n            newDragSrcEl.id = dragSrcId;\n            newDropTargetEl.id = dropTargetId;\n            newDragSrcEl.querySelector('.color-text-output-box').value = dropTargetText;\n            newDropTargetEl.querySelector('.color-text-output-box').value = dragSrcText;\n            console.log('calling attachDragAndDropEventListeners for new elements');\n            attachDragAndDropEventListeners(newDragSrcEl);\n            attachDragAndDropEventListeners(newDropTargetEl);\n        }\n        console.log('handleDrop complete');\n    }\n    catch (error) {\n        console.error(`Error in handleDrop: ${error}`);\n    }\n}\nexport const dragAndDrop = {\n    attachDragAndDropEventListeners,\n    handleDragEnd,\n    handleDragOver,\n    handleDragStart,\n    handleDrop\n};\n//# sourceMappingURL=data:application/json;base64,","import { config } from '../config/constants.js';\nimport { dragAndDrop } from '../dom/drag-and-drop.js';\nimport { colorUtils } from '../utils/color-utils.js';\nimport { commonUtils } from '../utils/common-utils.js';\nimport { core } from '../utils/core-utils.js';\nfunction makePaletteBox(color, paletteBoxCount) {\n    try {\n        if (!commonUtils.validateColorValues(color)) {\n            console.error(`Invalid ${color.format} color value ${JSON.stringify(color)}`);\n            return {\n                colorStripe: document.createElement('div'),\n                paletteBoxCount\n            };\n        }\n        const clonedColor = core.clone(color);\n        const paletteBox = document.createElement('div');\n        paletteBox.className = 'palette-box';\n        paletteBox.id = `palette-box-${paletteBoxCount}`;\n        const paletteBoxTopHalf = document.createElement('div');\n        paletteBoxTopHalf.className = 'palette-box-half palette-box-top-half';\n        paletteBoxTopHalf.id = `palette-box-top-half-${paletteBoxCount}`;\n        const colorTextOutputBox = document.createElement('input');\n        colorTextOutputBox.type = 'text';\n        colorTextOutputBox.className = 'color-text-output-box tooltip';\n        colorTextOutputBox.id = `color-text-output-box-${paletteBoxCount}`;\n        colorTextOutputBox.setAttribute('data-format', 'hex');\n        const colorString = colorUtils.getCSSColorString(clonedColor);\n        colorTextOutputBox.value = colorString || '';\n        colorTextOutputBox.colorValues = clonedColor;\n        colorTextOutputBox.readOnly = false;\n        colorTextOutputBox.style.cursor = 'text';\n        colorTextOutputBox.style.pointerEvents = 'none';\n        const copyButton = document.createElement('button');\n        copyButton.className = 'copy-button';\n        copyButton.textContent = 'Copy';\n        const tooltipText = document.createElement('span');\n        tooltipText.className = 'tooltiptext';\n        tooltipText.textContent = 'Copied to clipboard!';\n        copyButton.addEventListener('click', async () => {\n            try {\n                await navigator.clipboard.writeText(colorTextOutputBox.value);\n                domHelpers.showTooltip(colorTextOutputBox);\n                clearTimeout(config.tooltipTimeout || 1000);\n                copyButton.textContent = 'Copied!';\n                setTimeout(() => (copyButton.textContent = 'Copy'), config.copyButtonTextTimeout || 1000);\n            }\n            catch (error) {\n                console.error(`Failed to copy: ${error}`);\n            }\n        });\n        colorTextOutputBox.addEventListener('input', core.debounce((e) => {\n            const target = e.target;\n            if (target) {\n                const cssColor = target.value.trim();\n                const boxElement = document.getElementById(`color-box-${paletteBoxCount}`);\n                const stripeElement = document.getElementById(`color-stripe-${paletteBoxCount}`);\n                if (boxElement)\n                    boxElement.style.backgroundColor = cssColor;\n                if (stripeElement)\n                    stripeElement.style.backgroundColor = cssColor;\n            }\n        }, config.inputDebounce || 200));\n        paletteBoxTopHalf.appendChild(colorTextOutputBox);\n        paletteBoxTopHalf.appendChild(copyButton);\n        const paletteBoxBottomHalf = document.createElement('div');\n        paletteBoxBottomHalf.className =\n            'palette-box-half palette-box-bottom-half';\n        paletteBoxBottomHalf.id = `palette-box-bottom-half-${paletteBoxCount}`;\n        const colorBox = document.createElement('div');\n        colorBox.className = 'color-box';\n        colorBox.id = `color-box-${paletteBoxCount}`;\n        colorBox.style.backgroundColor = colorString || '#ffffff';\n        paletteBoxBottomHalf.appendChild(colorBox);\n        paletteBox.appendChild(paletteBoxTopHalf);\n        paletteBox.appendChild(paletteBoxBottomHalf);\n        const colorStripe = document.createElement('div');\n        colorStripe.className = 'color-stripe';\n        colorStripe.id = `color-stripe-${paletteBoxCount}`;\n        colorStripe.style.backgroundColor = colorString || '#ffffff';\n        colorStripe.setAttribute('draggable', 'true');\n        dragAndDrop.attachDragAndDropEventListeners(colorStripe);\n        colorStripe.appendChild(paletteBox);\n        return {\n            colorStripe,\n            paletteBoxCount: paletteBoxCount + 1\n        };\n    }\n    catch (error) {\n        console.error(`Failed to execute makePaletteBox: ${error}`);\n        return {\n            colorStripe: document.createElement('div'),\n            paletteBoxCount\n        };\n    }\n}\nfunction showTooltip(tooltipElement) {\n    try {\n        const tooltip = tooltipElement.querySelector('.tooltiptext');\n        if (tooltip) {\n            tooltip.style.visibility = 'visible';\n            tooltip.style.opacity = '1';\n            setTimeout(() => {\n                tooltip.style.visibility = 'hidden';\n                tooltip.style.opacity = '0';\n            }, config.tooltipTimeout || 1000);\n        }\n        console.log('showTooltip executed');\n    }\n    catch (error) {\n        console.error(`Failed to execute showTooltip: ${error}`);\n    }\n}\nexport const domHelpers = {\n    makePaletteBox,\n    showTooltip\n};\n//# sourceMappingURL=data:application/json;base64,","import { config } from '../config/constants.js';\nfunction showToast(message) {\n    const toast = document.createElement('div');\n    toast.className = 'toast-message';\n    toast.textContent = message;\n    document.body.appendChild(toast);\n    setTimeout(() => {\n        toast.classList.add('fade-out');\n        toast.addEventListener('transitioned', () => toast.remove());\n    }, config.toastTimeout || 3000);\n}\nexport const notification = {\n    showToast\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2hlbHBlcnMvbm90aWZpY2F0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUc3QyxTQUFTLFNBQVMsQ0FBQyxPQUFlO0lBQ2pDLE1BQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFNUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxlQUFlLENBQUM7SUFFbEMsS0FBSyxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUM7SUFFNUIsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFakMsVUFBVSxDQUFDLEdBQUcsRUFBRTtRQUNmLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2hDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDOUQsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLENBQUM7QUFDakMsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBMkI7SUFDbkQsU0FBUztDQUNULENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25maWcgfSBmcm9tICcuLi9jb25maWcvY29uc3RhbnRzJztcbmltcG9ydCAqIGFzIGZuT2JqZWN0cyBmcm9tICcuLi9pbmRleC9mbi1vYmplY3RzJztcblxuZnVuY3Rpb24gc2hvd1RvYXN0KG1lc3NhZ2U6IHN0cmluZyk6IHZvaWQge1xuXHRjb25zdCB0b2FzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG5cdHRvYXN0LmNsYXNzTmFtZSA9ICd0b2FzdC1tZXNzYWdlJztcblxuXHR0b2FzdC50ZXh0Q29udGVudCA9IG1lc3NhZ2U7XG5cblx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0b2FzdCk7XG5cblx0c2V0VGltZW91dCgoKSA9PiB7XG5cdFx0dG9hc3QuY2xhc3NMaXN0LmFkZCgnZmFkZS1vdXQnKTtcblx0XHR0b2FzdC5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZWQnLCAoKSA9PiB0b2FzdC5yZW1vdmUoKSk7XG5cdH0sIGNvbmZpZy50b2FzdFRpbWVvdXQgfHwgMzAwMCk7XG59XG5cbmV4cG9ydCBjb25zdCBub3RpZmljYXRpb246IGZuT2JqZWN0cy5Ob3RpZmljYXRpb24gPSB7XG5cdHNob3dUb2FzdFxufTtcbiJdfQ==","import { config } from '../config/constants.js';\nimport { commonUtils } from '../utils/common-utils.js';\nimport { core } from '../utils/core-utils.js';\nfunction isColorInBounds(hsl) {\n    if (!commonUtils.validateColorValues(hsl)) {\n        console.error(`Invalid HSL value ${JSON.stringify(hsl)}`);\n        return false;\n    }\n    return isTooGray(hsl) || isTooDark(hsl) || isTooBright(hsl);\n}\nfunction isTooBright(hsl) {\n    if (!commonUtils.validateColorValues(hsl)) {\n        console.error(`Invalid HSL value ${JSON.stringify(hsl)}`);\n        return false;\n    }\n    return core.clone(hsl).value.lightness > config.brightnessThreshold;\n}\nfunction isTooDark(hsl) {\n    if (!commonUtils.validateColorValues(hsl)) {\n        console.error(`Invalid HSL value ${JSON.stringify(hsl)}`);\n        return false;\n    }\n    return core.clone(hsl).value.lightness < config.darknessThreshold;\n}\nfunction isTooGray(hsl) {\n    if (!commonUtils.validateColorValues(hsl)) {\n        console.error(`Invalid HSL value ${JSON.stringify(hsl)}`);\n        return false;\n    }\n    return core.clone(hsl).value.saturation < config.grayThreshold;\n}\nexport const limits = {\n    isColorInBounds,\n    isTooBright,\n    isTooDark,\n    isTooGray\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGltaXRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3BhbGV0dGUtZ2VuL2xpbWl0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFHN0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUUzQyxTQUFTLGVBQWUsQ0FBQyxHQUFlO0lBQ3ZDLElBQUksQ0FBQyxXQUFXLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUMzQyxPQUFPLENBQUMsS0FBSyxDQUFDLHFCQUFxQixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUUxRCxPQUFPLEtBQUssQ0FBQztJQUNkLENBQUM7SUFFRCxPQUFPLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQzdELENBQUM7QUFFRCxTQUFTLFdBQVcsQ0FBQyxHQUFlO0lBQ25DLElBQUksQ0FBQyxXQUFXLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUMzQyxPQUFPLENBQUMsS0FBSyxDQUFDLHFCQUFxQixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUUxRCxPQUFPLEtBQUssQ0FBQztJQUNkLENBQUM7SUFFRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsbUJBQW1CLENBQUM7QUFDckUsQ0FBQztBQUVELFNBQVMsU0FBUyxDQUFDLEdBQWU7SUFDakMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQzNDLE9BQU8sQ0FBQyxLQUFLLENBQUMscUJBQXFCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRTFELE9BQU8sS0FBSyxDQUFDO0lBQ2QsQ0FBQztJQUVELE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQztBQUNuRSxDQUFDO0FBRUQsU0FBUyxTQUFTLENBQUMsR0FBZTtJQUNqQyxJQUFJLENBQUMsV0FBVyxDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7UUFDM0MsT0FBTyxDQUFDLEtBQUssQ0FBQyxxQkFBcUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFMUQsT0FBTyxLQUFLLENBQUM7SUFDZCxDQUFDO0lBRUQsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQztBQUNoRSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sTUFBTSxHQUFxQjtJQUN2QyxlQUFlO0lBQ2YsV0FBVztJQUNYLFNBQVM7SUFDVCxTQUFTO0NBQ1QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uL2NvbmZpZy9jb25zdGFudHMnO1xuaW1wb3J0ICogYXMgY29sb3JzIGZyb20gJy4uL2luZGV4L2NvbG9ycyc7XG5pbXBvcnQgKiBhcyBmbk9iamVjdHMgZnJvbSAnLi4vaW5kZXgvZm4tb2JqZWN0cyc7XG5pbXBvcnQgeyBjb21tb25VdGlscyB9IGZyb20gJy4uL3V0aWxzL2NvbW1vbi11dGlscyc7XG5pbXBvcnQgeyBjb3JlIH0gZnJvbSAnLi4vdXRpbHMvY29yZS11dGlscyc7XG5cbmZ1bmN0aW9uIGlzQ29sb3JJbkJvdW5kcyhoc2w6IGNvbG9ycy5IU0wpOiBib29sZWFuIHtcblx0aWYgKCFjb21tb25VdGlscy52YWxpZGF0ZUNvbG9yVmFsdWVzKGhzbCkpIHtcblx0XHRjb25zb2xlLmVycm9yKGBJbnZhbGlkIEhTTCB2YWx1ZSAke0pTT04uc3RyaW5naWZ5KGhzbCl9YCk7XG5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRyZXR1cm4gaXNUb29HcmF5KGhzbCkgfHwgaXNUb29EYXJrKGhzbCkgfHwgaXNUb29CcmlnaHQoaHNsKTtcbn1cblxuZnVuY3Rpb24gaXNUb29CcmlnaHQoaHNsOiBjb2xvcnMuSFNMKTogYm9vbGVhbiB7XG5cdGlmICghY29tbW9uVXRpbHMudmFsaWRhdGVDb2xvclZhbHVlcyhoc2wpKSB7XG5cdFx0Y29uc29sZS5lcnJvcihgSW52YWxpZCBIU0wgdmFsdWUgJHtKU09OLnN0cmluZ2lmeShoc2wpfWApO1xuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0cmV0dXJuIGNvcmUuY2xvbmUoaHNsKS52YWx1ZS5saWdodG5lc3MgPiBjb25maWcuYnJpZ2h0bmVzc1RocmVzaG9sZDtcbn1cblxuZnVuY3Rpb24gaXNUb29EYXJrKGhzbDogY29sb3JzLkhTTCk6IGJvb2xlYW4ge1xuXHRpZiAoIWNvbW1vblV0aWxzLnZhbGlkYXRlQ29sb3JWYWx1ZXMoaHNsKSkge1xuXHRcdGNvbnNvbGUuZXJyb3IoYEludmFsaWQgSFNMIHZhbHVlICR7SlNPTi5zdHJpbmdpZnkoaHNsKX1gKTtcblxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdHJldHVybiBjb3JlLmNsb25lKGhzbCkudmFsdWUubGlnaHRuZXNzIDwgY29uZmlnLmRhcmtuZXNzVGhyZXNob2xkO1xufVxuXG5mdW5jdGlvbiBpc1Rvb0dyYXkoaHNsOiBjb2xvcnMuSFNMKTogYm9vbGVhbiB7XG5cdGlmICghY29tbW9uVXRpbHMudmFsaWRhdGVDb2xvclZhbHVlcyhoc2wpKSB7XG5cdFx0Y29uc29sZS5lcnJvcihgSW52YWxpZCBIU0wgdmFsdWUgJHtKU09OLnN0cmluZ2lmeShoc2wpfWApO1xuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0cmV0dXJuIGNvcmUuY2xvbmUoaHNsKS52YWx1ZS5zYXR1cmF0aW9uIDwgY29uZmlnLmdyYXlUaHJlc2hvbGQ7XG59XG5cbmV4cG9ydCBjb25zdCBsaW1pdHM6IGZuT2JqZWN0cy5MaW1pdHMgPSB7XG5cdGlzQ29sb3JJbkJvdW5kcyxcblx0aXNUb29CcmlnaHQsXG5cdGlzVG9vRGFyayxcblx0aXNUb29HcmF5XG59O1xuIl19","import { config } from '../config/constants.js';\nimport { defaults } from '../config/defaults.js';\nimport { notification } from './notification.js';\nimport { convert } from '../palette-gen/conversion-index.js';\nimport { colorUtils } from '../utils/color-utils.js';\nimport { commonUtils } from '../utils/common-utils.js';\nimport { core } from '../utils/core-utils.js';\nfunction adjustSL(color) {\n    try {\n        if (!commonUtils.validateColorValues(color)) {\n            console.error('Invalid color valus for adjustment.');\n            notification.showToast('Invalid color values');\n            return color;\n        }\n        const adjustedSaturation = Math.min(Math.max(color.value.saturation + config.adjustSLAmount, 0), 100);\n        const adjustedLightness = Math.min(100);\n        return {\n            value: {\n                hue: color.value.hue,\n                saturation: adjustedSaturation,\n                lightness: adjustedLightness,\n                alpha: color.value.alpha\n            },\n            format: 'hsl'\n        };\n    }\n    catch (error) {\n        console.error(`Error adjusting saturation and lightness: ${error}`);\n        return color;\n    }\n}\nfunction getWeightedRandomInterval() {\n    try {\n        const weights = config.weights;\n        const probabilities = config.probabilities;\n        const cumulativeProbabilities = probabilities.reduce((acc, prob, i) => {\n            acc[i] = (acc[i - 1] || 0) + prob;\n            return acc;\n        }, []);\n        const random = Math.random();\n        for (let i = 0; i < cumulativeProbabilities.length; i++) {\n            if (random < cumulativeProbabilities[i]) {\n                return weights[i];\n            }\n        }\n        return weights[weights.length - 1];\n    }\n    catch (error) {\n        console.error(`Error generating weighted random interval: ${error}`);\n        return 50;\n    }\n}\nfunction hexToHSLWrapper(input) {\n    try {\n        const clonedInput = core.clone(input);\n        const hex = typeof clonedInput === 'string'\n            ? {\n                value: {\n                    hex: clonedInput,\n                    alpha: clonedInput.slice(-2),\n                    numericAlpha: colorUtils.hexAlphaToNumericAlpha(clonedInput.slice(-2))\n                },\n                format: 'hex'\n            }\n            : {\n                ...clonedInput,\n                value: {\n                    ...clonedInput.value,\n                    numericAlpha: colorUtils.hexAlphaToNumericAlpha(clonedInput.value.alpha)\n                }\n            };\n        return convert.hexToHSL(hex);\n    }\n    catch (error) {\n        console.error(`Error converting hex to HSL: ${error}`);\n        return defaults.hsl;\n    }\n}\nexport const paletteHelpers = {\n    adjustSL,\n    getWeightedRandomInterval,\n    hexToHSLWrapper\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFsZXR0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9oZWxwZXJzL3BhbGV0dGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUc5QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzFELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRTNDLFNBQVMsUUFBUSxDQUFDLEtBQWlCO0lBQ2xDLElBQUksQ0FBQztRQUNKLElBQUksQ0FBQyxXQUFXLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztZQUM3QyxPQUFPLENBQUMsS0FBSyxDQUFDLHFDQUFxQyxDQUFDLENBQUM7WUFFckQsWUFBWSxDQUFDLFNBQVMsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1lBRS9DLE9BQU8sS0FBSyxDQUFDO1FBQ2QsQ0FBQztRQUVELE1BQU0sa0JBQWtCLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FDbEMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQyxFQUMzRCxHQUFHLENBQ0gsQ0FBQztRQUNGLE1BQU0saUJBQWlCLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUV4QyxPQUFPO1lBQ04sS0FBSyxFQUFFO2dCQUNOLEdBQUcsRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLEdB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QUNmLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25maWcgfSBmcm9tICcuLi9jb25maWcvY29uc3RhbnRzJztcbmltcG9ydCB7IGRlZmF1bHRzIH0gZnJvbSAnLi4vY29uZmlnL2RlZmF1bHRzJztcbmltcG9ydCAqIGFzIGZuT2JqZWN0cyBmcm9tICcuLi9pbmRleC9mbi1vYmplY3RzJztcbmltcG9ydCAqIGFzIGNvbG9ycyBmcm9tICcuLi9pbmRleC9jb2xvcnMnO1xuaW1wb3J0IHsgbm90aWZpY2F0aW9uIH0gZnJvbSAnLi9ub3RpZmljYXRpb24nO1xuaW1wb3J0IHsgY29udmVydCB9IGZyb20gJy4uL3BhbGV0dGUtZ2VuL2NvbnZlcnNpb24taW5kZXgnO1xuaW1wb3J0IHsgY29sb3JVdGlscyB9IGZyb20gJy4uL3V0aWxzL2NvbG9yLXV0aWxzJztcbmltcG9ydCB7IGNvbW1vblV0aWxzIH0gZnJvbSAnLi4vdXRpbHMvY29tbW9uLXV0aWxzJztcbmltcG9ydCB7IGNvcmUgfSBmcm9tICcuLi91dGlscy9jb3JlLXV0aWxzJztcblxuZnVuY3Rpb24gYWRqdXN0U0woY29sb3I6IGNvbG9ycy5IU0wpOiBjb2xvcnMuSFNMIHtcblx0dHJ5IHtcblx0XHRpZiAoIWNvbW1vblV0aWxzLnZhbGlkYXRlQ29sb3JWYWx1ZXMoY29sb3IpKSB7XG5cdFx0XHRjb25zb2xlLmVycm9yKCdJbnZhbGlkIGNvbG9yIHZhbHVzIGZvciBhZGp1c3RtZW50LicpO1xuXG5cdFx0XHRub3RpZmljYXRpb24uc2hvd1RvYXN0KCdJbnZhbGlkIGNvbG9yIHZhbHVlcycpO1xuXG5cdFx0XHRyZXR1cm4gY29sb3I7XG5cdFx0fVxuXG5cdFx0Y29uc3QgYWRqdXN0ZWRTYXR1cmF0aW9uID0gTWF0aC5taW4oXG5cdFx0XHRNYXRoLm1heChjb2xvci52YWx1ZS5zYXR1cmF0aW9uICsgY29uZmlnLmFkanVzdFNMQW1vdW50LCAwKSxcblx0XHRcdDEwMFxuXHRcdCk7XG5cdFx0Y29uc3QgYWRqdXN0ZWRMaWdodG5lc3MgPSBNYXRoLm1pbigxMDApO1xuXG5cdFx0cmV0dXJuIHtcblx0XHRcdHZhbHVlOiB7XG5cdFx0XHRcdGh1ZTogY29sb3IudmFsdWUuaHVlLFxuXHRcdFx0XHRzYXR1cmF0aW9uOiBhZGp1c3RlZFNhdHVyYXRpb24sXG5cdFx0XHRcdGxpZ2h0bmVzczogYWRqdXN0ZWRMaWdodG5lc3MsXG5cdFx0XHRcdGFscGhhOiBjb2xvci52YWx1ZS5hbHBoYVxuXHRcdFx0fSxcblx0XHRcdGZvcm1hdDogJ2hzbCdcblx0XHR9O1xuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGNvbnNvbGUuZXJyb3IoYEVycm9yIGFkanVzdGluZyBzYXR1cmF0aW9uIGFuZCBsaWdodG5lc3M6ICR7ZXJyb3J9YCk7XG5cblx0XHRyZXR1cm4gY29sb3I7XG5cdH1cbn1cblxuZnVuY3Rpb24gZ2V0V2VpZ2h0ZWRSYW5kb21JbnRlcnZhbCgpOiBudW1iZXIge1xuXHR0cnkge1xuXHRcdGNvbnN0IHdlaWdodHM6IG51bWJlcltdID0gY29uZmlnLndlaWdodHM7XG5cdFx0Y29uc3QgcHJvYmFiaWxpdGllczogbnVtYmVyW10gPSBjb25maWcucHJvYmFiaWxpdGllcztcblx0XHRjb25zdCBjdW11bGF0aXZlUHJvYmFiaWxpdGllczogbnVtYmVyW10gPSBwcm9iYWJpbGl0aWVzLnJlZHVjZShcblx0XHRcdChhY2M6IG51bWJlcltdLCBwcm9iOiBudW1iZXIsIGk6IG51bWJlcikgPT4ge1xuXHRcdFx0XHRhY2NbaV0gPSAoYWNjW2kgLSAxXSB8fCAwKSArIHByb2I7XG5cdFx0XHRcdHJldHVybiBhY2M7XG5cdFx0XHR9LFxuXHRcdFx0W11cblx0XHQpO1xuXHRcdGNvbnN0IHJhbmRvbSA9IE1hdGgucmFuZG9tKCk7XG5cblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IGN1bXVsYXRpdmVQcm9iYWJpbGl0aWVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRpZiAocmFuZG9tIDwgY3VtdWxhdGl2ZVByb2JhYmlsaXRpZXNbaV0pIHtcblx0XHRcdFx0cmV0dXJuIHdlaWdodHNbaV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHdlaWdodHNbd2VpZ2h0cy5sZW5ndGggLSAxXTtcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLmVycm9yKGBFcnJvciBnZW5lcmF0aW5nIHdlaWdodGVkIHJhbmRvbSBpbnRlcnZhbDogJHtlcnJvcn1gKTtcblxuXHRcdHJldHVybiA1MDtcblx0fVxufVxuXG5mdW5jdGlvbiBoZXhUb0hTTFdyYXBwZXIoaW5wdXQ6IHN0cmluZyB8IGNvbG9ycy5IZXgpOiBjb2xvcnMuSFNMIHtcblx0dHJ5IHtcblx0XHRjb25zdCBjbG9uZWRJbnB1dCA9IGNvcmUuY2xvbmUoaW5wdXQpO1xuXHRcdGNvbnN0IGhleDogY29sb3JzLkhleCA9XG5cdFx0XHR0eXBlb2YgY2xvbmVkSW5wdXQgPT09ICdzdHJpbmcnXG5cdFx0XHRcdD8ge1xuXHRcdFx0XHRcdFx0dmFsdWU6IHtcblx0XHRcdFx0XHRcdFx0aGV4OiBjbG9uZWRJbnB1dCxcblx0XHRcdFx0XHRcdFx0YWxwaGE6IGNsb25lZElucHV0LnNsaWNlKC0yKSxcblx0XHRcdFx0XHRcdFx0bnVtZXJpY0FscGhhOiBjb2xvclV0aWxzLmhleEFscGhhVG9OdW1lcmljQWxwaGEoXG5cdFx0XHRcdFx0XHRcdFx0Y2xvbmVkSW5wdXQuc2xpY2UoLTIpXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRmb3JtYXQ6ICdoZXgnXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHQ6IHtcblx0XHRcdFx0XHRcdC4uLmNsb25lZElucHV0LFxuXHRcdFx0XHRcdFx0dmFsdWU6IHtcblx0XHRcdFx0XHRcdFx0Li4uY2xvbmVkSW5wdXQudmFsdWUsXG5cdFx0XHRcdFx0XHRcdG51bWVyaWNBbHBoYTogY29sb3JVdGlscy5oZXhBbHBoYVRvTnVtZXJpY0FscGhhKFxuXHRcdFx0XHRcdFx0XHRcdGNsb25lZElucHV0LnZhbHVlLmFscGhhXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9O1xuXG5cdFx0cmV0dXJuIGNvbnZlcnQuaGV4VG9IU0woaGV4KTtcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLmVycm9yKGBFcnJvciBjb252ZXJ0aW5nIGhleCB0byBIU0w6ICR7ZXJyb3J9YCk7XG5cblx0XHRyZXR1cm4gZGVmYXVsdHMuaHNsO1xuXHR9XG59XG5cbmV4cG9ydCBjb25zdCBwYWxldHRlSGVscGVyczogZm5PYmplY3RzLlBhbGV0dGVIZWxwZXJzID0ge1xuXHRhZGp1c3RTTCxcblx0Z2V0V2VpZ2h0ZWRSYW5kb21JbnRlcnZhbCxcblx0aGV4VG9IU0xXcmFwcGVyXG59O1xuIl19","import { paletteHelpers } from '../helpers/palette.js';\nimport { commonUtils } from '../utils/common-utils.js';\nimport { genAllColorValues } from '../utils/conversion-utils.js';\nimport { core } from '../utils/core-utils.js';\nfunction analogous(color, numBoxes) {\n    try {\n        if (!commonUtils.validateColorValues(color)) {\n            console.error(`Invalid color value ${JSON.stringify(color)}`);\n            return [];\n        }\n        const clonedColor = core.clone(color);\n        const analogousHues = [];\n        const baseHue = clonedColor.value.hue;\n        const maxTotalDistance = 60;\n        const minTotalDistance = Math.max(20, 10 + (numBoxes - 2) * 12);\n        const totalIncrement = Math.floor(Math.random() * (maxTotalDistance - minTotalDistance + 1)) + minTotalDistance;\n        const increment = Math.floor(totalIncrement / (numBoxes - 1));\n        for (let i = 1; i < numBoxes; i++) {\n            analogousHues.push((baseHue + increment * i) % 360);\n        }\n        return analogousHues;\n    }\n    catch (error) {\n        console.error(`Error generating analogous hues: ${error}`);\n        return [];\n    }\n}\nfunction diadic(baseHue) {\n    try {\n        const clonedBaseHue = core.clone(baseHue);\n        const diadicHues = [];\n        const randomDistance = paletteHelpers.getWeightedRandomInterval();\n        const hue1 = clonedBaseHue;\n        const hue2 = (hue1 + randomDistance) % 360;\n        diadicHues.push(hue1, hue2);\n        return diadicHues;\n    }\n    catch (error) {\n        console.error(`Error generating diadic hues: ${error}`);\n        return [];\n    }\n}\nfunction hexadic(color) {\n    try {\n        const clonedColor = core.clone(color);\n        if (!commonUtils.validateColorValues(clonedColor)) {\n            console.error(`Invalid color value ${JSON.stringify(clonedColor)}`);\n            return [];\n        }\n        const clonedBaseHSL = genAllColorValues(clonedColor).hsl;\n        if (!clonedBaseHSL) {\n            throw new Error('Unable to generate hexadic hues - missing HSL values');\n        }\n        const hexadicHues = [];\n        const baseHue = clonedBaseHSL.value.hue;\n        const hue1 = baseHue;\n        const hue2 = (hue1 + 180) % 360;\n        const randomDistance = Math.floor(Math.random() * 61 + 30);\n        const hue3 = (hue1 + randomDistance) % 360;\n        const hue4 = (hue3 + 180) % 360;\n        const hue5 = (hue1 + 360 - randomDistance) % 360;\n        const hue6 = (hue5 + 180) % 360;\n        hexadicHues.push(hue1, hue2, hue3, hue4, hue5, hue6);\n        return hexadicHues;\n    }\n    catch (error) {\n        console.error(`Error generating hexadic hues: ${error}`);\n        return [];\n    }\n}\nfunction splitComplementary(baseHue) {\n    try {\n        const clonedBaseHue = core.clone(baseHue);\n        const modifier = Math.floor(Math.random() * 11) + 20;\n        return [\n            (clonedBaseHue + 180 + modifier) % 360,\n            (clonedBaseHue + 180 - modifier + 360) % 360\n        ];\n    }\n    catch (error) {\n        console.error(`Error generating split complementary hues: ${error}`);\n        return [];\n    }\n}\nfunction tetradic(baseHue) {\n    try {\n        const clonedBaseHue = core.clone(baseHue);\n        const randomOffset = Math.floor(Math.random() * 46) + 20;\n        const distance = 90 + (Math.random() < 0.5 ? -randomOffset : randomOffset);\n        return [\n            clonedBaseHue,\n            (clonedBaseHue + 180) % 360,\n            (clonedBaseHue + distance) % 360,\n            (clonedBaseHue + distance + 180) % 360\n        ];\n    }\n    catch (error) {\n        console.error(`Error generating tetradic hues: ${error}`);\n        return [];\n    }\n}\nfunction triadic(baseHue) {\n    try {\n        const clonedBaseHue = core.clone(baseHue);\n        return [120, 240].map(increment => (clonedBaseHue + increment) % 360);\n    }\n    catch (error) {\n        console.error(`Error generating triadic hues: ${error}`);\n        return [];\n    }\n}\nexport const genHues = {\n    analogous,\n    diadic,\n    hexadic,\n    splitComplementary,\n    tetradic,\n    triadic\n};\n//# sourceMappingURL=data:application/json;base64,","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","import { colorUtils } from './color-utils.js';\nimport { commonUtils } from './common-utils.js';\nimport { core } from './core-utils.js';\nimport { notification } from '../helpers/notification.js';\nfunction createPaletteObject(type, items, baseColor, numBoxes, paletteID, enableAlpha, limitBright, limitDark, limitGray) {\n    return {\n        id: `${type}_${paletteID}`,\n        items,\n        flags: {\n            enableAlpha: enableAlpha,\n            limitDark: limitDark,\n            limitGray: limitGray,\n            limitLight: limitBright\n        },\n        metadata: {\n            numBoxes,\n            paletteType: type,\n            customColor: {\n                hslColor: baseColor,\n                convertedColors: items[0]?.colors || {}\n            }\n        }\n    };\n}\nfunction populateColorTextOutputBox(color, boxNumber) {\n    try {\n        const clonedColor = colorUtils.isColor(color)\n            ? core.clone(color)\n            : colorUtils.colorStringToColor(color);\n        if (!commonUtils.validateColorValues(clonedColor)) {\n            console.error('Invalid color values.');\n            notification.showToast('Invalid color values.');\n            return;\n        }\n        const colorTextOutputBox = document.getElementById(`color-text-output-box-${boxNumber}`);\n        if (!colorTextOutputBox)\n            return;\n        const stringifiedColor = colorUtils.getCSSColorString(clonedColor);\n        console.log(`Adding CSS-formatted color to DOM ${stringifiedColor}`);\n        colorTextOutputBox.value = stringifiedColor;\n        colorTextOutputBox.setAttribute('data-format', color.format);\n    }\n    catch (error) {\n        console.error('Failed to populate color text output box:', error);\n        return;\n    }\n}\nexport const paletteUtils = {\n    createPaletteObject,\n    populateColorTextOutputBox\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFsZXR0ZS11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9wYWxldHRlLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFJcEMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRXZELFNBQVMsbUJBQW1CLENBQzNCLElBQVksRUFDWixLQUE0QixFQUM1QixTQUFxQixFQUNyQixRQUFnQixFQUNoQixTQUFpQixFQUNqQixXQUFvQixFQUNwQixXQUFvQixFQUNwQixTQUFrQixFQUNsQixTQUFrQjtJQUVsQixPQUFPO1FBQ04sRUFBRSxFQUFFLEdBQUcsSUFBSSxJQUFJLFNBQVMsRUFBRTtRQUMxQixLQUFLO1FBQ0wsS0FBSyxFQUFFO1lBQ04sV0FBVyxFQUFFLFdBQVc7WUFDeEIsU0FBUyxFQUFFLFNBQVM7WUFDcEIsU0FBUyxFQUFFLFNBQVM7WUFDcEIsVUFBVSxFQUFFLFdBQVc7U0FDdkI7UUFDRCxRQUFRLEVBQUU7WUFDVCxRQUFRO1lBQ1IsV0FBVyxFQUFFLElBQUk7WUFDakIsV0FBVyxFQUFFO2dCQUNaLFFBQVEsRUFBRSxTQUFTO2dCQUNuQixlQUFlLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sSUFBSSxFQUFFO2FBQ3ZDO1NBQ0Q7S0FDRCxDQUFDO0FBQ0gsQ0FBQztBQUVELFNBQVMsMEJBQTBCLENBQ2xDLEtBQXdDLEVBQ3hDLFNBQWlCO0lBRWpCLElBQUksQ0FBQztRQUNKLE1BQU0sV0FBVyxHQUFpQixVQUFVLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztZQUMxRCxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7WUFDbkIsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUV4QyxJQUFJLENBQUMsV0FBVyxDQUFDLG1CQUFtQixDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUM7WUFDbkQsT0FBTyxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1lBRXZDLFlBQVksQ0FBQyxTQUFTLENBQUMsdUJBQXVCLENBQUMsQ0FBQztZQUVoRCxPQUFPO1FBQ1IsQ0FBQztRQUVELE1BQU0sa0JBQWtCLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FDakQseUJBQXlCLFNBQVMsRUFBRSxDQUNULENBQUM7UUFFN0IsSUFBSSxDQUFDLGtCQUFrQjtZQUFFLE9BQU87UUFFaEMsTUFBTSxnQkFBZ0IsR0FBRyxVQUFVLENBQUMsaUJBQWlCLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFbkUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQ0FBcUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO1FBRXJFLGtCQUFrQixDQUFDLEtBQUssR0FBRyxnQkFBZ0IsQ0FBQztRQUM1QyxrQkFBa0IsQ0FBQyxZQUFZLENBQUMsYUFBYSxFQUFFLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztRQUNoQixPQUFPLENBQUMsS0FBSyxDQUFDLDJDQUEyQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBRWxFLE9BQU87SUFDUixDQUFDO0FBQ0YsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBMkI7SUFDbkQsbUJBQW1CO0lBQ25CLDBCQUEwQjtDQUMxQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29sb3JVdGlscyB9IGZyb20gJy4vY29sb3ItdXRpbHMnO1xuaW1wb3J0IHsgY29tbW9uVXRpbHMgfSBmcm9tICcuL2NvbW1vbi11dGlscyc7XG5pbXBvcnQgeyBjb3JlIH0gZnJvbSAnLi9jb3JlLXV0aWxzJztcbmltcG9ydCAqIGFzIGNvbG9ycyBmcm9tICcuLi9pbmRleC9jb2xvcnMnO1xuaW1wb3J0ICogYXMgZm5PYmplY3RzIGZyb20gJy4uL2luZGV4L2ZuLW9iamVjdHMnO1xuaW1wb3J0ICogYXMgcGFsZXR0ZSBmcm9tICcuLi9pbmRleC9wYWxldHRlJztcbmltcG9ydCB7IG5vdGlmaWNhdGlvbiB9IGZyb20gJy4uL2hlbHBlcnMvbm90aWZpY2F0aW9uJztcblxuZnVuY3Rpb24gY3JlYXRlUGFsZXR0ZU9iamVjdChcblx0dHlwZTogc3RyaW5nLFxuXHRpdGVtczogcGFsZXR0ZS5QYWxldHRlSXRlbVtdLFxuXHRiYXNlQ29sb3I6IGNvbG9ycy5IU0wsXG5cdG51bUJveGVzOiBudW1iZXIsXG5cdHBhbGV0dGVJRDogbnVtYmVyLFxuXHRlbmFibGVBbHBoYTogYm9vbGVhbixcblx0bGltaXRCcmlnaHQ6IGJvb2xlYW4sXG5cdGxpbWl0RGFyazogYm9vbGVhbixcblx0bGltaXRHcmF5OiBib29sZWFuXG4pOiBwYWxldHRlLlBhbGV0dGUge1xuXHRyZXR1cm4ge1xuXHRcdGlkOiBgJHt0eXBlfV8ke3BhbGV0dGVJRH1gLFxuXHRcdGl0ZW1zLFxuXHRcdGZsYWdzOiB7XG5cdFx0XHRlbmFibGVBbHBoYTogZW5hYmxlQWxwaGEsXG5cdFx0XHRsaW1pdERhcms6IGxpbWl0RGFyayxcblx0XHRcdGxpbWl0R3JheTogbGltaXRHcmF5LFxuXHRcdFx0bGltaXRMaWdodDogbGltaXRCcmlnaHRcblx0XHR9LFxuXHRcdG1ldGFkYXRhOiB7XG5cdFx0XHRudW1Cb3hlcyxcblx0XHRcdHBhbGV0dGVUeXBlOiB0eXBlLFxuXHRcdFx0Y3VzdG9tQ29sb3I6IHtcblx0XHRcdFx0aHNsQ29sb3I6IGJhc2VDb2xvcixcblx0XHRcdFx0Y29udmVydGVkQ29sb3JzOiBpdGVtc1swXT8uY29sb3JzIHx8IHt9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG5mdW5jdGlvbiBwb3B1bGF0ZUNvbG9yVGV4dE91dHB1dEJveChcblx0Y29sb3I6IGNvbG9ycy5Db2xvciB8IGNvbG9ycy5Db2xvclN0cmluZyxcblx0Ym94TnVtYmVyOiBudW1iZXJcbik6IHZvaWQge1xuXHR0cnkge1xuXHRcdGNvbnN0IGNsb25lZENvbG9yOiBjb2xvcnMuQ29sb3IgPSBjb2xvclV0aWxzLmlzQ29sb3IoY29sb3IpXG5cdFx0XHQ/IGNvcmUuY2xvbmUoY29sb3IpXG5cdFx0XHQ6IGNvbG9yVXRpbHMuY29sb3JTdHJpbmdUb0NvbG9yKGNvbG9yKTtcblxuXHRcdGlmICghY29tbW9uVXRpbHMudmFsaWRhdGVDb2xvclZhbHVlcyhjbG9uZWRDb2xvcikpIHtcblx0XHRcdGNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgY29sb3IgdmFsdWVzLicpO1xuXG5cdFx0XHRub3RpZmljYXRpb24uc2hvd1RvYXN0KCdJbnZhbGlkIGNvbG9yIHZhbHVlcy4nKTtcblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnN0IGNvbG9yVGV4dE91dHB1dEJveCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxuXHRcdFx0YGNvbG9yLXRleHQtb3V0cHV0LWJveC0ke2JveE51bWJlcn1gXG5cdFx0KSBhcyBIVE1MSW5wdXRFbGVtZW50IHwgbnVsbDtcblxuXHRcdGlmICghY29sb3JUZXh0T3V0cHV0Qm94KSByZXR1cm47XG5cblx0XHRjb25zdCBzdHJpbmdpZmllZENvbG9yID0gY29sb3JVdGlscy5nZXRDU1NDb2xvclN0cmluZyhjbG9uZWRDb2xvcik7XG5cblx0XHRjb25zb2xlLmxvZyhgQWRkaW5nIENTUy1mb3JtYXR0ZWQgY29sb3IgdG8gRE9NICR7c3RyaW5naWZpZWRDb2xvcn1gKTtcblxuXHRcdGNvbG9yVGV4dE91dHB1dEJveC52YWx1ZSA9IHN0cmluZ2lmaWVkQ29sb3I7XG5cdFx0Y29sb3JUZXh0T3V0cHV0Qm94LnNldEF0dHJpYnV0ZSgnZGF0YS1mb3JtYXQnLCBjb2xvci5mb3JtYXQpO1xuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBwb3B1bGF0ZSBjb2xvciB0ZXh0IG91dHB1dCBib3g6JywgZXJyb3IpO1xuXG5cdFx0cmV0dXJuO1xuXHR9XG59XG5cbmV4cG9ydCBjb25zdCBwYWxldHRlVXRpbHM6IGZuT2JqZWN0cy5QYWxldHRlVXRpbHMgPSB7XG5cdGNyZWF0ZVBhbGV0dGVPYmplY3QsXG5cdHBvcHVsYXRlQ29sb3JUZXh0T3V0cHV0Qm94XG59O1xuIl19","import { openDB } from 'idb';\nimport { defaults } from '../config/defaults.js';\nimport { paletteUtils } from '../utils/palette-utils.js';\nfunction createMutationLogger(obj, key) {\n    return new Proxy(obj, {\n        set(target, property, value) {\n            const oldValue = target[property];\n            const success = Reflect.set(target, property, value);\n            if (success) {\n                logMutation({\n                    timestamp: new Date().toISOString(),\n                    key,\n                    action: 'update',\n                    newValue: { [property]: value },\n                    oldValue: { [property]: oldValue },\n                    origin: 'Proxy'\n                });\n            }\n            return success;\n        }\n    });\n}\nconst dbPromise = openDB('paletteDatabase', 1, {\n    upgrade(db) {\n        try {\n            const stores = [\n                'customColor',\n                'mutations',\n                'settings',\n                'tables'\n            ];\n            stores.forEach(store => {\n                if (!db.objectStoreNames.contains(store)) {\n                    db.createObjectStore(store, {\n                        keyPath: store === 'mutations' ? 'timestamp' : 'key'\n                    });\n                }\n            });\n        }\n        catch (error) {\n            console.error('Error during IndexedDB upgrade:', error);\n            throw error;\n        }\n    }\n});\nasync function getDB() {\n    return dbPromise;\n}\nasync function getCurrentPaletteID() {\n    const db = await getDB();\n    const settings = await db.get('settings', 'appSettings');\n    return settings?.lastPaletteID ?? 0;\n}\nasync function getCustomColor() {\n    const db = await getDB();\n    const entry = await db.get('customColor', 'customColor');\n    return entry?.color\n        ? createMutationLogger(entry.color, 'customColor')\n        : null;\n}\nfunction getLoggedObject(obj, key) {\n    if (obj) {\n        return createMutationLogger(obj, key);\n    }\n    return null;\n}\nasync function getNextPaletteID() {\n    const currentID = await getCurrentPaletteID();\n    const newID = currentID + 1;\n    await updateCurrentPaletteID(newID);\n    return newID;\n}\nasync function getNextTableID() {\n    const settings = await getSettings();\n    const nextID = settings.lastTableID + 1;\n    await saveData('settings', 'appSettings', {\n        ...settings,\n        lastTableID: nextID\n    });\n    return `palette_${nextID}`;\n}\nasync function getSettings() {\n    try {\n        const db = await getDB();\n        const settings = await db.get('settings', 'appSettings');\n        return settings ?? defaults.settings;\n    }\n    catch (error) {\n        console.error('Error fetching settings:', error);\n        return { colorSpace: 'hex', lastTableID: 0 };\n    }\n}\nasync function getTable(id) {\n    const db = await getDB();\n    const result = await db.get('tables', id);\n    if (!result)\n        console.warn(`Table with ID ${id} not found.`);\n    return result;\n}\nasync function getStore(storeName, mode) {\n    const db = await getDB();\n    return db.transaction(storeName, mode).objectStore(storeName);\n}\nasync function logMutation(log) {\n    const db = await getDB();\n    await db.put('mutations', log);\n    console.log(`Logged mutation: ${JSON.stringify(log)}`);\n}\nasync function renderPalette(tableId) {\n    try {\n        const storedPalette = await getTable(tableId);\n        const paletteRow = document.getElementById('palette-row');\n        if (!storedPalette)\n            throw new Error(`Palette ${tableId} not found.`);\n        if (!paletteRow)\n            throw new Error('Palette row element not found.');\n        paletteRow.innerHTML = '';\n        const fragment = document.createDocumentFragment();\n        const table = document.createElement('table');\n        table.classList.add('palette-table');\n        storedPalette.palette.items.forEach((item, index) => {\n            const row = document.createElement('tr');\n            const cell = document.createElement('td');\n            const colorBox = document.createElement('div');\n            cell.textContent = `Color ${index + 1}`;\n            colorBox.classList.add('color-box');\n            colorBox.style.backgroundColor = item.cssStrings.hexCSSString;\n            row.appendChild(colorBox);\n            row.appendChild(cell);\n            table.appendChild(row);\n        });\n        fragment.appendChild(table);\n        paletteRow.appendChild(fragment);\n        console.log(`Rendered palette ${tableId}.`);\n    }\n    catch (error) {\n        console.error(`Failed to render palette: ${error}`);\n    }\n}\nasync function saveData(storeName, key, data, oldValue) {\n    try {\n        const db = await getDB();\n        const tx = db.transaction(storeName, 'readwrite');\n        const store = tx.objectStore(storeName);\n        await store.put({ key, ...data });\n        await tx.done;\n        console.log(`${key} saved to ${storeName}.`);\n        await logMutation({\n            timestamp: new Date().toISOString(),\n            key,\n            action: 'update',\n            newValue: data,\n            oldValue: oldValue ? oldValue : null,\n            origin: 'saveData'\n        });\n    }\n    catch (error) {\n        console.error(`Failed to save data to ${storeName}:`, error);\n        throw error;\n    }\n}\nasync function savePalette(id, newPalette) {\n    try {\n        const store = await getStore('tables', 'readwrite');\n        const paletteToSave = {\n            tableID: newPalette.tableID,\n            palette: newPalette.palette\n        };\n        await store.put({ key: id, ...paletteToSave });\n        console.log(`Palette ${id} saved successfully.`);\n    }\n    catch (error) {\n        console.error(`Failed to save palette ${id}: ${error}`);\n        throw error;\n    }\n}\nasync function savePaletteToDB(type, items, baseColor, numBoxes, enableAlpha, limitBright, limitDark, limitGray) {\n    const paletteID = await getNextPaletteID();\n    const newPalette = paletteUtils.createPaletteObject(type, items, baseColor, paletteID, numBoxes, enableAlpha, limitBright, limitDark, limitGray);\n    await savePalette(newPalette.id, {\n        tableID: parseInt(newPalette.id.split('_')[1]),\n        palette: newPalette\n    });\n    console.log(`Saved ${type} palette: ${JSON.stringify(newPalette)}`);\n    return newPalette;\n}\nasync function saveSettings(newSettings) {\n    try {\n        await saveData('settings', 'appSettings', newSettings);\n        console.log('Settings updated');\n    }\n    catch (error) {\n        console.error(`Failed to save settings: ${error}`);\n        throw error;\n    }\n}\nasync function trackedTransaction(storeName, mode, callback) {\n    const db = await getDB();\n    const tx = db.transaction(storeName, mode);\n    const store = tx.objectStore(storeName);\n    try {\n        await callback(store);\n        await tx.done;\n        console.log(`Transaction on ${storeName} completed.`);\n    }\n    catch (error) {\n        console.error(`Transaction on ${storeName} failed: ${error}`);\n        throw error;\n    }\n}\nasync function updateCurrentPaletteID(newID) {\n    const db = await getDB();\n    const tx = db.transaction('settings', 'readwrite');\n    const store = tx.objectStore('settings');\n    await store.put({ key: 'appSettings', lastPaletteID: newID });\n    await tx.done;\n    console.log(`Current palette ID updated to ${newID}`);\n}\nasync function updateEntryInPalette(tableID, entryIndex, newEntry) {\n    try {\n        const storedPalette = await getTable(tableID);\n        if (!storedPalette)\n            throw new Error(`Palette ${tableID} not found.`);\n        const { items } = storedPalette.palette;\n        if (entryIndex >= items.length)\n            throw new Error(`Entry ${entryIndex} not found in palette ${tableID}.`);\n        const oldEntry = items[entryIndex];\n        items[entryIndex] = newEntry;\n        await saveData('tables', tableID, storedPalette);\n        await logMutation({\n            timestamp: new Date().toISOString(),\n            key: `${tableID}-${entryIndex}]`,\n            action: 'update',\n            newValue: newEntry,\n            oldValue: oldEntry,\n            origin: 'updateEntryInPalette'\n        });\n        console.log(`Entry ${entryIndex} in palette ${tableID} updated.`);\n    }\n    catch (error) {\n        console.error(`Failed to update entry in palette: ${error}`);\n        throw error;\n    }\n}\nexport const database = {\n    createMutationLogger,\n    deleteTable: async (id) => {\n        const db = await getDB();\n        await db.delete('tables', id);\n        console.log(`Table ${id} deleted.`);\n    },\n    getCurrentPaletteID,\n    getCustomColor,\n    getDB,\n    getLoggedObject,\n    getNextPaletteID,\n    getNextTableID,\n    getSettings,\n    getStore,\n    getTable,\n    listTables: async () => {\n        const db = await getDB();\n        const keys = await db.getAllKeys('tables');\n        return keys.map(String);\n    },\n    logMutation,\n    renderPalette,\n    saveData,\n    savePalette,\n    savePaletteToDB,\n    saveSettings,\n    trackedTransaction,\n    updateCurrentPaletteID,\n    updateEntryInPalette\n};\n//# sourceMappingURL=data:application/json;base64,","import { defaults } from '../config/defaults.js';\nimport { commonUtils } from './common-utils.js';\nimport { core } from './core-utils.js';\nexport function randomHSL(enableAlpha) {\n    try {\n        const alpha = enableAlpha ? Math.random() : 1;\n        const hsl = {\n            value: {\n                hue: commonUtils.sanitizeRadial(Math.floor(Math.random() * 360)),\n                saturation: commonUtils.sanitizePercentage(Math.floor(Math.random() * 101)),\n                lightness: commonUtils.sanitizePercentage(Math.floor(Math.random() * 101)),\n                alpha\n            },\n            format: 'hsl'\n        };\n        if (!commonUtils.validateColorValues(hsl)) {\n            console.error(`Invalid random HSL color value ${JSON.stringify(hsl)}`);\n            return core.clone(defaults.hsl);\n        }\n        console.log(`Generated randomHSL: ${JSON.stringify(hsl)}`);\n        return hsl;\n    }\n    catch (error) {\n        console.error(`Error generating random HSL color: ${error}`);\n        return core.clone(defaults.hsl);\n    }\n}\nexport function randomSL(enableAlpha) {\n    try {\n        const alpha = enableAlpha ? Math.random() : 1;\n        const sl = {\n            value: {\n                saturation: commonUtils.sanitizePercentage(Math.max(0, Math.min(100, Math.random() * 100))),\n                lightness: commonUtils.sanitizePercentage(Math.max(0, Math.min(100, Math.random() * 100))),\n                alpha\n            },\n            format: 'sl'\n        };\n        if (!commonUtils.validateColorValues(sl)) {\n            console.error(`Invalid random SV color value ${JSON.stringify(sl)}`);\n            return core.clone(defaults.sl);\n        }\n        console.log(`Generated randomSL: ${JSON.stringify(sl)}`);\n        return sl;\n    }\n    catch (error) {\n        console.error(`Error generating random SL color: ${error}`);\n        return core.clone(defaults.sl);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZG9tLWNvbG9yLXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL3JhbmRvbS1jb2xvci11dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFOUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFcEMsTUFBTSxVQUFVLFNBQVMsQ0FBQyxXQUFvQjtJQUM3QyxJQUFJLENBQUM7UUFDSixNQUFNLEtBQUssR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlDLE1BQU0sR0FBRyxHQUFlO1lBQ3ZCLEtBQUssRUFBRTtnQkFDTixHQUFHLEVBQUUsV0FBVyxDQUFDLGNBQWMsQ0FDOUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQy9CO2dCQUNELFVBQVUsRUFBRSxXQUFXLENBQUMsa0JBQWtCLENBQ3pDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUMvQjtnQkFDRCxTQUFTLEVBQUUsV0FBVyxDQUFDLGtCQUFrQixDQUN4QyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUMsQ0FDL0I7Z0JBQ0QsS0FBSzthQUNMO1lBQ0QsTUFBTSxFQUFFLEtBQUs7U0FDYixDQUFDO1FBRUYsSUFBSSxDQUFDLFdBQVcsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQzNDLE9BQU8sQ0FBQyxLQUFLLENBQ1osa0NBQWtDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FDdkQsQ0FBQztZQUVGLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDakMsQ0FBQztRQUVELE9BQU8sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRTNELE9BQU8sR0FBRyxDQUFDO0lBQ1osQ0FBQztJQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7UUFDaEIsT0FBTyxDQUFDLEtBQUssQ0FBQyxzQ0FBc0MsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUU3RCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7QUFDRixDQUFDO0FBRUQsTUFBTSxVQUFVLFFBQVEsQ0FBQyxXQUFvQjtJQUM1QyxJQUFJLENBQUM7UUFDSixNQUFNLEtBQUssR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlDLE1BQU0sRUFBRSxHQUFjO1lBQ3JCLEtBQUssRUFBRTtnQkFDTixVQUFVLEVBQUUsV0FBVyxDQUFDLGtCQUFrQixDQUN6QyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FDL0M7Z0JBQ0QsU0FBUyxFQUFFLFdBQVcsQ0FBQyxrQkFBa0IsQ0FDeEMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQy9DO2dCQUNELEtBQUs7YUFDTDtZQUNELE1BQU0sRUFBRSxJQUFJO1NBQ1osQ0FBQztRQUVGLElBQUksQ0FBQyxXQUFXLENBQUMsbUJBQW1CLENBQUMsRUFBZSxDQUFDLEVBQUUsQ0FBQztZQUN2RCxPQUFPLENBQUMsS0FBSyxDQUNaLGlDQUFpQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQ3JELENBQUM7WUFFRixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2hDLENBQUM7UUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUV6RCxPQUFPLEVBQUUsQ0FBQztJQUNYLENBQUM7SUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDO1FBQ2hCLE9BQU8sQ0FBQyxLQUFLLENBQUMscUNBQXFDLEtBQUssRUFBRSxDQUFDLENBQUM7UUFFNUQsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNoQyxDQUFDO0FBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmF1bHRzIH0gZnJvbSAnLi4vY29uZmlnL2RlZmF1bHRzJztcbmltcG9ydCAqIGFzIGNvbG9ycyBmcm9tICcuLi9pbmRleC9jb2xvcnMnO1xuaW1wb3J0IHsgY29tbW9uVXRpbHMgfSBmcm9tICcuL2NvbW1vbi11dGlscyc7XG5pbXBvcnQgeyBjb3JlIH0gZnJvbSAnLi9jb3JlLXV0aWxzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJhbmRvbUhTTChlbmFibGVBbHBoYTogYm9vbGVhbik6IGNvbG9ycy5IU0wge1xuXHR0cnkge1xuXHRcdGNvbnN0IGFscGhhID0gZW5hYmxlQWxwaGEgPyBNYXRoLnJhbmRvbSgpIDogMTtcblx0XHRjb25zdCBoc2w6IGNvbG9ycy5IU0wgPSB7XG5cdFx0XHR2YWx1ZToge1xuXHRcdFx0XHRodWU6IGNvbW1vblV0aWxzLnNhbml0aXplUmFkaWFsKFxuXHRcdFx0XHRcdE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDM2MClcblx0XHRcdFx0KSxcblx0XHRcdFx0c2F0dXJhdGlvbjogY29tbW9uVXRpbHMuc2FuaXRpemVQZXJjZW50YWdlKFxuXHRcdFx0XHRcdE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMSlcblx0XHRcdFx0KSxcblx0XHRcdFx0bGlnaHRuZXNzOiBjb21tb25VdGlscy5zYW5pdGl6ZVBlcmNlbnRhZ2UoXG5cdFx0XHRcdFx0TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAxKVxuXHRcdFx0XHQpLFxuXHRcdFx0XHRhbHBoYVxuXHRcdFx0fSxcblx0XHRcdGZvcm1hdDogJ2hzbCdcblx0XHR9O1xuXG5cdFx0aWYgKCFjb21tb25VdGlscy52YWxpZGF0ZUNvbG9yVmFsdWVzKGhzbCkpIHtcblx0XHRcdGNvbnNvbGUuZXJyb3IoXG5cdFx0XHRcdGBJbnZhbGlkIHJhbmRvbSBIU0wgY29sb3IgdmFsdWUgJHtKU09OLnN0cmluZ2lmeShoc2wpfWBcblx0XHRcdCk7XG5cblx0XHRcdHJldHVybiBjb3JlLmNsb25lKGRlZmF1bHRzLmhzbCk7XG5cdFx0fVxuXG5cdFx0Y29uc29sZS5sb2coYEdlbmVyYXRlZCByYW5kb21IU0w6ICR7SlNPTi5zdHJpbmdpZnkoaHNsKX1gKTtcblxuXHRcdHJldHVybiBoc2w7XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0Y29uc29sZS5lcnJvcihgRXJyb3IgZ2VuZXJhdGluZyByYW5kb20gSFNMIGNvbG9yOiAke2Vycm9yfWApO1xuXG5cdFx0cmV0dXJuIGNvcmUuY2xvbmUoZGVmYXVsdHMuaHNsKTtcblx0fVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmFuZG9tU0woZW5hYmxlQWxwaGE6IGJvb2xlYW4pOiBjb2xvcnMuU0wge1xuXHR0cnkge1xuXHRcdGNvbnN0IGFscGhhID0gZW5hYmxlQWxwaGEgPyBNYXRoLnJhbmRvbSgpIDogMTtcblx0XHRjb25zdCBzbDogY29sb3JzLlNMID0ge1xuXHRcdFx0dmFsdWU6IHtcblx0XHRcdFx0c2F0dXJhdGlvbjogY29tbW9uVXRpbHMuc2FuaXRpemVQZXJjZW50YWdlKFxuXHRcdFx0XHRcdE1hdGgubWF4KDAsIE1hdGgubWluKDEwMCwgTWF0aC5yYW5kb20oKSAqIDEwMCkpXG5cdFx0XHRcdCksXG5cdFx0XHRcdGxpZ2h0bmVzczogY29tbW9uVXRpbHMuc2FuaXRpemVQZXJjZW50YWdlKFxuXHRcdFx0XHRcdE1hdGgubWF4KDAsIE1hdGgubWluKDEwMCwgTWF0aC5yYW5kb20oKSAqIDEwMCkpXG5cdFx0XHRcdCksXG5cdFx0XHRcdGFscGhhXG5cdFx0XHR9LFxuXHRcdFx0Zm9ybWF0OiAnc2wnXG5cdFx0fTtcblxuXHRcdGlmICghY29tbW9uVXRpbHMudmFsaWRhdGVDb2xvclZhbHVlcyhzbCBhcyBjb2xvcnMuU0wpKSB7XG5cdFx0XHRjb25zb2xlLmVycm9yKFxuXHRcdFx0XHRgSW52YWxpZCByYW5kb20gU1YgY29sb3IgdmFsdWUgJHtKU09OLnN0cmluZ2lmeShzbCl9YFxuXHRcdFx0KTtcblxuXHRcdFx0cmV0dXJuIGNvcmUuY2xvbmUoZGVmYXVsdHMuc2wpO1xuXHRcdH1cblxuXHRcdGNvbnNvbGUubG9nKGBHZW5lcmF0ZWQgcmFuZG9tU0w6ICR7SlNPTi5zdHJpbmdpZnkoc2wpfWApO1xuXG5cdFx0cmV0dXJuIHNsO1xuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGNvbnNvbGUuZXJyb3IoYEVycm9yIGdlbmVyYXRpbmcgcmFuZG9tIFNMIGNvbG9yOiAke2Vycm9yfWApO1xuXG5cdFx0cmV0dXJuIGNvcmUuY2xvbmUoZGVmYXVsdHMuc2wpO1xuXHR9XG59XG4iXX0=","import { genHues } from './hues.js';\nimport { limits } from './limits.js';\nimport { convert } from './conversion-index.js';\nimport { genAllColorValues } from '../utils/conversion-utils.js';\nimport { config } from '../config/constants.js';\nimport { defaults } from '../config/defaults.js';\nimport { database } from '../database/database.js';\nimport { colorUtils } from '../utils/color-utils.js';\nimport { core } from '../utils/core-utils.js';\nimport { paletteUtils } from '../utils/palette-utils.js';\nimport { randomHSL, randomSL } from '../utils/random-color-utils.js';\nexport async function genPalette() {\n    function createPaletteItem(color, enableAlpha) {\n        const clonedColor = core.clone(color);\n        clonedColor.value.alpha = enableAlpha ? Math.random() : 1;\n        return {\n            id: `${color.format}_${database.getNextPaletteID()}`,\n            colors: {\n                cmyk: convert.hslToCMYK(clonedColor).value,\n                hex: convert.hslToHex(clonedColor).value,\n                hsl: clonedColor.value,\n                hsv: convert.hslToHSV(clonedColor).value,\n                lab: convert.hslToLAB(clonedColor).value,\n                rgb: convert.hslToRGB(clonedColor).value,\n                xyz: convert.hslToXYZ(clonedColor).value\n            },\n            colorStrings: {\n                cmykString: colorUtils.colorToColorString(convert.hslToCMYK(clonedColor)).value,\n                hexString: colorUtils.colorToColorString(convert.hslToHex(clonedColor)).value,\n                hslString: colorUtils.colorToColorString(clonedColor).value,\n                hsvString: colorUtils.colorToColorString(convert.hslToHSV(clonedColor)).value,\n                labString: colorUtils.colorToColorString(convert.hslToLAB(clonedColor)).value,\n                rgbString: colorUtils.colorToColorString(convert.hslToRGB(clonedColor)).value,\n                xyzString: colorUtils.colorToColorString(convert.hslToXYZ(clonedColor)).value\n            },\n            cssStrings: {\n                cmykCSSString: colorUtils.getCSSColorString(convert.hslToCMYK(clonedColor)),\n                hexCSSString: convert.hslToHex(clonedColor).value.hex,\n                hslCSSString: colorUtils.getCSSColorString(clonedColor),\n                hsvCSSString: colorUtils.getCSSColorString(convert.hslToHSV(clonedColor)),\n                labCSSString: colorUtils.getCSSColorString(convert.hslToLAB(clonedColor)),\n                rgbCSSString: colorUtils.getCSSColorString(convert.hslToRGB(clonedColor)),\n                xyzCSSString: colorUtils.getCSSColorString(convert.hslToXYZ(clonedColor))\n            }\n        };\n    }\n    function generatePaletteItems(baseColor, hues, enableAlpha, limitDark, limitGray, limitBright) {\n        const paletteItems = [\n            createPaletteItem(baseColor, enableAlpha)\n        ];\n        hues.forEach((hue, i) => {\n            let newColor = null;\n            do {\n                const sl = randomSL(enableAlpha);\n                newColor = genAllColorValues({\n                    value: { hue, ...sl.value },\n                    format: 'hsl'\n                }).hsl;\n            } while (newColor &&\n                ((limitGray && limits.isTooGray(newColor)) ||\n                    (limitDark && limits.isTooDark(newColor)) ||\n                    (limitBright && limits.isTooBright(newColor))));\n            if (newColor) {\n                paletteItems.push(createPaletteItem(newColor, enableAlpha));\n                updateColorBox(newColor, i + 1);\n            }\n        });\n        return paletteItems;\n    }\n    function getBaseColor(customColor, enableAlpha) {\n        const color = core.clone(customColor ?? randomHSL(enableAlpha));\n        return color;\n    }\n    function updateColorBox(color, index) {\n        const colorBox = document.getElementById(`color-box-${index + 1}`);\n        if (colorBox) {\n            const colorValues = genAllColorValues(color);\n            const selectedColor = colorValues;\n            if (selectedColor) {\n                const hslColor = colorValues.hsl;\n                const hslCSSString = colorUtils.getCSSColorString(hslColor);\n                colorBox.style.backgroundColor = hslCSSString;\n                paletteUtils.populateColorTextOutputBox(selectedColor, index + 1);\n            }\n        }\n    }\n    async function analogous(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray) {\n        const currentAnalogousPaletteID = await database.getCurrentPaletteID();\n        if (numBoxes < 2) {\n            console.warn('Analogous palette requires at least 2 swatches.');\n            return paletteUtils.createPaletteObject('analogous', [], defaults.hsl, 0, currentAnalogousPaletteID, enableAlpha, limitBright, limitDark, limitGray);\n        }\n        const baseColor = getBaseColor(customColor, enableAlpha);\n        const hues = genHues.analogous(baseColor, numBoxes);\n        const paletteItems = hues.map((hue, i) => {\n            const newColor = {\n                value: {\n                    hue,\n                    saturation: Math.min(100, Math.max(0, baseColor.value.saturation +\n                        (Math.random() - 0.5) * 10)),\n                    lightness: Math.min(100, Math.max(0, baseColor.value.lightness + (i % 2 === 0 ? 5 : -5))),\n                    alpha: enableAlpha ? Math.random() : 1\n                },\n                format: 'hsl'\n            };\n            return createPaletteItem(newColor, enableAlpha);\n        });\n        return await database.savePaletteToDB('analogous', paletteItems, baseColor, numBoxes, enableAlpha, limitBright, limitDark, limitGray);\n    }\n    async function complementary(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray) {\n        const currentComplementaryPaletteID = await database.getCurrentPaletteID();\n        if (numBoxes < 2) {\n            console.warn('Complementary palette requires at least 2 swatches.');\n            return paletteUtils.createPaletteObject('complementary', [], defaults.hsl, 0, currentComplementaryPaletteID, enableAlpha, limitBright, limitDark, limitGray);\n        }\n        const baseColor = getBaseColor(customColor, enableAlpha);\n        const complementaryHue = (baseColor.value.hue + 180) % 360;\n        const hues = Array.from({ length: numBoxes - 1 }, (_, _i) => (complementaryHue +\n            (Math.random() * config.complementaryHueShiftRange -\n                config.complementaryHueShiftRange / 2)) %\n            360);\n        const paletteItems = hues.map((hue, i) => {\n            const saturation = Math.min(100, Math.max(0, baseColor.value.saturation + (Math.random() - 0.5) * 15));\n            const lightness = Math.min(100, Math.max(0, baseColor.value.lightness + (i % 2 === 0 ? -10 : 10)));\n            const alpha = enableAlpha ? Math.random() : 1;\n            const newColor = {\n                value: { hue, saturation, lightness, alpha },\n                format: 'hsl'\n            };\n            return createPaletteItem(newColor, enableAlpha);\n        });\n        paletteItems.unshift(createPaletteItem(baseColor, enableAlpha));\n        return await database.savePaletteToDB('complementary', paletteItems, baseColor, numBoxes, enableAlpha, limitBright, limitDark, limitGray);\n    }\n    async function diadic(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray) {\n        const currentDiadicPaletteID = await database.getCurrentPaletteID();\n        if (numBoxes < 2) {\n            console.warn('Diadic palette requires at least 2 swatches.');\n            return paletteUtils.createPaletteObject('diadic', [], defaults.hsl, 0, currentDiadicPaletteID, enableAlpha, limitBright, limitDark, limitGray);\n        }\n        const baseColor = getBaseColor(customColor, enableAlpha);\n        const hues = genHues.diadic(baseColor.value.hue);\n        const paletteItems = Array.from({ length: numBoxes }, (_, i) => {\n            const saturationShift = Math.random() * config.diadicSaturationShiftRange -\n                config.diadicSaturationShiftRange / 2;\n            const lightnessShift = Math.random() * config.diadicLightnessShiftRange -\n                config.diadicLightnessShiftRange / 2;\n            const newColor = {\n                value: {\n                    hue: hues[i % hues.length],\n                    saturation: Math.min(100, Math.max(0, baseColor.value.saturation + saturationShift)),\n                    lightness: Math.min(100, Math.max(0, baseColor.value.lightness + lightnessShift)),\n                    alpha: enableAlpha ? Math.random() : 1\n                },\n                format: 'hsl'\n            };\n            return createPaletteItem(newColor, enableAlpha);\n        });\n        return await database.savePaletteToDB('diadic', paletteItems, baseColor, numBoxes, enableAlpha, limitBright, limitDark, limitGray);\n    }\n    async function hexadic(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray) {\n        const currentHexadicPaletteID = await database.getCurrentPaletteID();\n        if (numBoxes < 6) {\n            console.warn('Hexadic palette requires at least 6 swatches.');\n            return paletteUtils.createPaletteObject('hexadic', [], defaults.hsl, 0, currentHexadicPaletteID, enableAlpha, limitBright, limitDark, limitGray);\n        }\n        const baseColor = getBaseColor(customColor, enableAlpha);\n        const hues = genHues.hexadic(baseColor);\n        const paletteItems = hues.map((hue, _i) => {\n            const saturationShift = Math.random() * config.hexadicSaturationShiftRange -\n                config.hexadicSaturationShiftRange / 2;\n            const lightnessShift = Math.random() * config.hexadicLightnessShiftRange -\n                config.hexadicLightnessShiftRange / 2;\n            const newColor = {\n                value: {\n                    hue,\n                    saturation: Math.min(100, Math.max(0, baseColor.value.saturation + saturationShift)),\n                    lightness: Math.min(100, Math.max(0, baseColor.value.lightness + lightnessShift)),\n                    alpha: enableAlpha ? Math.random() : 1\n                },\n                format: 'hsl'\n            };\n            return createPaletteItem(newColor, enableAlpha);\n        });\n        return await database.savePaletteToDB('hexadic', paletteItems, baseColor, numBoxes, enableAlpha, limitBright, limitDark, limitGray);\n    }\n    async function monochromatic(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray) {\n        const currentMonochromaticPaletteID = await database.getCurrentPaletteID();\n        if (numBoxes < 2) {\n            console.warn('Monochromatic palette requires at least 2 swatches.');\n            return paletteUtils.createPaletteObject('monochromatic', [], defaults.hsl, 0, currentMonochromaticPaletteID, enableAlpha, limitBright, limitDark, limitGray);\n        }\n        const baseColor = getBaseColor(customColor, enableAlpha);\n        const paletteItems = [\n            createPaletteItem(baseColor, enableAlpha)\n        ];\n        for (let i = 1; i < numBoxes; i++) {\n            const hueShift = Math.random() * 10 - 5;\n            const newColor = genAllColorValues({\n                value: {\n                    hue: (baseColor.value.hue + hueShift + 360) % 360,\n                    saturation: Math.min(100, Math.max(0, baseColor.value.saturation - i * 5)),\n                    lightness: Math.min(100, Math.max(0, baseColor.value.lightness + (i * 10 - 20))),\n                    alpha: enableAlpha ? Math.random() : 1\n                },\n                format: 'hsl'\n            }).hsl;\n            if (newColor) {\n                paletteItems.push(createPaletteItem(newColor, enableAlpha));\n            }\n        }\n        return await database.savePaletteToDB('monochromatic', paletteItems, baseColor, numBoxes, enableAlpha, limitBright, limitDark, limitGray);\n    }\n    async function random(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray) {\n        const baseColor = getBaseColor(customColor, enableAlpha);\n        const paletteItems = [\n            createPaletteItem(baseColor, enableAlpha)\n        ];\n        for (let i = 1; i < numBoxes; i++) {\n            const randomColor = randomHSL(enableAlpha);\n            paletteItems.push(createPaletteItem(randomColor, enableAlpha));\n            updateColorBox(randomColor, i);\n        }\n        return await database.savePaletteToDB('random', paletteItems, baseColor, numBoxes, enableAlpha, limitBright, limitDark, limitGray);\n    }\n    async function splitComplementary(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray) {\n        const currentSplitComplementaryPaletteID = await database.getCurrentPaletteID();\n        if (numBoxes < 3) {\n            console.warn('Split complementary palette requires at least 3 swatches.');\n            return paletteUtils.createPaletteObject('splitComplementary', [], defaults.hsl, 0, currentSplitComplementaryPaletteID, enableAlpha, limitBright, limitDark, limitGray);\n        }\n        const baseColor = getBaseColor(customColor, enableAlpha);\n        const [hue1, hue2] = genHues.splitComplementary(baseColor.value.hue);\n        const paletteItems = [\n            createPaletteItem(baseColor, enableAlpha),\n            ...[hue1, hue2].map((hue, index) => {\n                const adjustedHSL = {\n                    value: {\n                        hue,\n                        saturation: Math.max(0, Math.min(baseColor.value.saturation +\n                            (index === 0\n                                ? -config.splitComplementarySaturationShiftRange\n                                : config.splitComplementarySaturationShiftRange), 100)),\n                        lightness: Math.max(0, Math.min(baseColor.value.lightness +\n                            (index === 0\n                                ? -config.splitComplementaryLightnessShiftRange\n                                : config.splitComplementaryLightnessShiftRange), 100)),\n                        alpha: enableAlpha ? Math.random() : 1\n                    },\n                    format: 'hsl'\n                };\n                const adjustedColor = genAllColorValues(adjustedHSL);\n                return createPaletteItem(adjustedColor, enableAlpha);\n            })\n        ];\n        return await database.savePaletteToDB('splitComplementary', paletteItems, baseColor, numBoxes, enableAlpha, limitBright, limitDark, limitGray);\n    }\n    async function tetradic(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray) {\n        const currentTetradicPaletteID = await database.getCurrentPaletteID();\n        if (numBoxes < 4) {\n            console.warn('Tetradic palette requires at least 4 swatches.');\n            return paletteUtils.createPaletteObject('tetradic', [], defaults.hsl, 0, currentTetradicPaletteID, enableAlpha, limitBright, limitDark, limitGray);\n        }\n        const baseColor = getBaseColor(customColor, enableAlpha);\n        const tetradicHues = genHues.tetradic(baseColor.value.hue);\n        const paletteItems = [\n            createPaletteItem(baseColor, enableAlpha),\n            ...tetradicHues.map((hue, index) => {\n                const adjustedHSL = {\n                    value: {\n                        hue,\n                        saturation: Math.max(0, Math.min(baseColor.value.saturation +\n                            (index % 2 === 0\n                                ? -config.tetradicSaturationShiftRange\n                                : config.tetradicSaturationShiftRange), 100)),\n                        lightness: Math.max(0, Math.min(baseColor.value.lightness +\n                            (index % 2 === 0\n                                ? -config.tetradicLightnessShiftRange\n                                : config.tetradicLightnessShiftRange), 100)),\n                        alpha: enableAlpha ? Math.random() : 1\n                    },\n                    format: 'hsl'\n                };\n                const adjustedColor = genAllColorValues(adjustedHSL);\n                return createPaletteItem(adjustedColor.hsl, enableAlpha);\n            })\n        ];\n        return await database.savePaletteToDB('tetradic', paletteItems, baseColor, numBoxes, enableAlpha, limitBright, limitDark, limitGray);\n    }\n    async function triadic(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray) {\n        const currentTriadicPaletteID = await database.getCurrentPaletteID();\n        if (numBoxes < 3) {\n            console.warn('Triadic palette requires at least 3 swatches.');\n            return paletteUtils.createPaletteObject('triadic', [], defaults.hsl, 0, currentTriadicPaletteID, enableAlpha, limitBright, limitDark, limitGray);\n        }\n        const baseColor = getBaseColor(customColor, enableAlpha);\n        const hues = genHues.triadic(baseColor.value.hue);\n        const paletteItems = [\n            createPaletteItem(baseColor, enableAlpha),\n            ...hues.map((hue, index) => {\n                const adjustedHSL = {\n                    value: {\n                        hue,\n                        saturation: Math.max(0, Math.min(baseColor.value.saturation +\n                            (index % 2 === 0\n                                ? -config.triadicSaturationShiftRange\n                                : config.triadicSaturationShiftRange), 100)),\n                        lightness: Math.max(0, Math.min(baseColor.value.lightness +\n                            (index % 2 === 0\n                                ? -config.triadicLightnessShiftRange\n                                : config.triadicLightnessShiftRange), 100)),\n                        alpha: enableAlpha ? Math.random() : 1\n                    },\n                    format: 'hsl'\n                };\n                const adjustedColor = genAllColorValues(adjustedHSL);\n                return createPaletteItem(adjustedColor, enableAlpha);\n            })\n        ];\n        return await database.savePaletteToDB('triadic', paletteItems, baseColor, numBoxes, enableAlpha, limitBright, limitDark, limitGray);\n    }\n    return {\n        createPaletteItem,\n        generatePaletteItems,\n        getBaseColor,\n        updateColorBox,\n        analogous,\n        complementary,\n        diadic,\n        hexadic,\n        monochromatic,\n        random,\n        splitComplementary,\n        tetradic,\n        triadic\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFsZXR0ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGFsZXR0ZS1nZW4vcGFsZXR0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNqQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDN0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUloRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbEQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRWxFLE1BQU0sQ0FBQyxLQUFLLFVBQVUsVUFBVTtJQUMvQixTQUFTLGlCQUFpQixDQUN6QixLQUFpQixFQUNqQixXQUFvQjtRQUVwQixNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBZSxDQUFDO1FBRXBELFdBQVcsQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFMUQsT0FBTztZQUNOLEVBQUUsRUFBRSxHQUFHLEtBQUssQ0FBQyxNQUFNLElBQUksUUFBUSxDQUFDLGdCQUFn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Q0FBQztTQUNGLENBQUM7UUFFRixPQUFPLE1BQU0sUUFBUSxDQUFDLGVBQWUsQ0FDcEMsU0FBUyxFQUNULFlBQVksRUFDWixTQUFTLEVBQ1QsUUFBUSxFQUNSLFdBQVcsRUFDWCxXQUFXLEVBQ1gsU0FBUyxFQUNULFNBQVMsQ0FDVCxDQUFDO0lBQ0gsQ0FBQztJQUVELE9BQU87UUFDTixpQkFBaUI7UUFDakIsb0JBQW9CO1FBQ3BCLFlBQVk7UUFDWixjQUFjO1FBQ2QsU0FBUztRQUNULGFBQWE7UUFDYixNQUFNO1FBQ04sT0FBTztRQUNQLGFBQWE7UUFDYixNQUFNO1FBQ04sa0JBQWtCO1FBQ2xCLFFBQVE7UUFDUixPQUFPO0tBQ1AsQ0FBQztBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZW5IdWVzIH0gZnJvbSAnLi9odWVzJztcbmltcG9ydCB7IGxpbWl0cyB9IGZyb20gJy4vbGltaXRzJztcbmltcG9ydCB7IGNvbnZlcnQgfSBmcm9tICcuL2NvbnZlcnNpb24taW5kZXgnO1xuaW1wb3J0IHsgZ2VuQWxsQ29sb3JWYWx1ZXMgfSBmcm9tICcuLi91dGlscy9jb252ZXJzaW9uLXV0aWxzJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uL2NvbmZpZy9jb25zdGFudHMnO1xuaW1wb3J0IHsgZGVmYXVsdHMgfSBmcm9tICcuLi9jb25maWcvZGVmYXVsdHMnO1xuaW1wb3J0IHsgZGF0YWJhc2UgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZSc7XG5pbXBvcnQgKiBhcyBjb2xvcnMgZnJvbSAnLi4vaW5kZXgvY29sb3JzJztcbmltcG9ydCAqIGFzIHBhbGV0dGUgZnJvbSAnLi4vaW5kZXgvcGFsZXR0ZSc7XG5pbXBvcnQgKiBhcyBmbk9iamVjdHMgZnJvbSAnLi4vaW5kZXgvZm4tb2JqZWN0cyc7XG5pbXBvcnQgeyBjb2xvclV0aWxzIH0gZnJvbSAnLi4vdXRpbHMvY29sb3ItdXRpbHMnO1xuaW1wb3J0IHsgY29yZSB9IGZyb20gJy4uL3V0aWxzL2NvcmUtdXRpbHMnO1xuaW1wb3J0IHsgcGFsZXR0ZVV0aWxzIH0gZnJvbSAnLi4vdXRpbHMvcGFsZXR0ZS11dGlscyc7XG5pbXBvcnQgeyByYW5kb21IU0wsIHJhbmRvbVNMIH0gZnJvbSAnLi4vdXRpbHMvcmFuZG9tLWNvbG9yLXV0aWxzJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlblBhbGV0dGUoKTogUHJvbWlzZTxmbk9iamVjdHMuR2VuUGFsZXR0ZT4ge1xuXHRmdW5jdGlvbiBjcmVhdGVQYWxldHRlSXRlbShcblx0XHRjb2xvcjogY29sb3JzLkhTTCxcblx0XHRlbmFibGVBbHBoYTogYm9vbGVhblxuXHQpOiBwYWxldHRlLlBhbGV0dGVJdGVtIHtcblx0XHRjb25zdCBjbG9uZWRDb2xvciA9IGNvcmUuY2xvbmUoY29sb3IpIGFzIGNvbG9ycy5IU0w7XG5cblx0XHRjbG9uZWRDb2xvci52YWx1ZS5hbHBoYSA9IGVuYWJsZUFscGhhID8gTWF0aC5yYW5kb20oKSA6IDE7XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0aWQ6IGAke2NvbG9yLmZvcm1hdH1fJHtkYXRhYmFzZS5nZXROZXh0UGFsZXR0ZUlEKCl9YCxcblx0XHRcdGNvbG9yczoge1xuXHRcdFx0XHRjbXlrOiAoY29udmVydC5oc2xUb0NNWUsoY2xvbmVkQ29sb3IpIGFzIGNvbG9ycy5DTVlLKS52YWx1ZSxcblx0XHRcdFx0aGV4OiAoY29udmVydC5oc2xUb0hleChjbG9uZWRDb2xvcikgYXMgY29sb3JzLkhleCkudmFsdWUsXG5cdFx0XHRcdGhzbDogY2xvbmVkQ29sb3IudmFsdWUsXG5cdFx0XHRcdGhzdjogKGNvbnZlcnQuaHNsVG9IU1YoY2xvbmVkQ29sb3IpIGFzIGNvbG9ycy5IU1YpLnZhbHVlLFxuXHRcdFx0XHRsYWI6IChjb252ZXJ0LmhzbFRvTEFCKGNsb25lZENvbG9yKSBhcyBjb2xvcnMuTEFCKS52YWx1ZSxcblx0XHRcdFx0cmdiOiAoY29udmVydC5oc2xUb1JHQihjbG9uZWRDb2xvcikgYXMgY29sb3JzLlJHQikudmFsdWUsXG5cdFx0XHRcdHh5ejogKGNvbnZlcnQuaHNsVG9YWVooY2xvbmVkQ29sb3IpIGFzIGNvbG9ycy5YWVopLnZhbHVlXG5cdFx0XHR9LFxuXHRcdFx0Y29sb3JTdHJpbmdzOiB7XG5cdFx0XHRcdGNteWtTdHJpbmc6IChcblx0XHRcdFx0XHRjb2xvclV0aWxzLmNvbG9yVG9Db2xvclN0cmluZyhcblx0XHRcdFx0XHRcdGNvbnZlcnQuaHNsVG9DTVlLKGNsb25lZENvbG9yKVxuXHRcdFx0XHRcdCkgYXMgY29sb3JzLkNNWUtTdHJpbmdcblx0XHRcdFx0KS52YWx1ZSxcblx0XHRcdFx0aGV4U3RyaW5nOiAoXG5cdFx0XHRcdFx0Y29sb3JVdGlscy5jb2xvclRvQ29sb3JTdHJpbmcoXG5cdFx0XHRcdFx0XHRjb252ZXJ0LmhzbFRvSGV4KGNsb25lZENvbG9yKVxuXHRcdFx0XHRcdCkgYXMgY29sb3JzLkhleFN0cmluZ1xuXHRcdFx0XHQpLnZhbHVlLFxuXHRcdFx0XHRoc2xTdHJpbmc6IChcblx0XHRcdFx0XHRjb2xvclV0aWxzLmNvbG9yVG9Db2xvclN0cmluZyhcblx0XHRcdFx0XHRcdGNsb25lZENvbG9yXG5cdFx0XHRcdFx0KSBhcyBjb2xvcnMuSFNMU3RyaW5nXG5cdFx0XHRcdCkudmFsdWUsXG5cdFx0XHRcdGhzdlN0cmluZzogKFxuXHRcdFx0XHRcdGNvbG9yVXRpbHMuY29sb3JUb0NvbG9yU3RyaW5nKFxuXHRcdFx0XHRcdFx0Y29udmVydC5oc2xUb0hTVihjbG9uZWRDb2xvcilcblx0XHRcdFx0XHQpIGFzIGNvbG9ycy5IU1ZTdHJpbmdcblx0XHRcdFx0KS52YWx1ZSxcblx0XHRcdFx0bGFiU3RyaW5nOiAoXG5cdFx0XHRcdFx0Y29sb3JVdGlscy5jb2xvclRvQ29sb3JTdHJpbmcoXG5cdFx0XHRcdFx0XHRjb252ZXJ0LmhzbFRvTEFCKGNsb25lZENvbG9yKVxuXHRcdFx0XHRcdCkgYXMgY29sb3JzLkxBQlN0cmluZ1xuXHRcdFx0XHQpLnZhbHVlLFxuXHRcdFx0XHRyZ2JTdHJpbmc6IChcblx0XHRcdFx0XHRjb2xvclV0aWxzLmNvbG9yVG9Db2xvclN0cmluZyhcblx0XHRcdFx0XHRcdGNvbnZlcnQuaHNsVG9SR0IoY2xvbmVkQ29sb3IpXG5cdFx0XHRcdFx0KSBhcyBjb2xvcnMuUkdCU3RyaW5nXG5cdFx0XHRcdCkudmFsdWUsXG5cdFx0XHRcdHh5elN0cmluZzogKFxuXHRcdFx0XHRcdGNvbG9yVXRpbHMuY29sb3JUb0NvbG9yU3RyaW5nKFxuXHRcdFx0XHRcdFx0Y29udmVydC5oc2xUb1hZWihjbG9uZWRDb2xvcilcblx0XHRcdFx0XHQpIGFzIGNvbG9ycy5YWVpTdHJpbmdcblx0XHRcdFx0KS52YWx1ZVxuXHRcdFx0fSxcblx0XHRcdGNzc1N0cmluZ3M6IHtcblx0XHRcdFx0Y215a0NTU1N0cmluZzogY29sb3JVdGlscy5nZXRDU1NDb2xvclN0cmluZyhcblx0XHRcdFx0XHRjb252ZXJ0LmhzbFRvQ01ZSyhjbG9uZWRDb2xvcilcblx0XHRcdFx0KSxcblx0XHRcdFx0aGV4Q1NTU3RyaW5nOiBjb252ZXJ0LmhzbFRvSGV4KGNsb25lZENvbG9yKS52YWx1ZS5oZXgsXG5cdFx0XHRcdGhzbENTU1N0cmluZzogY29sb3JVdGlscy5nZXRDU1NDb2xvclN0cmluZyhjbG9uZWRDb2xvciksXG5cdFx0XHRcdGhzdkNTU1N0cmluZzogY29sb3JVdGlscy5nZXRDU1NDb2xvclN0cmluZyhcblx0XHRcdFx0XHRjb252ZXJ0LmhzbFRvSFNWKGNsb25lZENvbG9yKVxuXHRcdFx0XHQpLFxuXHRcdFx0XHRsYWJDU1NTdHJpbmc6IGNvbG9yVXRpbHMuZ2V0Q1NTQ29sb3JTdHJpbmcoXG5cdFx0XHRcdFx0Y29udmVydC5oc2xUb0xBQihjbG9uZWRDb2xvcilcblx0XHRcdFx0KSxcblx0XHRcdFx0cmdiQ1NTU3RyaW5nOiBjb2xvclV0aWxzLmdldENTU0NvbG9yU3RyaW5nKFxuXHRcdFx0XHRcdGNvbnZlcnQuaHNsVG9SR0IoY2xvbmVkQ29sb3IpXG5cdFx0XHRcdCksXG5cdFx0XHRcdHh5ekNTU1N0cmluZzogY29sb3JVdGlscy5nZXRDU1NDb2xvclN0cmluZyhcblx0XHRcdFx0XHRjb252ZXJ0LmhzbFRvWFlaKGNsb25lZENvbG9yKVxuXHRcdFx0XHQpXG5cdFx0XHR9XG5cdFx0fTtcblx0fVxuXG5cdGZ1bmN0aW9uIGdlbmVyYXRlUGFsZXR0ZUl0ZW1zKFxuXHRcdGJhc2VDb2xvcjogY29sb3JzLkhTTCxcblx0XHRodWVzOiBudW1iZXJbXSxcblx0XHRlbmFibGVBbHBoYTogYm9vbGVhbixcblx0XHRsaW1pdERhcms6IGJvb2xlYW4sXG5cdFx0bGltaXRHcmF5OiBib29sZWFuLFxuXHRcdGxpbWl0QnJpZ2h0OiBib29sZWFuXG5cdCk6IHBhbGV0dGUuUGFsZXR0ZUl0ZW1bXSB7XG5cdFx0Y29uc3QgcGFsZXR0ZUl0ZW1zOiBwYWxldHRlLlBhbGV0dGVJdGVtW10gPSBbXG5cdFx0XHRjcmVhdGVQYWxldHRlSXRlbShiYXNlQ29sb3IsIGVuYWJsZUFscGhhKVxuXHRcdF07XG5cblx0XHRodWVzLmZvckVhY2goKGh1ZSwgaSkgPT4ge1xuXHRcdFx0bGV0IG5ld0NvbG9yOiBjb2xvcnMuSFNMIHwgbnVsbCA9IG51bGw7XG5cblx0XHRcdGRvIHtcblx0XHRcdFx0Y29uc3Qgc2wgPSByYW5kb21TTChlbmFibGVBbHBoYSkgYXMgY29sb3JzLlNMO1xuXHRcdFx0XHRuZXdDb2xvciA9IGdlbkFsbENvbG9yVmFsdWVzKHtcblx0XHRcdFx0XHR2YWx1ZTogeyBodWUsIC4uLnNsLnZhbHVlIH0sXG5cdFx0XHRcdFx0Zm9ybWF0OiAnaHNsJ1xuXHRcdFx0XHR9KS5oc2wgYXMgY29sb3JzLkhTTDtcblx0XHRcdH0gd2hpbGUgKFxuXHRcdFx0XHRuZXdDb2xvciAmJlxuXHRcdFx0XHQoKGxpbWl0R3JheSAmJiBsaW1pdHMuaXNUb29HcmF5KG5ld0NvbG9yKSkgfHxcblx0XHRcdFx0XHQobGltaXREYXJrICYmIGxpbWl0cy5pc1Rvb0RhcmsobmV3Q29sb3IpKSB8fFxuXHRcdFx0XHRcdChsaW1pdEJyaWdodCAmJiBsaW1pdHMuaXNUb29CcmlnaHQobmV3Q29sb3IpKSlcblx0XHRcdCk7XG5cblx0XHRcdGlmIChuZXdDb2xvcikge1xuXHRcdFx0XHRwYWxldHRlSXRlbXMucHVzaChjcmVhdGVQYWxldHRlSXRlbShuZXdDb2xvciwgZW5hYmxlQWxwaGEpKTtcblxuXHRcdFx0XHR1cGRhdGVDb2xvckJveChuZXdDb2xvciwgaSArIDEpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIHBhbGV0dGVJdGVtcztcblx0fVxuXG5cdGZ1bmN0aW9uIGdldEJhc2VDb2xvcihcblx0XHRjdXN0b21Db2xvcjogY29sb3JzLkhTTCB8IG51bGwsXG5cdFx0ZW5hYmxlQWxwaGE6IGJvb2xlYW5cblx0KTogY29sb3JzLkhTTCB7XG5cdFx0Y29uc3QgY29sb3IgPSBjb3JlLmNsb25lKGN1c3RvbUNvbG9yID8/IHJhbmRvbUhTTChlbmFibGVBbHBoYSkpO1xuXG5cdFx0cmV0dXJuIGNvbG9yIGFzIGNvbG9ycy5IU0w7XG5cdH1cblxuXHRmdW5jdGlvbiB1cGRhdGVDb2xvckJveChjb2xvcjogY29sb3JzLkhTTCwgaW5kZXg6IG51bWJlcik6IHZvaWQge1xuXHRcdGNvbnN0IGNvbG9yQm94ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYGNvbG9yLWJveC0ke2luZGV4ICsgMX1gKTtcblxuXHRcdGlmIChjb2xvckJveCkge1xuXHRcdFx0Y29uc3QgY29sb3JWYWx1ZXMgPSBnZW5BbGxDb2xvclZhbHVlcyhjb2xvcik7XG5cdFx0XHRjb25zdCBzZWxlY3RlZENvbG9yID0gY29sb3JWYWx1ZXMgYXMgY29sb3JzLkNvbG9yO1xuXG5cdFx0XHRpZiAoc2VsZWN0ZWRDb2xvcikge1xuXHRcdFx0XHRjb25zdCBoc2xDb2xvciA9IGNvbG9yVmFsdWVzLmhzbCBhcyBjb2xvcnMuSFNMO1xuXHRcdFx0XHRjb25zdCBoc2xDU1NTdHJpbmcgPSBjb2xvclV0aWxzLmdldENTU0NvbG9yU3RyaW5nKGhzbENvbG9yKTtcblxuXHRcdFx0XHRjb2xvckJveC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBoc2xDU1NTdHJpbmc7XG5cblx0XHRcdFx0cGFsZXR0ZVV0aWxzLnBvcHVsYXRlQ29sb3JUZXh0T3V0cHV0Qm94KFxuXHRcdFx0XHRcdHNlbGVjdGVkQ29sb3IsXG5cdFx0XHRcdFx0aW5kZXggKyAxXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0YXN5bmMgZnVuY3Rpb24gYW5hbG9nb3VzKFxuXHRcdG51bUJveGVzOiBudW1iZXIsXG5cdFx0Y3VzdG9tQ29sb3I6IGNvbG9ycy5IU0wgfCBudWxsLFxuXHRcdGVuYWJsZUFscGhhOiBib29sZWFuLFxuXHRcdGxpbWl0QnJpZ2h0OiBib29sZWFuLFxuXHRcdGxpbWl0RGFyazogYm9vbGVhbixcblx0XHRsaW1pdEdyYXk6IGJvb2xlYW5cblx0KTogUHJvbWlzZTxwYWxldHRlLlBhbGV0dGU+IHtcblx0XHRjb25zdCBjdXJyZW50QW5hbG9nb3VzUGFsZXR0ZUlEID0gYXdhaXQgZGF0YWJhc2UuZ2V0Q3VycmVudFBhbGV0dGVJRCgpO1xuXG5cdFx0aWYgKG51bUJveGVzIDwgMikge1xuXHRcdFx0Y29uc29sZS53YXJuKCdBbmFsb2dvdXMgcGFsZXR0ZSByZXF1aXJlcyBhdCBsZWFzdCAyIHN3YXRjaGVzLicpO1xuXG5cdFx0XHRyZXR1cm4gcGFsZXR0ZVV0aWxzLmNyZWF0ZVBhbGV0dGVPYmplY3QoXG5cdFx0XHRcdCdhbmFsb2dvdXMnLFxuXHRcdFx0XHRbXSxcblx0XHRcdFx0ZGVmYXVsdHMuaHNsLFxuXHRcdFx0XHQwLFxuXHRcdFx0XHRjdXJyZW50QW5hbG9nb3VzUGFsZXR0ZUlELFxuXHRcdFx0XHRlbmFibGVBbHBoYSxcblx0XHRcdFx0bGltaXRCcmlnaHQsXG5cdFx0XHRcdGxpbWl0RGFyayxcblx0XHRcdFx0bGltaXRHcmF5XG5cdFx0XHQpO1xuXHRcdH1cblxuXHRcdGNvbnN0IGJhc2VDb2xvciA9IGdldEJhc2VDb2xvcihjdXN0b21Db2xvciwgZW5hYmxlQWxwaGEpO1xuXHRcdGNvbnN0IGh1ZXMgPSBnZW5IdWVzLmFuYWxvZ291cyhiYXNlQ29sb3IsIG51bUJveGVzKTtcblx0XHRjb25zdCBwYWxldHRlSXRlbXM6IHBhbGV0dGUuUGFsZXR0ZUl0ZW1bXSA9IGh1ZXMubWFwKChodWUsIGkpID0+IHtcblx0XHRcdGNvbnN0IG5ld0NvbG9yOiBjb2xvcnMuSFNMID0ge1xuXHRcdFx0XHR2YWx1ZToge1xuXHRcdFx0XHRcdGh1ZSxcblx0XHRcdFx0XHRzYXR1cmF0aW9uOiBNYXRoLm1pbihcblx0XHRcdFx0XHRcdDEwMCxcblx0XHRcdFx0XHRcdE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRiYXNlQ29sb3IudmFsdWUuc2F0dXJhdGlvbiArXG5cdFx0XHRcdFx0XHRcdFx0KE1hdGgucmFuZG9tKCkgLSAwLjUpICogMTBcblx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdGxpZ2h0bmVzczogTWF0aC5taW4oXG5cdFx0XHRcdFx0XHQxMDAsXG5cdFx0XHRcdFx0XHRNYXRoLm1heChcblx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0YmFzZUNvbG9yLnZhbHVlLmxpZ2h0bmVzcyArIChpICUgMiA9PT0gMCA/IDUgOiAtNSlcblx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdGFscGhhOiBlbmFibGVBbHBoYSA/IE1hdGgucmFuZG9tKCkgOiAxXG5cdFx0XHRcdH0sXG5cdFx0XHRcdGZvcm1hdDogJ2hzbCdcblx0XHRcdH07XG5cblx0XHRcdHJldHVybiBjcmVhdGVQYWxldHRlSXRlbShuZXdDb2xvciwgZW5hYmxlQWxwaGEpO1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIGF3YWl0IGRhdGFiYXNlLnNhdmVQYWxldHRlVG9EQihcblx0XHRcdCdhbmFsb2dvdXMnLFxuXHRcdFx0cGFsZXR0ZUl0ZW1zLFxuXHRcdFx0YmFzZUNvbG9yLFxuXHRcdFx0bnVtQm94ZXMsXG5cdFx0XHRlbmFibGVBbHBoYSxcblx0XHRcdGxpbWl0QnJpZ2h0LFxuXHRcdFx0bGltaXREYXJrLFxuXHRcdFx0bGltaXRHcmF5XG5cdFx0KTtcblx0fVxuXG5cdGFzeW5jIGZ1bmN0aW9uIGNvbXBsZW1lbnRhcnkoXG5cdFx0bnVtQm94ZXM6IG51bWJlcixcblx0XHRjdXN0b21Db2xvcjogY29sb3JzLkhTTCB8IG51bGwsXG5cdFx0ZW5hYmxlQWxwaGE6IGJvb2xlYW4sXG5cdFx0bGltaXRCcmlnaHQ6IGJvb2xlYW4sXG5cdFx0bGltaXREYXJrOiBib29sZWFuLFxuXHRcdGxpbWl0R3JheTogYm9vbGVhblxuXHQpOiBQcm9taXNlPHBhbGV0dGUuUGFsZXR0ZT4ge1xuXHRcdGNvbnN0IGN1cnJlbnRDb21wbGVtZW50YXJ5UGFsZXR0ZUlEID1cblx0XHRcdGF3YWl0IGRhdGFiYXNlLmdldEN1cnJlbnRQYWxldHRlSUQoKTtcblxuXHRcdGlmIChudW1Cb3hlcyA8IDIpIHtcblx0XHRcdGNvbnNvbGUud2FybignQ29tcGxlbWVudGFyeSBwYWxldHRlIHJlcXVpcmVzIGF0IGxlYXN0IDIgc3dhdGNoZXMuJyk7XG5cblx0XHRcdHJldHVybiBwYWxldHRlVXRpbHMuY3JlYXRlUGFsZXR0ZU9iamVjdChcblx0XHRcdFx0J2NvbXBsZW1lbnRhcnknLFxuXHRcdFx0XHRbXSxcblx0XHRcdFx0ZGVmYXVsdHMuaHNsLFxuXHRcdFx0XHQwLFxuXHRcdFx0XHRjdXJyZW50Q29tcGxlbWVudGFyeVBhbGV0dGVJRCxcblx0XHRcdFx0ZW5hYmxlQWxwaGEsXG5cdFx0XHRcdGxpbWl0QnJpZ2h0LFxuXHRcdFx0XHRsaW1pdERhcmssXG5cdFx0XHRcdGxpbWl0R3JheVxuXHRcdFx0KTtcblx0XHR9XG5cblx0XHRjb25zdCBiYXNlQ29sb3IgPSBnZXRCYXNlQ29sb3IoY3VzdG9tQ29sb3IsIGVuYWJsZUFscGhhKTtcblx0XHRjb25zdCBjb21wbGVtZW50YXJ5SHVlID0gKGJhc2VDb2xvci52YWx1ZS5odWUgKyAxODApICUgMzYwO1xuXHRcdGNvbnN0IGh1ZXMgPSBBcnJheS5mcm9tKFxuXHRcdFx0eyBsZW5ndGg6IG51bUJveGVzIC0gMSB9LFxuXHRcdFx0KF8sIF9pKSA9PlxuXHRcdFx0XHQoY29tcGxlbWVudGFyeUh1ZSArXG5cdFx0XHRcdFx0KE1hdGgucmFuZG9tKCkgKiBjb25maWcuY29tcGxlbWVudGFyeUh1ZVNoaWZ0UmFuZ2UgLVxuXHRcdFx0XHRcdFx0Y29uZmlnLmNvbXBsZW1lbnRhcnlIdWVTaGlmdFJhbmdlIC8gMikpICVcblx0XHRcdFx0MzYwXG5cdFx0KTtcblx0XHRjb25zdCBwYWxldHRlSXRlbXM6IHBhbGV0dGUuUGFsZXR0ZUl0ZW1bXSA9IGh1ZXMubWFwKChodWUsIGkpID0+IHtcblx0XHRcdGNvbnN0IHNhdHVyYXRpb24gPSBNYXRoLm1pbihcblx0XHRcdFx0MTAwLFxuXHRcdFx0XHRNYXRoLm1heChcblx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdGJhc2VDb2xvci52YWx1ZS5zYXR1cmF0aW9uICsgKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMTVcblx0XHRcdFx0KVxuXHRcdFx0KTtcblx0XHRcdGNvbnN0IGxpZ2h0bmVzcyA9IE1hdGgubWluKFxuXHRcdFx0XHQxMDAsXG5cdFx0XHRcdE1hdGgubWF4KFxuXHRcdFx0XHRcdDAsXG5cdFx0XHRcdFx0YmFzZUNvbG9yLnZhbHVlLmxpZ2h0bmVzcyArIChpICUgMiA9PT0gMCA/IC0xMCA6IDEwKVxuXHRcdFx0XHQpXG5cdFx0XHQpO1xuXHRcdFx0Y29uc3QgYWxwaGEgPSBlbmFibGVBbHBoYSA/IE1hdGgucmFuZG9tKCkgOiAxO1xuXHRcdFx0Y29uc3QgbmV3Q29sb3I6IGNvbG9ycy5IU0wgPSB7XG5cdFx0XHRcdHZhbHVlOiB7IGh1ZSwgc2F0dXJhdGlvbiwgbGlnaHRuZXNzLCBhbHBoYSB9LFxuXHRcdFx0XHRmb3JtYXQ6ICdoc2wnXG5cdFx0XHR9O1xuXG5cdFx0XHRyZXR1cm4gY3JlYXRlUGFsZXR0ZUl0ZW0obmV3Q29sb3IsIGVuYWJsZUFscGhhKTtcblx0XHR9KTtcblxuXHRcdHBhbGV0dGVJdGVtcy51bnNoaWZ0KGNyZWF0ZVBhbGV0dGVJdGVtKGJhc2VDb2xvciwgZW5hYmxlQWxwaGEpKTtcblxuXHRcdHJldHVybiBhd2FpdCBkYXRhYmFzZS5zYXZlUGFsZXR0ZVRvREIoXG5cdFx0XHQnY29tcGxlbWVudGFyeScsXG5cdFx0XHRwYWxldHRlSXRlbXMsXG5cdFx0XHRiYXNlQ29sb3IsXG5cdFx0XHRudW1Cb3hlcyxcblx0XHRcdGVuYWJsZUFscGhhLFxuXHRcdFx0bGltaXRCcmlnaHQsXG5cdFx0XHRsaW1pdERhcmssXG5cdFx0XHRsaW1pdEdyYXlcblx0XHQpO1xuXHR9XG5cblx0YXN5bmMgZnVuY3Rpb24gZGlhZGljKFxuXHRcdG51bUJveGVzOiBudW1iZXIsXG5cdFx0Y3VzdG9tQ29sb3I6IGNvbG9ycy5IU0wgfCBudWxsLFxuXHRcdGVuYWJsZUFscGhhOiBib29sZWFuLFxuXHRcdGxpbWl0QnJpZ2h0OiBib29sZWFuLFxuXHRcdGxpbWl0RGFyazogYm9vbGVhbixcblx0XHRsaW1pdEdyYXk6IGJvb2xlYW5cblx0KTogUHJvbWlzZTxwYWxldHRlLlBhbGV0dGU+IHtcblx0XHRjb25zdCBjdXJyZW50RGlhZGljUGFsZXR0ZUlEID0gYXdhaXQgZGF0YWJhc2UuZ2V0Q3VycmVudFBhbGV0dGVJRCgpO1xuXG5cdFx0aWYgKG51bUJveGVzIDwgMikge1xuXHRcdFx0Y29uc29sZS53YXJuKCdEaWFkaWMgcGFsZXR0ZSByZXF1aXJlcyBhdCBsZWFzdCAyIHN3YXRjaGVzLicpO1xuXG5cdFx0XHRyZXR1cm4gcGFsZXR0ZVV0aWxzLmNyZWF0ZVBhbGV0dGVPYmplY3QoXG5cdFx0XHRcdCdkaWFkaWMnLFxuXHRcdFx0XHRbXSxcblx0XHRcdFx0ZGVmYXVsdHMuaHNsLFxuXHRcdFx0XHQwLFxuXHRcdFx0XHRjdXJyZW50RGlhZGljUGFsZXR0ZUlELFxuXHRcdFx0XHRlbmFibGVBbHBoYSxcblx0XHRcdFx0bGltaXRCcmlnaHQsXG5cdFx0XHRcdGxpbWl0RGFyayxcblx0XHRcdFx0bGltaXRHcmF5XG5cdFx0XHQpO1xuXHRcdH1cblxuXHRcdGNvbnN0IGJhc2VDb2xvciA9IGdldEJhc2VDb2xvcihjdXN0b21Db2xvciwgZW5hYmxlQWxwaGEpO1xuXHRcdGNvbnN0IGh1ZXMgPSBnZW5IdWVzLmRpYWRpYyhiYXNlQ29sb3IudmFsdWUuaHVlKTtcblx0XHRjb25zdCBwYWxldHRlSXRlbXMgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiBudW1Cb3hlcyB9LCAoXywgaSkgPT4ge1xuXHRcdFx0Y29uc3Qgc2F0dXJhdGlvblNoaWZ0ID1cblx0XHRcdFx0TWF0aC5yYW5kb20oKSAqIGNvbmZpZy5kaWFkaWNTYXR1cmF0aW9uU2hpZnRSYW5nZSAtXG5cdFx0XHRcdGNvbmZpZy5kaWFkaWNTYXR1cmF0aW9uU2hpZnRSYW5nZSAvIDI7XG5cdFx0XHRjb25zdCBsaWdodG5lc3NTaGlmdCA9XG5cdFx0XHRcdE1hdGgucmFuZG9tKCkgKiBjb25maWcuZGlhZGljTGlnaHRuZXNzU2hpZnRSYW5nZSAtXG5cdFx0XHRcdGNvbmZpZy5kaWFkaWNMaWdodG5lc3NTaGlmdFJhbmdlIC8gMjtcblx0XHRcdGNvbnN0IG5ld0NvbG9yOiBjb2xvcnMuSFNMID0ge1xuXHRcdFx0XHR2YWx1ZToge1xuXHRcdFx0XHRcdGh1ZTogaHVlc1tpICUgaHVlcy5sZW5ndGhdLFxuXHRcdFx0XHRcdHNhdHVyYXRpb246IE1hdGgubWluKFxuXHRcdFx0XHRcdFx0MTAwLFxuXHRcdFx0XHRcdFx0TWF0aC5tYXgoXG5cdFx0XHRcdFx0XHRcdDAsXG5cdFx0XHRcdFx0XHRcdGJhc2VDb2xvci52YWx1ZS5zYXR1cmF0aW9uICsgc2F0dXJhdGlvblNoaWZ0XG5cdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRsaWdodG5lc3M6IE1hdGgubWluKFxuXHRcdFx0XHRcdFx0MTAwLFxuXHRcdFx0XHRcdFx0TWF0aC5tYXgoMCwgYmFzZUNvbG9yLnZhbHVlLmxpZ2h0bmVzcyArIGxpZ2h0bmVzc1NoaWZ0KVxuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0YWxwaGE6IGVuYWJsZUFscGhhID8gTWF0aC5yYW5kb20oKSA6IDFcblx0XHRcdFx0fSxcblx0XHRcdFx0Zm9ybWF0OiAnaHNsJ1xuXHRcdFx0fTtcblxuXHRcdFx0cmV0dXJuIGNyZWF0ZVBhbGV0dGVJdGVtKG5ld0NvbG9yLCBlbmFibGVBbHBoYSk7XG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gYXdhaXQgZGF0YWJhc2Uuc2F2ZVBhbGV0dGVUb0RCKFxuXHRcdFx0J2RpYWRpYycsXG5cdFx0XHRwYWxldHRlSXRlbXMsXG5cdFx0XHRiYXNlQ29sb3IsXG5cdFx0XHRudW1Cb3hlcyxcblx0XHRcdGVuYWJsZUFscGhhLFxuXHRcdFx0bGltaXRCcmlnaHQsXG5cdFx0XHRsaW1pdERhcmssXG5cdFx0XHRsaW1pdEdyYXlcblx0XHQpO1xuXHR9XG5cblx0YXN5bmMgZnVuY3Rpb24gaGV4YWRpYyhcblx0XHRudW1Cb3hlczogbnVtYmVyLFxuXHRcdGN1c3RvbUNvbG9yOiBjb2xvcnMuSFNMIHwgbnVsbCxcblx0XHRlbmFibGVBbHBoYTogYm9vbGVhbixcblx0XHRsaW1pdEJyaWdodDogYm9vbGVhbixcblx0XHRsaW1pdERhcms6IGJvb2xlYW4sXG5cdFx0bGltaXRHcmF5OiBib29sZWFuXG5cdCk6IFByb21pc2U8cGFsZXR0ZS5QYWxldHRlPiB7XG5cdFx0Y29uc3QgY3VycmVudEhleGFkaWNQYWxldHRlSUQgPSBhd2FpdCBkYXRhYmFzZS5nZXRDdXJyZW50UGFsZXR0ZUlEKCk7XG5cblx0XHRpZiAobnVtQm94ZXMgPCA2KSB7XG5cdFx0XHRjb25zb2xlLndhcm4oJ0hleGFkaWMgcGFsZXR0ZSByZXF1aXJlcyBhdCBsZWFzdCA2IHN3YXRjaGVzLicpO1xuXG5cdFx0XHRyZXR1cm4gcGFsZXR0ZVV0aWxzLmNyZWF0ZVBhbGV0dGVPYmplY3QoXG5cdFx0XHRcdCdoZXhhZGljJyxcblx0XHRcdFx0W10sXG5cdFx0XHRcdGRlZmF1bHRzLmhzbCxcblx0XHRcdFx0MCxcblx0XHRcdFx0Y3VycmVudEhleGFkaWNQYWxldHRlSUQsXG5cdFx0XHRcdGVuYWJsZUFscGhhLFxuXHRcdFx0XHRsaW1pdEJyaWdodCxcblx0XHRcdFx0bGltaXREYXJrLFxuXHRcdFx0XHRsaW1pdEdyYXlcblx0XHRcdCk7XG5cdFx0fVxuXG5cdFx0Y29uc3QgYmFzZUNvbG9yID0gZ2V0QmFzZUNvbG9yKGN1c3RvbUNvbG9yLCBlbmFibGVBbHBoYSk7XG5cdFx0Y29uc3QgaHVlcyA9IGdlbkh1ZXMuaGV4YWRpYyhiYXNlQ29sb3IpO1xuXHRcdGNvbnN0IHBhbGV0dGVJdGVtcyA9IGh1ZXMubWFwKChodWUsIF9pKSA9PiB7XG5cdFx0XHRjb25zdCBzYXR1cmF0aW9uU2hpZnQgPVxuXHRcdFx0XHRNYXRoLnJhbmRvbSgpICogY29uZmlnLmhleGFkaWNTYXR1cmF0aW9uU2hpZnRSYW5nZSAtXG5cdFx0XHRcdGNvbmZpZy5oZXhhZGljU2F0dXJhdGlvblNoaWZ0UmFuZ2UgLyAyO1xuXHRcdFx0Y29uc3QgbGlnaHRuZXNzU2hpZnQgPVxuXHRcdFx0XHRNYXRoLnJhbmRvbSgpICogY29uZmlnLmhleGFkaWNMaWdodG5lc3NTaGlmdFJhbmdlIC1cblx0XHRcdFx0Y29uZmlnLmhleGFkaWNMaWdodG5lc3NTaGlmdFJhbmdlIC8gMjtcblx0XHRcdGNvbnN0IG5ld0NvbG9yOiBjb2xvcnMuSFNMID0ge1xuXHRcdFx0XHR2YWx1ZToge1xuXHRcdFx0XHRcdGh1ZSxcblx0XHRcdFx0XHRzYXR1cmF0aW9uOiBNYXRoLm1pbihcblx0XHRcdFx0XHRcdDEwMCxcblx0XHRcdFx0XHRcdE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRiYXNlQ29sb3IudmFsdWUuc2F0dXJhdGlvbiArIHNhdHVyYXRpb25TaGlmdFxuXHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0bGlnaHRuZXNzOiBNYXRoLm1pbihcblx0XHRcdFx0XHRcdDEwMCxcblx0XHRcdFx0XHRcdE1hdGgubWF4KDAsIGJhc2VDb2xvci52YWx1ZS5saWdodG5lc3MgKyBsaWdodG5lc3NTaGlmdClcblx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdGFscGhhOiBlbmFibGVBbHBoYSA/IE1hdGgucmFuZG9tKCkgOiAxXG5cdFx0XHRcdH0sXG5cdFx0XHRcdGZvcm1hdDogJ2hzbCdcblx0XHRcdH07XG5cblx0XHRcdHJldHVybiBjcmVhdGVQYWxldHRlSXRlbShuZXdDb2xvciwgZW5hYmxlQWxwaGEpO1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIGF3YWl0IGRhdGFiYXNlLnNhdmVQYWxldHRlVG9EQihcblx0XHRcdCdoZXhhZGljJyxcblx0XHRcdHBhbGV0dGVJdGVtcyxcblx0XHRcdGJhc2VDb2xvcixcblx0XHRcdG51bUJveGVzLFxuXHRcdFx0ZW5hYmxlQWxwaGEsXG5cdFx0XHRsaW1pdEJyaWdodCxcblx0XHRcdGxpbWl0RGFyayxcblx0XHRcdGxpbWl0R3JheVxuXHRcdCk7XG5cdH1cblxuXHRhc3luYyBmdW5jdGlvbiBtb25vY2hyb21hdGljKFxuXHRcdG51bUJveGVzOiBudW1iZXIsXG5cdFx0Y3VzdG9tQ29sb3I6IGNvbG9ycy5IU0wgfCBudWxsLFxuXHRcdGVuYWJsZUFscGhhOiBib29sZWFuLFxuXHRcdGxpbWl0QnJpZ2h0OiBib29sZWFuLFxuXHRcdGxpbWl0RGFyazogYm9vbGVhbixcblx0XHRsaW1pdEdyYXk6IGJvb2xlYW5cblx0KTogUHJvbWlzZTxwYWxldHRlLlBhbGV0dGU+IHtcblx0XHRjb25zdCBjdXJyZW50TW9ub2Nocm9tYXRpY1BhbGV0dGVJRCA9XG5cdFx0XHRhd2FpdCBkYXRhYmFzZS5nZXRDdXJyZW50UGFsZXR0ZUlEKCk7XG5cblx0XHRpZiAobnVtQm94ZXMgPCAyKSB7XG5cdFx0XHRjb25zb2xlLndhcm4oJ01vbm9jaHJvbWF0aWMgcGFsZXR0ZSByZXF1aXJlcyBhdCBsZWFzdCAyIHN3YXRjaGVzLicpO1xuXG5cdFx0XHRyZXR1cm4gcGFsZXR0ZVV0aWxzLmNyZWF0ZVBhbGV0dGVPYmplY3QoXG5cdFx0XHRcdCdtb25vY2hyb21hdGljJyxcblx0XHRcdFx0W10sXG5cdFx0XHRcdGRlZmF1bHRzLmhzbCxcblx0XHRcdFx0MCxcblx0XHRcdFx0Y3VycmVudE1vbm9jaHJvbWF0aWNQYWxldHRlSUQsXG5cdFx0XHRcdGVuYWJsZUFscGhhLFxuXHRcdFx0XHRsaW1pdEJyaWdodCxcblx0XHRcdFx0bGltaXREYXJrLFxuXHRcdFx0XHRsaW1pdEdyYXlcblx0XHRcdCk7XG5cdFx0fVxuXG5cdFx0Y29uc3QgYmFzZUNvbG9yID0gZ2V0QmFzZUNvbG9yKGN1c3RvbUNvbG9yLCBlbmFibGVBbHBoYSk7XG5cdFx0Y29uc3QgcGFsZXR0ZUl0ZW1zOiBwYWxldHRlLlBhbGV0dGVJdGVtW10gPSBbXG5cdFx0XHRjcmVhdGVQYWxldHRlSXRlbShiYXNlQ29sb3IsIGVuYWJsZUFscGhhKVxuXHRcdF07XG5cblx0XHRmb3IgKGxldCBpID0gMTsgaSA8IG51bUJveGVzOyBpKyspIHtcblx0XHRcdGNvbnN0IGh1ZVNoaWZ0ID0gTWF0aC5yYW5kb20oKSAqIDEwIC0gNTtcblx0XHRcdGNvbnN0IG5ld0NvbG9yID0gZ2VuQWxsQ29sb3JWYWx1ZXMoe1xuXHRcdFx0XHR2YWx1ZToge1xuXHRcdFx0XHRcdGh1ZTogKGJhc2VDb2xvci52YWx1ZS5odWUgKyBodWVTaGlmdCArIDM2MCkgJSAzNjAsXG5cdFx0XHRcdFx0c2F0dXJhdGlvbjogTWF0aC5taW4oXG5cdFx0XHRcdFx0XHQxMDAsXG5cdFx0XHRcdFx0XHRNYXRoLm1heCgwLCBiYXNlQ29sb3IudmFsdWUuc2F0dXJhdGlvbiAtIGkgKiA1KVxuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0bGlnaHRuZXNzOiBNYXRoLm1pbihcblx0XHRcdFx0XHRcdDEwMCxcblx0XHRcdFx0XHRcdE1hdGgubWF4KDAsIGJhc2VDb2xvci52YWx1ZS5saWdodG5lc3MgKyAoaSAqIDEwIC0gMjApKVxuXHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0YWxwaGE6IGVuYWJsZUFscGhhID8gTWF0aC5yYW5kb20oKSA6IDFcblx0XHRcdFx0fSxcblx0XHRcdFx0Zm9ybWF0OiAnaHNsJ1xuXHRcdFx0fSkuaHNsO1xuXG5cdFx0XHRpZiAobmV3Q29sb3IpIHtcblx0XHRcdFx0cGFsZXR0ZUl0ZW1zLnB1c2goY3JlYXRlUGFsZXR0ZUl0ZW0obmV3Q29sb3IsIGVuYWJsZUFscGhhKSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGF3YWl0IGRhdGFiYXNlLnNhdmVQYWxldHRlVG9EQihcblx0XHRcdCdtb25vY2hyb21hdGljJyxcblx0XHRcdHBhbGV0dGVJdGVtcyxcblx0XHRcdGJhc2VDb2xvcixcblx0XHRcdG51bUJveGVzLFxuXHRcdFx0ZW5hYmxlQWxwaGEsXG5cdFx0XHRsaW1pdEJyaWdodCxcblx0XHRcdGxpbWl0RGFyayxcblx0XHRcdGxpbWl0R3JheVxuXHRcdCk7XG5cdH1cblxuXHRhc3luYyBmdW5jdGlvbiByYW5kb20oXG5cdFx0bnVtQm94ZXM6IG51bWJlcixcblx0XHRjdXN0b21Db2xvcjogY29sb3JzLkhTTCB8IG51bGwsXG5cdFx0ZW5hYmxlQWxwaGE6IGJvb2xlYW4sXG5cdFx0bGltaXRCcmlnaHQ6IGJvb2xlYW4sXG5cdFx0bGltaXREYXJrOiBib29sZWFuLFxuXHRcdGxpbWl0R3JheTogYm9vbGVhblxuXHQpOiBQcm9taXNlPHBhbGV0dGUuUGFsZXR0ZT4ge1xuXHRcdGNvbnN0IGJhc2VDb2xvciA9IGdldEJhc2VDb2xvcihjdXN0b21Db2xvciwgZW5hYmxlQWxwaGEpO1xuXHRcdGNvbnN0IHBhbGV0dGVJdGVtczogcGFsZXR0ZS5QYWxldHRlSXRlbVtdID0gW1xuXHRcdFx0Y3JlYXRlUGFsZXR0ZUl0ZW0oYmFzZUNvbG9yLCBlbmFibGVBbHBoYSlcblx0XHRdO1xuXG5cdFx0Zm9yIChsZXQgaSA9IDE7IGkgPCBudW1Cb3hlczsgaSsrKSB7XG5cdFx0XHRjb25zdCByYW5kb21Db2xvciA9IHJhbmRvbUhTTChlbmFibGVBbHBoYSk7XG5cblx0XHRcdHBhbGV0dGVJdGVtcy5wdXNoKGNyZWF0ZVBhbGV0dGVJdGVtKHJhbmRvbUNvbG9yLCBlbmFibGVBbHBoYSkpO1xuXG5cdFx0XHR1cGRhdGVDb2xvckJveChyYW5kb21Db2xvciwgaSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGF3YWl0IGRhdGFiYXNlLnNhdmVQYWxldHRlVG9EQihcblx0XHRcdCdyYW5kb20nLFxuXHRcdFx0cGFsZXR0ZUl0ZW1zLFxuXHRcdFx0YmFzZUNvbG9yLFxuXHRcdFx0bnVtQm94ZXMsXG5cdFx0XHRlbmFibGVBbHBoYSxcblx0XHRcdGxpbWl0QnJpZ2h0LFxuXHRcdFx0bGltaXREYXJrLFxuXHRcdFx0bGltaXRHcmF5XG5cdFx0KTtcblx0fVxuXG5cdGFzeW5jIGZ1bmN0aW9uIHNwbGl0Q29tcGxlbWVudGFyeShcblx0XHRudW1Cb3hlczogbnVtYmVyLFxuXHRcdGN1c3RvbUNvbG9yOiBjb2xvcnMuSFNMIHwgbnVsbCxcblx0XHRlbmFibGVBbHBoYTogYm9vbGVhbixcblx0XHRsaW1pdEJyaWdodDogYm9vbGVhbixcblx0XHRsaW1pdERhcms6IGJvb2xlYW4sXG5cdFx0bGltaXRHcmF5OiBib29sZWFuXG5cdCk6IFByb21pc2U8cGFsZXR0ZS5QYWxldHRlPiB7XG5cdFx0Y29uc3QgY3VycmVudFNwbGl0Q29tcGxlbWVudGFyeVBhbGV0dGVJRCA9XG5cdFx0XHRhd2FpdCBkYXRhYmFzZS5nZXRDdXJyZW50UGFsZXR0ZUlEKCk7XG5cblx0XHRpZiAobnVtQm94ZXMgPCAzKSB7XG5cdFx0XHRjb25zb2xlLndhcm4oXG5cdFx0XHRcdCdTcGxpdCBjb21wbGVtZW50YXJ5IHBhbGV0dGUgcmVxdWlyZXMgYXQgbGVhc3QgMyBzd2F0Y2hlcy4nXG5cdFx0XHQpO1xuXG5cdFx0XHRyZXR1cm4gcGFsZXR0ZVV0aWxzLmNyZWF0ZVBhbGV0dGVPYmplY3QoXG5cdFx0XHRcdCdzcGxpdENvbXBsZW1lbnRhcnknLFxuXHRcdFx0XHRbXSxcblx0XHRcdFx0ZGVmYXVsdHMuaHNsLFxuXHRcdFx0XHQwLFxuXHRcdFx0XHRjdXJyZW50U3BsaXRDb21wbGVtZW50YXJ5UGFsZXR0ZUlELFxuXHRcdFx0XHRlbmFibGVBbHBoYSxcblx0XHRcdFx0bGltaXRCcmlnaHQsXG5cdFx0XHRcdGxpbWl0RGFyayxcblx0XHRcdFx0bGltaXRHcmF5XG5cdFx0XHQpO1xuXHRcdH1cblxuXHRcdGNvbnN0IGJhc2VDb2xvciA9IGdldEJhc2VDb2xvcihjdXN0b21Db2xvciwgZW5hYmxlQWxwaGEpO1xuXHRcdGNvbnN0IFtodWUxLCBodWUyXSA9IGdlbkh1ZXMuc3BsaXRDb21wbGVtZW50YXJ5KGJhc2VDb2xvci52YWx1ZS5odWUpO1xuXHRcdGNvbnN0IHBhbGV0dGVJdGVtczogcGFsZXR0ZS5QYWxldHRlSXRlbVtdID0gW1xuXHRcdFx0Y3JlYXRlUGFsZXR0ZUl0ZW0oYmFzZUNvbG9yLCBlbmFibGVBbHBoYSksXG5cdFx0XHQuLi5baHVlMSwgaHVlMl0ubWFwKChodWUsIGluZGV4KSA9PiB7XG5cdFx0XHRcdGNvbnN0IGFkanVzdGVkSFNMOiBjb2xvcnMuSFNMID0ge1xuXHRcdFx0XHRcdHZhbHVlOiB7XG5cdFx0XHRcdFx0XHRodWUsXG5cdFx0XHRcdFx0XHRzYXR1cmF0aW9uOiBNYXRoLm1heChcblx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0TWF0aC5taW4oXG5cdFx0XHRcdFx0XHRcdFx0YmFzZUNvbG9yLnZhbHVlLnNhdHVyYXRpb24gK1xuXHRcdFx0XHRcdFx0XHRcdFx0KGluZGV4ID09PSAwXG5cdFx0XHRcdFx0XHRcdFx0XHRcdD8gLWNvbmZpZy5zcGxpdENvbXBsZW1lbnRhcnlTYXR1cmF0aW9uU2hpZnRSYW5nZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ6IGNvbmZpZy5zcGxpdENvbXBsZW1lbnRhcnlTYXR1cmF0aW9uU2hpZnRSYW5nZSksXG5cdFx0XHRcdFx0XHRcdFx0MTAwXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRsaWdodG5lc3M6IE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRNYXRoLm1pbihcblx0XHRcdFx0XHRcdFx0XHRiYXNlQ29sb3IudmFsdWUubGlnaHRuZXNzICtcblx0XHRcdFx0XHRcdFx0XHRcdChpbmRleCA9PT0gMFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ/IC1jb25maWcuc3BsaXRDb21wbGVtZW50YXJ5TGlnaHRuZXNzU2hpZnRSYW5nZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ6IGNvbmZpZy5zcGxpdENvbXBsZW1lbnRhcnlMaWdodG5lc3NTaGlmdFJhbmdlKSxcblx0XHRcdFx0XHRcdFx0XHQxMDBcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdGFscGhhOiBlbmFibGVBbHBoYSA/IE1hdGgucmFuZG9tKCkgOiAxXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRmb3JtYXQ6ICdoc2wnXG5cdFx0XHRcdH07XG5cdFx0XHRcdGNvbnN0IGFkanVzdGVkQ29sb3IgPSBnZW5BbGxDb2xvclZhbHVlcyhcblx0XHRcdFx0XHRhZGp1c3RlZEhTTFxuXHRcdFx0XHQpIGFzIGNvbG9ycy5IU0w7XG5cblx0XHRcdFx0cmV0dXJuIGNyZWF0ZVBhbGV0dGVJdGVtKGFkanVzdGVkQ29sb3IsIGVuYWJsZUFscGhhKTtcblx0XHRcdH0pXG5cdFx0XTtcblxuXHRcdHJldHVybiBhd2FpdCBkYXRhYmFzZS5zYXZlUGFsZXR0ZVRvREIoXG5cdFx0XHQnc3BsaXRDb21wbGVtZW50YXJ5Jyxcblx0XHRcdHBhbGV0dGVJdGVtcyxcblx0XHRcdGJhc2VDb2xvcixcblx0XHRcdG51bUJveGVzLFxuXHRcdFx0ZW5hYmxlQWxwaGEsXG5cdFx0XHRsaW1pdEJyaWdodCxcblx0XHRcdGxpbWl0RGFyayxcblx0XHRcdGxpbWl0R3JheVxuXHRcdCk7XG5cdH1cblxuXHRhc3luYyBmdW5jdGlvbiB0ZXRyYWRpYyhcblx0XHRudW1Cb3hlczogbnVtYmVyLFxuXHRcdGN1c3RvbUNvbG9yOiBjb2xvcnMuSFNMIHwgbnVsbCxcblx0XHRlbmFibGVBbHBoYTogYm9vbGVhbixcblx0XHRsaW1pdEJyaWdodDogYm9vbGVhbixcblx0XHRsaW1pdERhcms6IGJvb2xlYW4sXG5cdFx0bGltaXRHcmF5OiBib29sZWFuXG5cdCk6IFByb21pc2U8cGFsZXR0ZS5QYWxldHRlPiB7XG5cdFx0Y29uc3QgY3VycmVudFRldHJhZGljUGFsZXR0ZUlEID0gYXdhaXQgZGF0YWJhc2UuZ2V0Q3VycmVudFBhbGV0dGVJRCgpO1xuXG5cdFx0aWYgKG51bUJveGVzIDwgNCkge1xuXHRcdFx0Y29uc29sZS53YXJuKCdUZXRyYWRpYyBwYWxldHRlIHJlcXVpcmVzIGF0IGxlYXN0IDQgc3dhdGNoZXMuJyk7XG5cblx0XHRcdHJldHVybiBwYWxldHRlVXRpbHMuY3JlYXRlUGFsZXR0ZU9iamVjdChcblx0XHRcdFx0J3RldHJhZGljJyxcblx0XHRcdFx0W10sXG5cdFx0XHRcdGRlZmF1bHRzLmhzbCxcblx0XHRcdFx0MCxcblx0XHRcdFx0Y3VycmVudFRldHJhZGljUGFsZXR0ZUlELFxuXHRcdFx0XHRlbmFibGVBbHBoYSxcblx0XHRcdFx0bGltaXRCcmlnaHQsXG5cdFx0XHRcdGxpbWl0RGFyayxcblx0XHRcdFx0bGltaXRHcmF5XG5cdFx0XHQpO1xuXHRcdH1cblxuXHRcdGNvbnN0IGJhc2VDb2xvciA9IGdldEJhc2VDb2xvcihjdXN0b21Db2xvciwgZW5hYmxlQWxwaGEpO1xuXHRcdGNvbnN0IHRldHJhZGljSHVlcyA9IGdlbkh1ZXMudGV0cmFkaWMoYmFzZUNvbG9yLnZhbHVlLmh1ZSk7XG5cdFx0Y29uc3QgcGFsZXR0ZUl0ZW1zOiBwYWxldHRlLlBhbGV0dGVJdGVtW10gPSBbXG5cdFx0XHRjcmVhdGVQYWxldHRlSXRlbShiYXNlQ29sb3IsIGVuYWJsZUFscGhhKSxcblx0XHRcdC4uLnRldHJhZGljSHVlcy5tYXAoKGh1ZSwgaW5kZXgpID0+IHtcblx0XHRcdFx0Y29uc3QgYWRqdXN0ZWRIU0w6IGNvbG9ycy5IU0wgPSB7XG5cdFx0XHRcdFx0dmFsdWU6IHtcblx0XHRcdFx0XHRcdGh1ZSxcblx0XHRcdFx0XHRcdHNhdHVyYXRpb246IE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRNYXRoLm1pbihcblx0XHRcdFx0XHRcdFx0XHRiYXNlQ29sb3IudmFsdWUuc2F0dXJhdGlvbiArXG5cdFx0XHRcdFx0XHRcdFx0XHQoaW5kZXggJSAyID09PSAwXG5cdFx0XHRcdFx0XHRcdFx0XHRcdD8gLWNvbmZpZy50ZXRyYWRpY1NhdHVyYXRpb25TaGlmdFJhbmdlXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDogY29uZmlnLnRldHJhZGljU2F0dXJhdGlvblNoaWZ0UmFuZ2UpLFxuXHRcdFx0XHRcdFx0XHRcdDEwMFxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0bGlnaHRuZXNzOiBNYXRoLm1heChcblx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0TWF0aC5taW4oXG5cdFx0XHRcdFx0XHRcdFx0YmFzZUNvbG9yLnZhbHVlLmxpZ2h0bmVzcyArXG5cdFx0XHRcdFx0XHRcdFx0XHQoaW5kZXggJSAyID09PSAwXG5cdFx0XHRcdFx0XHRcdFx0XHRcdD8gLWNvbmZpZy50ZXRyYWRpY0xpZ2h0bmVzc1NoaWZ0UmFuZ2Vcblx0XHRcdFx0XHRcdFx0XHRcdFx0OiBjb25maWcudGV0cmFkaWNMaWdodG5lc3NTaGlmdFJhbmdlKSxcblx0XHRcdFx0XHRcdFx0XHQxMDBcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdGFscGhhOiBlbmFibGVBbHBoYSA/IE1hdGgucmFuZG9tKCkgOiAxXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRmb3JtYXQ6ICdoc2wnXG5cdFx0XHRcdH07XG5cdFx0XHRcdGNvbnN0IGFkanVzdGVkQ29sb3IgPSBnZW5BbGxDb2xvclZhbHVlcyhhZGp1c3RlZEhTTCk7XG5cblx0XHRcdFx0cmV0dXJuIGNyZWF0ZVBhbGV0dGVJdGVtKFxuXHRcdFx0XHRcdGFkanVzdGVkQ29sb3IuaHNsIGFzIGNvbG9ycy5IU0wsXG5cdFx0XHRcdFx0ZW5hYmxlQWxwaGFcblx0XHRcdFx0KTtcblx0XHRcdH0pXG5cdFx0XTtcblxuXHRcdHJldHVybiBhd2FpdCBkYXRhYmFzZS5zYXZlUGFsZXR0ZVRvREIoXG5cdFx0XHQndGV0cmFkaWMnLFxuXHRcdFx0cGFsZXR0ZUl0ZW1zLFxuXHRcdFx0YmFzZUNvbG9yLFxuXHRcdFx0bnVtQm94ZXMsXG5cdFx0XHRlbmFibGVBbHBoYSxcblx0XHRcdGxpbWl0QnJpZ2h0LFxuXHRcdFx0bGltaXREYXJrLFxuXHRcdFx0bGltaXRHcmF5XG5cdFx0KTtcblx0fVxuXG5cdGFzeW5jIGZ1bmN0aW9uIHRyaWFkaWMoXG5cdFx0bnVtQm94ZXM6IG51bWJlcixcblx0XHRjdXN0b21Db2xvcjogY29sb3JzLkhTTCB8IG51bGwsXG5cdFx0ZW5hYmxlQWxwaGE6IGJvb2xlYW4sXG5cdFx0bGltaXRCcmlnaHQ6IGJvb2xlYW4sXG5cdFx0bGltaXREYXJrOiBib29sZWFuLFxuXHRcdGxpbWl0R3JheTogYm9vbGVhblxuXHQpOiBQcm9taXNlPHBhbGV0dGUuUGFsZXR0ZT4ge1xuXHRcdGNvbnN0IGN1cnJlbnRUcmlhZGljUGFsZXR0ZUlEID0gYXdhaXQgZGF0YWJhc2UuZ2V0Q3VycmVudFBhbGV0dGVJRCgpO1xuXG5cdFx0aWYgKG51bUJveGVzIDwgMykge1xuXHRcdFx0Y29uc29sZS53YXJuKCdUcmlhZGljIHBhbGV0dGUgcmVxdWlyZXMgYXQgbGVhc3QgMyBzd2F0Y2hlcy4nKTtcblxuXHRcdFx0cmV0dXJuIHBhbGV0dGVVdGlscy5jcmVhdGVQYWxldHRlT2JqZWN0KFxuXHRcdFx0XHQndHJpYWRpYycsXG5cdFx0XHRcdFtdLFxuXHRcdFx0XHRkZWZhdWx0cy5oc2wsXG5cdFx0XHRcdDAsXG5cdFx0XHRcdGN1cnJlbnRUcmlhZGljUGFsZXR0ZUlELFxuXHRcdFx0XHRlbmFibGVBbHBoYSxcblx0XHRcdFx0bGltaXRCcmlnaHQsXG5cdFx0XHRcdGxpbWl0RGFyayxcblx0XHRcdFx0bGltaXRHcmF5XG5cdFx0XHQpO1xuXHRcdH1cblxuXHRcdGNvbnN0IGJhc2VDb2xvciA9IGdldEJhc2VDb2xvcihjdXN0b21Db2xvciwgZW5hYmxlQWxwaGEpO1xuXHRcdGNvbnN0IGh1ZXMgPSBnZW5IdWVzLnRyaWFkaWMoYmFzZUNvbG9yLnZhbHVlLmh1ZSk7XG5cdFx0Y29uc3QgcGFsZXR0ZUl0ZW1zOiBwYWxldHRlLlBhbGV0dGVJdGVtW10gPSBbXG5cdFx0XHRjcmVhdGVQYWxldHRlSXRlbShiYXNlQ29sb3IsIGVuYWJsZUFscGhhKSxcblx0XHRcdC4uLmh1ZXMubWFwKChodWUsIGluZGV4KSA9PiB7XG5cdFx0XHRcdGNvbnN0IGFkanVzdGVkSFNMOiBjb2xvcnMuSFNMID0ge1xuXHRcdFx0XHRcdHZhbHVlOiB7XG5cdFx0XHRcdFx0XHRodWUsXG5cdFx0XHRcdFx0XHRzYXR1cmF0aW9uOiBNYXRoLm1heChcblx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0TWF0aC5taW4oXG5cdFx0XHRcdFx0XHRcdFx0YmFzZUNvbG9yLnZhbHVlLnNhdHVyYXRpb24gK1xuXHRcdFx0XHRcdFx0XHRcdFx0KGluZGV4ICUgMiA9PT0gMFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ/IC1jb25maWcudHJpYWRpY1NhdHVyYXRpb25TaGlmdFJhbmdlXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDogY29uZmlnLnRyaWFkaWNTYXR1cmF0aW9uU2hpZnRSYW5nZSksXG5cdFx0XHRcdFx0XHRcdFx0MTAwXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRsaWdodG5lc3M6IE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRNYXRoLm1pbihcblx0XHRcdFx0XHRcdFx0XHRiYXNlQ29sb3IudmFsdWUubGlnaHRuZXNzICtcblx0XHRcdFx0XHRcdFx0XHRcdChpbmRleCAlIDIgPT09IDBcblx0XHRcdFx0XHRcdFx0XHRcdFx0PyAtY29uZmlnLnRyaWFkaWNMaWdodG5lc3NTaGlmdFJhbmdlXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDogY29uZmlnLnRyaWFkaWNMaWdodG5lc3NTaGlmdFJhbmdlKSxcblx0XHRcdFx0XHRcdFx0XHQxMDBcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHRcdGFscGhhOiBlbmFibGVBbHBoYSA/IE1hdGgucmFuZG9tKCkgOiAxXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRmb3JtYXQ6ICdoc2wnXG5cdFx0XHRcdH07XG5cdFx0XHRcdGNvbnN0IGFkanVzdGVkQ29sb3IgPSBnZW5BbGxDb2xvclZhbHVlcyhhZGp1c3RlZEhTTCk7XG5cblx0XHRcdFx0cmV0dXJuIGNyZWF0ZVBhbGV0dGVJdGVtKFxuXHRcdFx0XHRcdGFkanVzdGVkQ29sb3IgYXMgY29sb3JzLkhTTCxcblx0XHRcdFx0XHRlbmFibGVBbHBoYVxuXHRcdFx0XHQpO1xuXHRcdFx0fSlcblx0XHRdO1xuXG5cdFx0cmV0dXJuIGF3YWl0IGRhdGFiYXNlLnNhdmVQYWxldHRlVG9EQihcblx0XHRcdCd0cmlhZGljJyxcblx0XHRcdHBhbGV0dGVJdGVtcyxcblx0XHRcdGJhc2VDb2xvcixcblx0XHRcdG51bUJveGVzLFxuXHRcdFx0ZW5hYmxlQWxwaGEsXG5cdFx0XHRsaW1pdEJyaWdodCxcblx0XHRcdGxpbWl0RGFyayxcblx0XHRcdGxpbWl0R3JheVxuXHRcdCk7XG5cdH1cblxuXHRyZXR1cm4ge1xuXHRcdGNyZWF0ZVBhbGV0dGVJdGVtLFxuXHRcdGdlbmVyYXRlUGFsZXR0ZUl0ZW1zLFxuXHRcdGdldEJhc2VDb2xvcixcblx0XHR1cGRhdGVDb2xvckJveCxcblx0XHRhbmFsb2dvdXMsXG5cdFx0Y29tcGxlbWVudGFyeSxcblx0XHRkaWFkaWMsXG5cdFx0aGV4YWRpYyxcblx0XHRtb25vY2hyb21hdGljLFxuXHRcdHJhbmRvbSxcblx0XHRzcGxpdENvbXBsZW1lbnRhcnksXG5cdFx0dGV0cmFkaWMsXG5cdFx0dHJpYWRpY1xuXHR9O1xufVxuIl19","import { database } from '../database/database.js';\nimport { domHelpers } from '../helpers/dom.js';\nimport { paletteUtils } from '../utils/palette-utils.js';\nasync function genPaletteBox(items, numBoxes, tableId) {\n    try {\n        const paletteRow = document.getElementById('palette-row');\n        if (!paletteRow) {\n            console.error('paletteRow is undefined.');\n            return;\n        }\n        paletteRow.innerHTML = '';\n        const fragment = document.createDocumentFragment();\n        items.slice(0, numBoxes).forEach((item, i) => {\n            const color = { value: item.colors.hsl, format: 'hsl' };\n            const { colorStripe } = domHelpers.makePaletteBox(color, i + 1);\n            fragment.appendChild(colorStripe);\n            paletteUtils.populateColorTextOutputBox(color, i + 1);\n        });\n        paletteRow.appendChild(fragment);\n        console.log('Palette boxes generated and rendered.');\n        await database.saveData('tables', tableId, { palette: items });\n    }\n    catch (error) {\n        console.error(`Error generating palette box: ${error}`);\n    }\n}\nexport const domUtils = {\n    genPaletteBox\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tLXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2RvbS11dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDaEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBSTVDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV0RCxLQUFLLFVBQVUsYUFBYSxDQUMzQixLQUE0QixFQUM1QixRQUFnQixFQUNoQixPQUFlO0lBRWYsSUFBSSxDQUFDO1FBQ0osTUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUxRCxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDakIsT0FBTyxDQUFDLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1lBRTFDLE9BQU87UUFDUixDQUFDO1FBRUQsVUFBVSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7UUFFMUIsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLHNCQUFzQixFQUFFLENBQUM7UUFFbkQsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzVDLE1BQU0sS0FBSyxHQUFlLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQztZQUNwRSxNQUFNLEVBQUUsV0FBVyxFQUFFLEdBQUcsVUFBVSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBRWhFLFFBQVEsQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7WUFFbEMsWUFBWSxDQUFDLDBCQUEwQixDQUFDLEtBQUssRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDdkQsQ0FBQyxDQUFDLENBQUM7UUFFSCxVQUFVLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRWpDLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUNBQXVDLENBQUMsQ0FBQztRQUVyRCxNQUFNLFFBQVEsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDO1FBQ2hCLE9BQU8sQ0FBQyxLQUFLLENBQUMsaUNBQWlDLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDekQsQ0FBQztBQUNGLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQXVCO0lBQzNDLGFBQWE7Q0FDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGF0YWJhc2UgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZSc7XG5pbXBvcnQgeyBkb21IZWxwZXJzIH0gZnJvbSAnLi4vaGVscGVycy9kb20nO1xuaW1wb3J0ICogYXMgY29sb3JzIGZyb20gJy4uL2luZGV4L2NvbG9ycyc7XG5pbXBvcnQgKiBhcyBmbk9iamVjdHMgZnJvbSAnLi4vaW5kZXgvZm4tb2JqZWN0cyc7XG5pbXBvcnQgKiBhcyBwYWxldHRlIGZyb20gJy4uL2luZGV4L3BhbGV0dGUnO1xuaW1wb3J0IHsgcGFsZXR0ZVV0aWxzIH0gZnJvbSAnLi4vdXRpbHMvcGFsZXR0ZS11dGlscyc7XG5cbmFzeW5jIGZ1bmN0aW9uIGdlblBhbGV0dGVCb3goXG5cdGl0ZW1zOiBwYWxldHRlLlBhbGV0dGVJdGVtW10sXG5cdG51bUJveGVzOiBudW1iZXIsXG5cdHRhYmxlSWQ6IHN0cmluZ1xuKTogUHJvbWlzZTx2b2lkPiB7XG5cdHRyeSB7XG5cdFx0Y29uc3QgcGFsZXR0ZVJvdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwYWxldHRlLXJvdycpO1xuXG5cdFx0aWYgKCFwYWxldHRlUm93KSB7XG5cdFx0XHRjb25zb2xlLmVycm9yKCdwYWxldHRlUm93IGlzIHVuZGVmaW5lZC4nKTtcblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHBhbGV0dGVSb3cuaW5uZXJIVE1MID0gJyc7XG5cblx0XHRjb25zdCBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcblxuXHRcdGl0ZW1zLnNsaWNlKDAsIG51bUJveGVzKS5mb3JFYWNoKChpdGVtLCBpKSA9PiB7XG5cdFx0XHRjb25zdCBjb2xvcjogY29sb3JzLkhTTCA9IHsgdmFsdWU6IGl0ZW0uY29sb3JzLmhzbCwgZm9ybWF0OiAnaHNsJyB9O1xuXHRcdFx0Y29uc3QgeyBjb2xvclN0cmlwZSB9ID0gZG9tSGVscGVycy5tYWtlUGFsZXR0ZUJveChjb2xvciwgaSArIDEpO1xuXG5cdFx0XHRmcmFnbWVudC5hcHBlbmRDaGlsZChjb2xvclN0cmlwZSk7XG5cblx0XHRcdHBhbGV0dGVVdGlscy5wb3B1bGF0ZUNvbG9yVGV4dE91dHB1dEJveChjb2xvciwgaSArIDEpO1xuXHRcdH0pO1xuXG5cdFx0cGFsZXR0ZVJvdy5hcHBlbmRDaGlsZChmcmFnbWVudCk7XG5cblx0XHRjb25zb2xlLmxvZygnUGFsZXR0ZSBib3hlcyBnZW5lcmF0ZWQgYW5kIHJlbmRlcmVkLicpO1xuXG5cdFx0YXdhaXQgZGF0YWJhc2Uuc2F2ZURhdGEoJ3RhYmxlcycsIHRhYmxlSWQsIHsgcGFsZXR0ZTogaXRlbXMgfSk7XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0Y29uc29sZS5lcnJvcihgRXJyb3IgZ2VuZXJhdGluZyBwYWxldHRlIGJveDogJHtlcnJvcn1gKTtcblx0fVxufVxuXG5leHBvcnQgY29uc3QgZG9tVXRpbHM6IGZuT2JqZWN0cy5ET01VdGlscyA9IHtcblx0Z2VuUGFsZXR0ZUJveFxufTtcbiJdfQ==","import { limits } from './limits.js';\nimport { genPalette } from './palettes.js';\nimport { defaults } from '../config/defaults.js';\nimport { database } from '../database/database.js';\nimport * as colors from '../index/colors.js';\nimport { colorUtils } from '../utils/color-utils.js';\nimport { commonUtils } from '../utils/common-utils.js';\nimport { domUtils } from '../utils/dom-utils.js';\nimport { randomHSL } from '../utils/random-color-utils.js';\nfunction genLimitedHSL(baseHue, limitDark, limitLight, limitGray, alpha) {\n    let hsl;\n    do {\n        hsl = {\n            value: {\n                hue: baseHue,\n                saturation: Math.random() * 100,\n                lightness: Math.random() * 100,\n                alpha: alpha ?? 1\n            },\n            format: 'hsl'\n        };\n    } while ((limitGray && limits.isTooGray(hsl)) ||\n        (limitDark && limits.isTooDark(hsl)) ||\n        (limitLight && limits.isTooBright(hsl)));\n    return hsl;\n}\nasync function genSelectedPalette(options) {\n    try {\n        const { paletteType, numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray } = options;\n        const palette = await genPalette();\n        switch (paletteType) {\n            case 1:\n                return palette.random(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray);\n            case 2:\n                return palette.complementary(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray);\n            case 3:\n                return palette.triadic(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray);\n            case 4:\n                return palette.tetradic(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray);\n            case 5:\n                return palette.splitComplementary(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray);\n            case 6:\n                return palette.analogous(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray);\n            case 7:\n                return palette.hexadic(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray);\n            case 8:\n                return palette.diadic(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray);\n            case 9:\n                return palette.monochromatic(numBoxes, customColor, enableAlpha, limitBright, limitDark, limitGray);\n            default:\n                console.error('Invalid palette type.');\n                return Promise.resolve(defaults.paletteData);\n        }\n    }\n    catch (error) {\n        console.error(`Error generating palette: ${error}`);\n        return Promise.resolve(defaults.paletteData);\n    }\n}\nasync function startPaletteGen(options) {\n    try {\n        let { numBoxes, customColor } = options;\n        if (customColor === null || customColor === undefined) {\n            console.error('Custom color is null or undefined.');\n            return;\n        }\n        const validatedCustomColor = validateAndConvertColor(customColor) ??\n            randomHSL(options.enableAlpha);\n        options.customColor = validatedCustomColor;\n        const palette = await genSelectedPalette(options);\n        if (palette.items.length === 0) {\n            console.error('Colors array is empty or invalid.');\n            return;\n        }\n        console.log(`Colors array generated: ${JSON.stringify(colors)}`);\n        const tableId = await database.getNextTableID();\n        await domUtils.genPaletteBox(palette.items, numBoxes, tableId);\n    }\n    catch (error) {\n        console.error(`Error starting palette generation: ${error}`);\n    }\n}\nfunction validateAndConvertColor(color) {\n    if (!color)\n        return null;\n    const convertedColor = colorUtils.isColorString(color)\n        ? colorUtils.colorStringToColor(color)\n        : color;\n    if (!commonUtils.validateColorValues(convertedColor)) {\n        console.error(`Invalid color: ${JSON.stringify(convertedColor)}`);\n        return null;\n    }\n    return convertedColor;\n}\nexport const generate = {\n    genLimitedHSL,\n    genSelectedPalette,\n    startPaletteGen,\n    validateAndConvertColor\n};\n//# sourceMappingURL=data:application/json;base64,","import { getConversionFn } from '../utils/conversion-utils.js';\nimport { config } from '../config/constants.js';\nimport { domHelpers } from '../helpers/dom.js';\nimport { notification } from '../helpers/notification.js';\nimport { toHSL } from '../palette-gen/conversion-index.js';\nimport { generate } from '../palette-gen/generate.js';\nimport { randomHSL } from '../utils/random-color-utils.js';\nimport { core } from '../utils/core-utils.js';\nimport { colorUtils } from '../utils/color-utils.js';\nimport { commonUtils } from '../utils/common-utils.js';\nimport { paletteUtils } from '../utils/palette-utils.js';\nfunction addConversionButtonEventListeners() {\n    try {\n        const addListener = (id, colorSpace) => {\n            const button = document.getElementById(id);\n            if (button) {\n                button.addEventListener('click', () => switchColorSpace(colorSpace));\n            }\n            else {\n                console.warn(`Element with id \"${id}\" not found.`);\n            }\n        };\n        addListener('show-as-cmyk-button', 'cmyk');\n        addListener('show-as-hex-button', 'hex');\n        addListener('show-as-hsl-button', 'hsl');\n        addListener('show-as-hsv-button', 'hsv');\n        addListener('show-as-lab-button', 'lab');\n        addListener('show-as-rgb-button', 'rgb');\n    }\n    catch (error) {\n        console.error(`Failed to add event listeners to conversion buttons: ${error}`);\n        return;\n    }\n}\nfunction applyCustomColor() {\n    try {\n        const colorPicker = document.getElementById('custom-color-picker');\n        if (!colorPicker) {\n            throw new Error('Color picker element not found');\n        }\n        const rawValue = colorPicker.value.trim();\n        const selectedFormat = document.getElementById('custom-color-format')?.value;\n        if (!colorUtils.isColorSpace(selectedFormat)) {\n            throw new Error(`Unsupported color format: ${selectedFormat}`);\n        }\n        const parsedColor = colorUtils.parseColor(selectedFormat, rawValue);\n        if (!parsedColor) {\n            throw new Error(`Invalid color value: ${rawValue}`);\n        }\n        const hslColor = colorUtils.isHSLColor(parsedColor)\n            ? parsedColor\n            : toHSL(parsedColor);\n        return hslColor;\n    }\n    catch (error) {\n        console.error(`Failed to apply custom color: ${error}. Returning randomly generated hex color`);\n        return randomHSL(false);\n    }\n}\nfunction applyFirstColorToUI(color) {\n    try {\n        const colorBox1 = document.getElementById('color-box-1');\n        if (!colorBox1) {\n            console.error('color-box-1 is null');\n            return color;\n        }\n        const formatColorString = colorUtils.getCSSColorString(color);\n        if (!formatColorString) {\n            console.error('Unexpected or unsupported color format.');\n            return color;\n        }\n        colorBox1.style.backgroundColor = formatColorString;\n        paletteUtils.populateColorTextOutputBox(color, 1);\n        return color;\n    }\n    catch (error) {\n        console.error(`Failed to apply first color to UI: ${error}`);\n        return randomHSL(false);\n    }\n}\nfunction copyToClipboard(text, tooltipElement) {\n    try {\n        const colorValue = text.replace('Copied to clipboard!', '').trim();\n        navigator.clipboard\n            .writeText(colorValue)\n            .then(() => {\n            domHelpers.showTooltip(tooltipElement);\n            console.log(`Copied color value: ${colorValue}`);\n            setTimeout(() => tooltipElement.classList.remove('show'), config.tooltipTimeout || 1000);\n        })\n            .catch(err => {\n            console.error('Error copying to clipboard:', err);\n        });\n    }\n    catch (error) {\n        console.error(`Failed to copy to clipboard: ${error}`);\n    }\n}\nfunction defineUIElements() {\n    try {\n        const advancedMenuToggleButton = config.advancedMenuToggleButton;\n        const applyCustomColorButton = config.applyCustomColorButton;\n        const clearCustomColorButton = config.clearCustomColorButton;\n        const customColorToggleButton = config.customColorMenuButton;\n        const closeHelpMenuButton = config.closeHelpMenuButton;\n        const closeHistoryMenuButton = config.closeHistoryMenuButton;\n        const closeSubMenuAButton = config.closeSubMenuAButton;\n        const closeSubMenuBButton = config.closeSubMenuBButton;\n        const desaturateButton = config.desaturateButton;\n        const enableAlphaCheckbox = config.enableAlphaCheckbox;\n        const generateButton = config.generateButton;\n        const helpMenuToggleButton = config.helpMenuToggleButton;\n        const historyMenuToggleButton = config.historyMenuToggleButton;\n        const limitBrightCheckbox = config.limitBrightCheckbox;\n        const limitDarkCheckbox = config.limitDarkCheckbox;\n        const limitGrayCheckbox = config.limitGrayCheckbox;\n        const saturateButton = config.saturateButton;\n        const selectedColorOptions = config.selectedColorOptions;\n        const showAsCMYKButton = config.showAsCMYKButton;\n        const showAsHexButton = config.showAsHexButton;\n        const showAsHSLButton = config.showAsHSLButton;\n        const showAsHSVButton = config.showAsHSVButton;\n        const showAsLABButton = config.showAsLABButton;\n        const showAsRGBButton = config.showAsRGBButton;\n        const selectedColor = selectedColorOptions\n            ? parseInt(selectedColorOptions.value, 10)\n            : 0;\n        return {\n            advancedMenuToggleButton,\n            applyCustomColorButton,\n            clearCustomColorButton,\n            closeHelpMenuButton,\n            closeHistoryMenuButton,\n            closeSubMenuAButton,\n            closeSubMenuBButton,\n            customColorToggleButton,\n            desaturateButton,\n            enableAlphaCheckbox,\n            generateButton,\n            helpMenuToggleButton,\n            historyMenuToggleButton,\n            limitBrightCheckbox,\n            limitDarkCheckbox,\n            limitGrayCheckbox,\n            saturateButton,\n            selectedColor,\n            showAsCMYKButton,\n            showAsHexButton,\n            showAsHSLButton,\n            showAsHSVButton,\n            showAsLABButton,\n            showAsRGBButton\n        };\n    }\n    catch (error) {\n        console.error('Failed to define UI buttons:', error);\n        return {\n            advancedMenuToggleButton: null,\n            applyCustomColorButton: null,\n            clearCustomColorButton: null,\n            closeHelpMenuButton: null,\n            closeHistoryMenuButton: null,\n            closeSubMenuAButton: null,\n            closeSubMenuBButton: null,\n            customColorToggleButton: null,\n            desaturateButton: null,\n            enableAlphaCheckbox: null,\n            generateButton: null,\n            helpMenuToggleButton: null,\n            historyMenuToggleButton: null,\n            limitBrightCheckbox: null,\n            limitDarkCheckbox: null,\n            limitGrayCheckbox: null,\n            saturateButton: null,\n            selectedColor: 0,\n            showAsCMYKButton: null,\n            showAsHexButton: null,\n            showAsHSLButton: null,\n            showAsHSVButton: null,\n            showAsLABButton: null,\n            showAsRGBButton: null\n        };\n    }\n}\nfunction desaturateColor(selectedColor) {\n    try {\n        getElementsForSelectedColor(selectedColor);\n    }\n    catch (error) {\n        console.error(`Failed to desaturate color: ${error}`);\n    }\n}\nfunction getElementsForSelectedColor(selectedColor) {\n    const selectedColorBox = document.getElementById(`color-box-${selectedColor}`);\n    if (!selectedColorBox) {\n        console.warn(`Element not found for color ${selectedColor}`);\n        notification.showToast('Please select a valid color.');\n        return {\n            selectedColorTextOutputBox: null,\n            selectedColorBox: null,\n            selectedColorStripe: null\n        };\n    }\n    return {\n        selectedColorTextOutputBox: document.getElementById(`color-text-output-box-${selectedColor}`),\n        selectedColorBox,\n        selectedColorStripe: document.getElementById(`color-stripe-${selectedColor}`)\n    };\n}\nfunction getGenerateButtonParams() {\n    try {\n        const paletteNumberOptions = config.paletteNumberOptions;\n        const paletteTypeOptions = config.paletteTypeOptions;\n        const customColorRaw = config.customColorElement?.value;\n        const enableAlphaCheckbox = config.enableAlphaCheckbox;\n        const limitBrightCheckbox = config.limitBrightCheckbox;\n        const limitDarkCheckbox = config.limitDarkCheckbox;\n        const limitGrayCheckbox = config.limitGrayCheckbox;\n        if (paletteNumberOptions === null ||\n            paletteTypeOptions === null ||\n            enableAlphaCheckbox === null ||\n            limitBrightCheckbox === null ||\n            limitDarkCheckbox === null ||\n            limitGrayCheckbox === null) {\n            console.error('One or more elements are null');\n            return null;\n        }\n        console.log(`numBoxes: ${parseInt(paletteNumberOptions.value, 10)}\\npaletteType: ${parseInt(paletteTypeOptions.value, 10)}`);\n        return {\n            numBoxes: parseInt(paletteNumberOptions.value, 10),\n            paletteType: parseInt(paletteTypeOptions.value, 10),\n            customColor: customColorRaw\n                ? colorUtils.parseCustomColor(customColorRaw)\n                : null,\n            enableAlpha: enableAlphaCheckbox.checked,\n            limitBright: limitBrightCheckbox.checked,\n            limitDark: limitDarkCheckbox.checked,\n            limitGray: limitGrayCheckbox.checked\n        };\n    }\n    catch (error) {\n        console.error('Failed to retrieve generateButton parameters:', error);\n        return null;\n    }\n}\nconst handleGenButtonClick = core.debounce(() => {\n    try {\n        const params = getGenerateButtonParams();\n        if (!params) {\n            console.error('Failed to retrieve generateButton parameters');\n            return;\n        }\n        const { numBoxes, customColor, paletteType, enableAlpha, limitBright, limitDark, limitGray } = params;\n        if (!paletteType || !numBoxes) {\n            console.error('paletteType and/or numBoxes are undefined');\n            return;\n        }\n        const options = {\n            numBoxes,\n            customColor,\n            paletteType,\n            enableAlpha,\n            limitBright,\n            limitDark,\n            limitGray\n        };\n        generate.startPaletteGen(options);\n    }\n    catch (error) {\n        console.error(`Failed to handle generate button click: ${error}`);\n    }\n}, config.buttonDebounce || 300);\nfunction pullParamsFromUI() {\n    try {\n        const paletteTypeOptionsElement = config.paletteTypeOptions;\n        const numBoxesElement = config.paletteNumberOptions;\n        const enableAlphaCheckbox = config.enableAlphaCheckbox;\n        const limitBrightCheckbox = config.limitBrightCheckbox;\n        const limitDarkCheckbox = config.limitDarkCheckbox;\n        const limitGrayCheckbox = config.limitGrayCheckbox;\n        return {\n            paletteType: paletteTypeOptionsElement\n                ? parseInt(paletteTypeOptionsElement.value, 10)\n                : 0,\n            numBoxes: numBoxesElement ? parseInt(numBoxesElement.value, 10) : 0,\n            enableAlpha: enableAlphaCheckbox?.checked || false,\n            limitBright: limitBrightCheckbox?.checked || false,\n            limitDark: limitDarkCheckbox?.checked || false,\n            limitGray: limitGrayCheckbox?.checked || false\n        };\n    }\n    catch (error) {\n        console.error(`Failed to pull parameters from UI: ${error}`);\n        return {\n            paletteType: 0,\n            numBoxes: 0,\n            enableAlpha: false,\n            limitBright: false,\n            limitDark: false,\n            limitGray: false\n        };\n    }\n}\nfunction saturateColor(selectedColor) {\n    try {\n        getElementsForSelectedColor(selectedColor);\n    }\n    catch (error) {\n        console.error(`Failed to saturate color: ${error}`);\n    }\n}\nfunction showCustomColorPopupDiv() {\n    try {\n        const popup = document.getElementById('popup-div');\n        if (popup) {\n            popup.classList.toggle('show');\n        }\n        else {\n            console.error(\"document.getElementById('popup-div') is undefined\");\n            return;\n        }\n    }\n    catch (error) {\n        console.error(`Failed to show custom color popup div: ${error}`);\n    }\n}\nfunction switchColorSpace(targetFormat) {\n    try {\n        const colorTextOutputBoxes = document.querySelectorAll('.color-text-output-box');\n        colorTextOutputBoxes.forEach(box => {\n            const inputBox = box;\n            const colorValues = inputBox.colorValues;\n            if (!colorValues || !commonUtils.validateColorValues(colorValues)) {\n                console.error('Invalid color values.');\n                notification.showToast('Invalid color values.');\n                return;\n            }\n            const currentFormat = inputBox.getAttribute('data-format');\n            console.log(`Converting from ${currentFormat} to ${targetFormat}`);\n            const convertFn = getConversionFn(currentFormat, targetFormat);\n            if (!convertFn) {\n                console.error(`Conversion from ${currentFormat} to ${targetFormat} is not supported.`);\n                notification.showToast('Conversion not supported.');\n                return;\n            }\n            if (colorValues.format === 'xyz') {\n                console.error('Cannot convert from XYZ to another color space.');\n                notification.showToast('Conversion not supported.');\n                return;\n            }\n            const clonedColor = colorUtils.narrowToColor(colorValues);\n            if (!clonedColor ||\n                colorUtils.isSLColor(clonedColor) ||\n                colorUtils.isSVColor(clonedColor) ||\n                colorUtils.isXYZ(clonedColor)) {\n                console.error('Cannot convert from SL, SV, or XYZ color spaces. Please convert to a supported format first.');\n                notification.showToast('Conversion not supported.');\n                return;\n            }\n            if (!clonedColor) {\n                console.error(`Conversion to ${targetFormat} failed.`);\n                notification.showToast('Conversion failed.');\n                return;\n            }\n            const newColor = core.clone(convertFn(clonedColor));\n            if (!newColor) {\n                console.error(`Conversion to ${targetFormat} failed.`);\n                notification.showToast('Conversion failed.');\n                return;\n            }\n            inputBox.value = String(newColor);\n            inputBox.setAttribute('data-format', targetFormat);\n        });\n    }\n    catch (error) {\n        throw new Error(`Failed to convert colors: ${error}`);\n    }\n}\nexport const domFn = {\n    addConversionButtonEventListeners,\n    applyCustomColor,\n    applyFirstColorToUI,\n    copyToClipboard,\n    defineUIElements,\n    desaturateColor,\n    getElementsForSelectedColor,\n    getGenerateButtonParams,\n    handleGenButtonClick,\n    pullParamsFromUI,\n    saturateColor,\n    showCustomColorPopupDiv,\n    switchColorSpace\n};\n//# sourceMappingURL=data:application/json;base64,","// ColorGen - version 0.6.0-dev\n// Author: Viihna Leraine (viihna@ViihnaTech.com / viihna.78 (Signal) / Viihna-Lehraine (Github))\n// Licensed under GNU GPLv3 (https://www.gnu.org/licenses/gpl-3.0.html)\n// You may use this code for any purpose EXCEPT for the creation of proprietary derivatives. I encourage you to improve on my code or to include it in other projects if you find it helpful. Please credit me as the original author.\n// This application comes with ABSOLUTELY NO WARRANTY OR GUARANTEE OF ANY KIND.\nimport { config } from './config/constants.js';\nimport { domFn } from './dom/dom-main.js';\nimport { database } from './database/database.js';\nimport { generate } from './palette-gen/generate.js';\nimport { randomHSL } from './utils/random-color-utils.js';\nimport { core } from './utils/core-utils.js';\ndocument.addEventListener('DOMContentLoaded', () => {\n    console.log('DOM content loaded - Initializing application');\n    const buttons = domFn.defineUIElements();\n    if (!buttons) {\n        console.error('Failed to initialize UI buttons');\n        return;\n    }\n    const selectedColorOptions = config.selectedColorOptions;\n    const { advancedMenuToggleButton, applyCustomColorButton, clearCustomColorButton, closeHelpMenuButton, closeHistoryMenuButton, customColorToggleButton, desaturateButton, generateButton, helpMenuToggleButton, historyMenuToggleButton, saturateButton, showAsCMYKButton, showAsHexButton, showAsHSLButton, showAsHSVButton, showAsLABButton, showAsRGBButton } = buttons;\n    // confirm that all elements are accessible\n    console.log(`Advanced Menu Toggle Button${advancedMenuToggleButton ? 'found' : 'not found'}\\nApply Custom Color Button: ${applyCustomColorButton ? 'found' : 'not found'}\\nClear Custom Color Button: ${clearCustomColorButton ? 'found' : 'not found'}\\nClose Help Menu Button: ${closeHelpMenuButton ? 'found' : 'not found'}\\nClose History Menu Button: ${closeHistoryMenuButton ? 'found' : 'not found'}\\nCustom Color Toggle Button: ${customColorToggleButton ? 'found' : 'not found'}\\nDesaturate Button: ${desaturateButton ? 'found' : 'not found'}\\nGenerate Button: ${generateButton ? 'found' : 'not found'}\\nHistory Toggle Menu Button: ${historyMenuToggleButton ? 'found' : 'not found'}\\nSaturate Button: ${saturateButton ? 'found' : 'not found'}\\nShow as CMYK Button: ${showAsCMYKButton ? 'found' : 'not found'}\\nShow as Hex Button: ${showAsHexButton ? 'found' : 'not found'}\\nShow as HSL Button: ${showAsHSLButton ? 'found' : 'not found'}\\nShow as HSV Button: ${showAsHSVButton ? 'found' : 'not found'}\\nShow as LAB Button: ${showAsLABButton ? 'found' : 'not found'}\\nShow as RGB Button: ${showAsRGBButton ? 'found' : 'not found'}`);\n    const selectedColor = selectedColorOptions\n        ? parseInt(selectedColorOptions.value, 10)\n        : 0;\n    console.log(`Selected color: ${selectedColor}`);\n    try {\n        domFn.addConversionButtonEventListeners();\n        console.log('Conversion button event listeners attached');\n    }\n    catch (error) {\n        console.error(`Unable to attach conversion button event listeners: ${error}`);\n    }\n    advancedMenuToggleButton?.addEventListener('click', e => {\n        e.preventDefault();\n        const advancedMenuContent = document.querySelector('.advanced-menu-content');\n        if (advancedMenuContent) {\n            const isHidden = getComputedStyle(advancedMenuContent).display === 'none';\n            advancedMenuContent.style.display = isHidden ? 'flex' : 'none';\n        }\n        console.log('advancedMenuToggleButton clicked');\n    });\n    applyCustomColorButton?.addEventListener('click', async (e) => {\n        e.preventDefault();\n        const customHSLColor = domFn.applyCustomColor();\n        const customHSLColorClone = core.clone(customHSLColor);\n        await database.saveData('customColor', 'appSettings', customHSLColorClone);\n        console.log('Custom color saved to IndexedDB');\n    });\n    clearCustomColorButton?.addEventListener('click', async (e) => {\n        e.preventDefault();\n        await database.deleteTable('customColor');\n        console.log('Custom color cleared from IndexedDB');\n        domFn.showCustomColorPopupDiv();\n    });\n    closeHelpMenuButton?.addEventListener('click', e => {\n        e.preventDefault();\n        console.log('closeHelpMenuButton clicked');\n    });\n    closeHistoryMenuButton?.addEventListener('click', e => {\n        e.preventDefault();\n        console.log('closeHistoryMenuButton clicked');\n    });\n    customColorToggleButton?.addEventListener('click', e => {\n        e.preventDefault();\n        console.log('customColorToggleButton clicked');\n        domFn.showCustomColorPopupDiv();\n    });\n    desaturateButton?.addEventListener('click', e => {\n        e.preventDefault();\n        console.log('desaturateButton clicked');\n        domFn.desaturateColor(selectedColor);\n    });\n    generateButton?.addEventListener('click', async (e) => {\n        e.preventDefault();\n        console.log('generateButton clicked');\n        const { paletteType, numBoxes, enableAlpha, limitBright, limitDark, limitGray } = domFn.pullParamsFromUI();\n        let customColor = (await database.getCustomColor());\n        if (!customColor) {\n            console.info('No custom color found. Using a random color');\n            customColor = randomHSL(true);\n        }\n        const paletteOptions = {\n            paletteType,\n            numBoxes,\n            customColor: core.clone(customColor),\n            enableAlpha,\n            limitBright,\n            limitDark,\n            limitGray\n        };\n        await generate.startPaletteGen(paletteOptions);\n    });\n    helpMenuToggleButton?.addEventListener('click', e => {\n        e.preventDefault();\n        const helpMenuContent = document.querySelector('.help-menu-content');\n        if (helpMenuContent) {\n            const isHidden = getComputedStyle(helpMenuContent).display === 'none';\n            helpMenuContent.style.display = isHidden ? 'flex' : 'none';\n        }\n        console.log('helpMenuToggleButton clicked');\n    });\n    historyMenuToggleButton?.addEventListener('click', e => {\n        e.preventDefault();\n        const historyMenuContent = document.querySelector('history-menu-content');\n        if (historyMenuContent) {\n            const isHidden = getComputedStyle(historyMenuContent).display === 'none';\n            historyMenuContent.style.display = isHidden ? 'flex' : 'none';\n        }\n        console.log('historyMenuToggleButton clicked');\n    });\n    saturateButton?.addEventListener('click', e => {\n        e.preventDefault();\n        console.log('saturateButton clicked');\n        domFn.saturateColor(selectedColor);\n    });\n    showAsCMYKButton?.addEventListener('click', e => {\n        e.preventDefault();\n        console.log('showAsCMYKButton clicked');\n    });\n    showAsHexButton?.addEventListener('click', e => {\n        e.preventDefault();\n        console.log('showAsHexButton clicked');\n    });\n    showAsHSLButton?.addEventListener('click', e => {\n        e.preventDefault();\n        console.log('showAsHSLButton clicked');\n    });\n    showAsHSVButton?.addEventListener('click', e => {\n        e.preventDefault();\n        console.log('showAsHSVButton clicked');\n    });\n    showAsLABButton?.addEventListener('click', e => {\n        e.preventDefault();\n        console.log('showAsLABButton clicked');\n    });\n    showAsRGBButton?.addEventListener('click', e => {\n        e.preventDefault();\n        console.log('showAsRGBButton clicked');\n    });\n});\n//# sourceMappingURL=data:application/json;base64,"],"names":["debounce"],"mappings":"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","x_google_ignoreList":[14]}