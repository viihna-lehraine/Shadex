const adjustSLAmount = 10;
const buttonDebounce = 300;
const inputDebounce = 200;
const probabilities = [40, 45, 50, 55, 60, 65, 70];
const weights = [0.1, 0.15, 0.2, 0.3, 0.15, 0.05, 0.05];
const cmykBrightnessThreshold = 10;
const cmykDarknessThreshold = 90;
const cmykGrayThreshold = 5;
const hslBrightnessThreshold = 75;
const hslDarknessThreshold = 25;
const hslGrayThreshold = 20;
const hsvBrightnessValueThreshold = 90;
const hsvBrightnessSaturationThreshold = 10;
const hsvDarknessThreshold = 10;
const hsvGrayThreshold = 10;
const labBrightnessThreshold = 90;
const labDarknessThreshold = 10;
const labGrayThreshold = 10;
const rgbMaxBrightness = 200;
const rgbMinBrightness = 50;
const rgbGrayThreshold = 10;
const copyButtonTextTimeout = 1000;
const toastTimeout = 3000;
const tooltipTimeout = 1000;
// ***** Constructed Constants *****
const adjustments = {
    adjustSLAmount
};
const debounce = {
    buttonDebounce,
    inputDebounce
};
const probabilityConstants = {
    probabilities,
    weights
};
const thresholds = {
    cmykBrightnessThreshold,
    cmykDarknessThreshold,
    cmykGrayThreshold,
    hslBrightnessThreshold,
    hslDarknessThreshold,
    hslGrayThreshold,
    hsvBrightnessValueThreshold,
    hsvBrightnessSaturationThreshold,
    hsvDarknessThreshold,
    hsvGrayThreshold,
    labBrightnessThreshold,
    labDarknessThreshold,
    labGrayThreshold,
    rgbMaxBrightness,
    rgbMinBrightness,
    rgbGrayThreshold
};
const timeouts = {
    copyButtonTextTimeout,
    toastTimeout,
    tooltipTimeout
};
export const config = {
    ...adjustments,
    ...debounce,
    ...probabilityConstants,
    ...thresholds,
    ...timeouts
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbmZpZy9jb25zdGFudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDO0FBRTFCLE1BQU0sY0FBYyxHQUFHLEdBQUcsQ0FBQztBQUMzQixNQUFNLGFBQWEsR0FBRyxHQUFHLENBQUM7QUFFMUIsTUFBTSxhQUFhLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUNuRCxNQUFNLE9BQU8sR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBRXhELE1BQU0sdUJBQXVCLEdBQUcsRUFBRSxDQUFDO0FBQ25DLE1BQU0scUJBQXFCLEdBQUcsRUFBRSxDQUFDO0FBQ2pDLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxDQUFDO0FBQzVCLE1BQU0sc0JBQXNCLEdBQUcsRUFBRSxDQUFDO0FBQ2xDLE1BQU0sb0JBQW9CLEdBQUcsRUFBRSxDQUFDO0FBQ2hDLE1BQU0sZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0FBQzVCLE1BQU0sMkJBQTJCLEdBQUcsRUFBRSxDQUFDO0FBQ3ZDLE1BQU0sZ0NBQWdDLEdBQUcsRUFBRSxDQUFDO0FBQzVDLE1BQU0sb0JBQW9CLEdBQUcsRUFBRSxDQUFDO0FBQ2hDLE1BQU0sZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0FBQzVCLE1BQU0sc0JBQXNCLEdBQUcsRUFBRSxDQUFDO0FBQ2xDLE1BQU0sb0JBQW9CLEdBQUcsRUFBRSxDQUFDO0FBQ2hDLE1BQU0sZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0FBQzVCLE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxDQUFDO0FBQzdCLE1BQU0sZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0FBQzVCLE1BQU0sZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0FBRTVCLE1BQU0scUJBQXFCLEdBQUcsSUFBSSxDQUFDO0FBQ25DLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQztBQUMxQixNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUM7QUFFNUIsb0NBQW9DO0FBRXBDLE1BQU0sV0FBVyxHQUEyQjtJQUMzQyxjQUFjO0NBQ2QsQ0FBQztBQUVGLE1BQU0sUUFBUSxHQUF3QjtJQUNyQyxjQUFjO0lBQ2QsYUFBYTtDQUNiLENBQUM7QUFFRixNQUFNLG9CQUFvQixHQUFvQztJQUM3RCxhQUFhO0lBQ2IsT0FBTztDQUNQLENBQUM7QUFFRixNQUFNLFVBQVUsR0FBMEI7SUFDekMsdUJBQXVCO0lBQ3ZCLHFCQUFxQjtJQUNyQixpQkFBaUI7SUFDakIsc0JBQXNCO0lBQ3RCLG9CQUFvQjtJQUNwQixnQkFBZ0I7SUFDaEIsMkJBQTJCO0lBQzNCLGdDQUFnQztJQUNoQyxvQkFBb0I7SUFDcEIsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtJQUN0QixvQkFBb0I7SUFDcEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0NBQ2hCLENBQUM7QUFFRixNQUFNLFFBQVEsR0FBd0I7SUFDckMscUJBQXFCO0lBQ3JCLFlBQVk7SUFDWixjQUFjO0NBQ2QsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBc0I7SUFDeEMsR0FBRyxXQUFXO0lBQ2QsR0FBRyxRQUFRO0lBQ1gsR0FBRyxvQkFBb0I7SUFDdkIsR0FBRyxVQUFVO0lBQ2IsR0FBRyxRQUFRO0NBQ1gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGludGVyZmFjZXMgZnJvbSAnLi4vaW5kZXgvaW50ZXJmYWNlcyc7XG5cbmNvbnN0IGFkanVzdFNMQW1vdW50ID0gMTA7XG5cbmNvbnN0IGJ1dHRvbkRlYm91bmNlID0gMzAwO1xuY29uc3QgaW5wdXREZWJvdW5jZSA9IDIwMDtcblxuY29uc3QgcHJvYmFiaWxpdGllcyA9IFs0MCwgNDUsIDUwLCA1NSwgNjAsIDY1LCA3MF07XG5jb25zdCB3ZWlnaHRzID0gWzAuMSwgMC4xNSwgMC4yLCAwLjMsIDAuMTUsIDAuMDUsIDAuMDVdO1xuXG5jb25zdCBjbXlrQnJpZ2h0bmVzc1RocmVzaG9sZCA9IDEwO1xuY29uc3QgY215a0RhcmtuZXNzVGhyZXNob2xkID0gOTA7XG5jb25zdCBjbXlrR3JheVRocmVzaG9sZCA9IDU7XG5jb25zdCBoc2xCcmlnaHRuZXNzVGhyZXNob2xkID0gNzU7XG5jb25zdCBoc2xEYXJrbmVzc1RocmVzaG9sZCA9IDI1O1xuY29uc3QgaHNsR3JheVRocmVzaG9sZCA9IDIwO1xuY29uc3QgaHN2QnJpZ2h0bmVzc1ZhbHVlVGhyZXNob2xkID0gOTA7XG5jb25zdCBoc3ZCcmlnaHRuZXNzU2F0dXJhdGlvblRocmVzaG9sZCA9IDEwO1xuY29uc3QgaHN2RGFya25lc3NUaHJlc2hvbGQgPSAxMDtcbmNvbnN0IGhzdkdyYXlUaHJlc2hvbGQgPSAxMDtcbmNvbnN0IGxhYkJyaWdodG5lc3NUaHJlc2hvbGQgPSA5MDtcbmNvbnN0IGxhYkRhcmtuZXNzVGhyZXNob2xkID0gMTA7XG5jb25zdCBsYWJHcmF5VGhyZXNob2xkID0gMTA7XG5jb25zdCByZ2JNYXhCcmlnaHRuZXNzID0gMjAwO1xuY29uc3QgcmdiTWluQnJpZ2h0bmVzcyA9IDUwO1xuY29uc3QgcmdiR3JheVRocmVzaG9sZCA9IDEwO1xuXG5jb25zdCBjb3B5QnV0dG9uVGV4dFRpbWVvdXQgPSAxMDAwO1xuY29uc3QgdG9hc3RUaW1lb3V0ID0gMzAwMDtcbmNvbnN0IHRvb2x0aXBUaW1lb3V0ID0gMTAwMDtcblxuLy8gKioqKiogQ29uc3RydWN0ZWQgQ29uc3RhbnRzICoqKioqXG5cbmNvbnN0IGFkanVzdG1lbnRzOiBpbnRlcmZhY2VzLkFkanVzdG1lbnRzID0ge1xuXHRhZGp1c3RTTEFtb3VudFxufTtcblxuY29uc3QgZGVib3VuY2U6IGludGVyZmFjZXMuRGVib3VuY2UgPSB7XG5cdGJ1dHRvbkRlYm91bmNlLFxuXHRpbnB1dERlYm91bmNlXG59O1xuXG5jb25zdCBwcm9iYWJpbGl0eUNvbnN0YW50czogaW50ZXJmYWNlcy5Qcm9iYWJpbGl0eUNvbnN0YW50cyA9IHtcblx0cHJvYmFiaWxpdGllcyxcblx0d2VpZ2h0c1xufTtcblxuY29uc3QgdGhyZXNob2xkczogaW50ZXJmYWNlcy5UaHJlc2hvbGRzID0ge1xuXHRjbXlrQnJpZ2h0bmVzc1RocmVzaG9sZCxcblx0Y215a0RhcmtuZXNzVGhyZXNob2xkLFxuXHRjbXlrR3JheVRocmVzaG9sZCxcblx0aHNsQnJpZ2h0bmVzc1RocmVzaG9sZCxcblx0aHNsRGFya25lc3NUaHJlc2hvbGQsXG5cdGhzbEdyYXlUaHJlc2hvbGQsXG5cdGhzdkJyaWdodG5lc3NWYWx1ZVRocmVzaG9sZCxcblx0aHN2QnJpZ2h0bmVzc1NhdHVyYXRpb25UaHJlc2hvbGQsXG5cdGhzdkRhcmtuZXNzVGhyZXNob2xkLFxuXHRoc3ZHcmF5VGhyZXNob2xkLFxuXHRsYWJCcmlnaHRuZXNzVGhyZXNob2xkLFxuXHRsYWJEYXJrbmVzc1RocmVzaG9sZCxcblx0bGFiR3JheVRocmVzaG9sZCxcblx0cmdiTWF4QnJpZ2h0bmVzcyxcblx0cmdiTWluQnJpZ2h0bmVzcyxcblx0cmdiR3JheVRocmVzaG9sZFxufTtcblxuY29uc3QgdGltZW91dHM6IGludGVyZmFjZXMuVGltZW91dHMgPSB7XG5cdGNvcHlCdXR0b25UZXh0VGltZW91dCxcblx0dG9hc3RUaW1lb3V0LFxuXHR0b29sdGlwVGltZW91dFxufTtcblxuZXhwb3J0IGNvbnN0IGNvbmZpZzogaW50ZXJmYWNlcy5Db25maWcgPSB7XG5cdC4uLmFkanVzdG1lbnRzLFxuXHQuLi5kZWJvdW5jZSxcblx0Li4ucHJvYmFiaWxpdHlDb25zdGFudHMsXG5cdC4uLnRocmVzaG9sZHMsXG5cdC4uLnRpbWVvdXRzXG59O1xuIl19