// File: src/data/consts/dom.ts
import { domUtils } from '../../common/dom/index.js';
const getElement = domUtils.getElement;
const advancedMenuButton = getElement('advanced-menu-button');
const applyCustomColorButton = getElement('apply-custom-color-button');
const clearCustomColorButton = getElement('clear-custom-color-button');
const closeCustomColorMenuButton = getElement('close-custom-color-menu-button');
const closeAdvancedMenuButton = getElement('close-advanced-menu-button');
const closeHelpMenuButton = getElement('close-help-menu-button');
const closeHistoryMenuButton = getElement('close-history-menu-button');
const customColorElement = getElement('custom-color');
const customColorMenuButton = getElement('custom-color-menu-button');
const desaturateButton = getElement('desaturate-button');
const enableAlphaCheckbox = getElement('enable-alpha-checkbox');
const generateButton = getElement('generate-button');
const helpMenuButton = getElement('help-menu-button');
const historyMenuButton = getElement('history-menu-button');
const limitDarknessCheckbox = getElement('limit-darkness-checkbox');
const limitGraynessCheckbox = getElement('limit-grayness-checkbox');
const limitLightnessCheckbox = getElement('limit-lightness-checkbox');
const paletteNumberOptions = getElement('palette-number-options');
const paletteTypeOptions = getElement('palette-type-options');
const saturateButton = getElement('saturate-button');
const selectedColorOption = getElement('selected-color-option');
const showAsCMYKButton = getElement('show-as-cmyk-button');
const showAsHexButton = getElement('show-as-hex-button');
const showAsHSLButton = getElement('show-as-hsl-button');
const showAsHSVButton = getElement('show-as-hsv-button');
const showAsLABButton = getElement('show-as-lab-button');
const showAsRGBButton = getElement('show-as-rgb-button');
export const dom = {
    advancedMenuButton,
    applyCustomColorButton,
    clearCustomColorButton,
    closeAdvancedMenuButton,
    closeCustomColorMenuButton,
    closeHelpMenuButton,
    closeHistoryMenuButton,
    customColorElement,
    customColorMenuButton,
    desaturateButton,
    enableAlphaCheckbox,
    generateButton,
    helpMenuButton,
    historyMenuButton,
    limitDarknessCheckbox,
    limitGraynessCheckbox,
    limitLightnessCheckbox,
    paletteNumberOptions,
    paletteTypeOptions,
    saturateButton,
    selectedColorOption,
    showAsCMYKButton,
    showAsHexButton,
    showAsHSLButton,
    showAsHSVButton,
    showAsLABButton,
    showAsRGBButton
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2RhdGEvY29uc3RzL2RvbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQkFBK0I7QUFHL0IsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRXJELE1BQU0sVUFBVSxHQUFHLFFBQVEsQ0FBQyxVQUFVLENBQUM7QUFFdkMsTUFBTSxrQkFBa0IsR0FBRyxVQUFVLENBQ3BDLHNCQUFzQixDQUN0QixDQUFDO0FBQ0YsTUFBTSxzQkFBc0IsR0FBRyxVQUFVLENBQ3hDLDJCQUEyQixDQUMzQixDQUFDO0FBQ0YsTUFBTSxzQkFBc0IsR0FBRyxVQUFVLENBQ3hDLDJCQUEyQixDQUMzQixDQUFDO0FBQ0YsTUFBTSwwQkFBMEIsR0FBRyxVQUFVLENBQzVDLGdDQUFnQyxDQUNoQyxDQUFDO0FBQ0YsTUFBTSx1QkFBdUIsR0FBRyxVQUFVLENBQ3pDLDRCQUE0QixDQUM1QixDQUFDO0FBQ0YsTUFBTSxtQkFBbUIsR0FBRyxVQUFVLENBQ3JDLHdCQUF3QixDQUN4QixDQUFDO0FBQ0YsTUFBTSxzQkFBc0IsR0FBRyxVQUFVLENBQ3hDLDJCQUEyQixDQUMzQixDQUFDO0FBQ0YsTUFBTSxrQkFBa0IsR0FBRyxVQUFVLENBQW1CLGNBQWMsQ0FBQyxDQUFDO0FBQ3hFLE1BQU0scUJBQXFCLEdBQUcsVUFBVSxDQUN2QywwQkFBMEIsQ0FDMUIsQ0FBQztBQUNGLE1BQU0sZ0JBQWdCLEdBQUcsVUFBVSxDQUFvQixtQkFBbUIsQ0FBQyxDQUFDO0FBQzVFLE1BQU0sbUJBQW1CLEdBQUcsVUFBVSxDQUNyQyx1QkFBdUIsQ0FDdkIsQ0FBQztBQUNGLE1BQU0sY0FBYyxHQUFHLFVBQVUsQ0FBb0IsaUJBQWlCLENBQUMsQ0FBQztBQUN4RSxNQUFNLGNBQWMsR0FBRyxVQUFVLENBQW9CLGtCQUFrQixDQUFDLENBQUM7QUFDekUsTUFBTSxpQkFBaUIsR0FBRyxVQUFVLENBQW9CLHFCQUFxQixDQUFDLENBQUM7QUFDL0UsTUFBTSxxQkFBcUIsR0FBRyxVQUFVLENBQ3ZDLHlCQUF5QixDQUN6QixDQUFDO0FBQ0YsTUFBTSxxQkFBcUIsR0FBRyxVQUFVLENBQ3ZDLHlCQUF5QixDQUN6QixDQUFDO0FBQ0YsTUFBTSxzQkFBc0IsR0FBRyxVQUFVLENBQ3hDLDBCQUEwQixDQUMxQixDQUFDO0FBQ0YsTUFBTSxvQkFBb0IsR0FBRyxVQUFVLENBQ3RDLHdCQUF3QixDQUN4QixDQUFDO0FBQ0YsTUFBTSxrQkFBa0IsR0FBRyxVQUFVLENBQ3BDLHNCQUFzQixDQUN0QixDQUFDO0FBQ0YsTUFBTSxjQUFjLEdBQUcsVUFBVSxDQUFvQixpQkFBaUIsQ0FBQyxDQUFDO0FBQ3hFLE1BQU0sbUJBQW1CLEdBQUcsVUFBVSxDQUNyQyx1QkFBdUIsQ0FDdkIsQ0FBQztBQUNGLE1BQU0sZ0JBQWdCLEdBQUcsVUFBVSxDQUFvQixxQkFBcUIsQ0FBQyxDQUFDO0FBQzlFLE1BQU0sZUFBZSxHQUFHLFVBQVUsQ0FBb0Isb0JBQW9CLENBQUMsQ0FBQztBQUM1RSxNQUFNLGVBQWUsR0FBRyxVQUFVLENBQW9CLG9CQUFvQixDQUFDLENBQUM7QUFDNUUsTUFBTSxlQUFlLEdBQUcsVUFBVSxDQUFvQixvQkFBb0IsQ0FBQyxDQUFDO0FBQzVFLE1BQU0sZUFBZSxHQUFHLFVBQVUsQ0FBb0Isb0JBQW9CLENBQUMsQ0FBQztBQUM1RSxNQUFNLGVBQWUsR0FBRyxVQUFVLENBQW9CLG9CQUFvQixDQUFDLENBQUM7QUFFNUUsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFZO0lBQzNCLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2QiwwQkFBMEI7SUFDMUIsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsY0FBYztJQUNkLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixzQkFBc0I7SUFDdEIsb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsZUFBZTtJQUNmLGVBQWU7SUFDZixlQUFlO0lBQ2YsZUFBZTtDQUNOLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiBzcmMvZGF0YS9jb25zdHMvZG9tLnRzXG5cbmltcG9ydCB7IERPTURhdGEgfSBmcm9tICcuLi8uLi9pbmRleC9pbmRleC5qcyc7XG5pbXBvcnQgeyBkb21VdGlscyB9IGZyb20gJy4uLy4uL2NvbW1vbi9kb20vaW5kZXguanMnO1xuXG5jb25zdCBnZXRFbGVtZW50ID0gZG9tVXRpbHMuZ2V0RWxlbWVudDtcblxuY29uc3QgYWR2YW5jZWRNZW51QnV0dG9uID0gZ2V0RWxlbWVudDxIVE1MQnV0dG9uRWxlbWVudD4oXG5cdCdhZHZhbmNlZC1tZW51LWJ1dHRvbidcbik7XG5jb25zdCBhcHBseUN1c3RvbUNvbG9yQnV0dG9uID0gZ2V0RWxlbWVudDxIVE1MQnV0dG9uRWxlbWVudD4oXG5cdCdhcHBseS1jdXN0b20tY29sb3ItYnV0dG9uJ1xuKTtcbmNvbnN0IGNsZWFyQ3VzdG9tQ29sb3JCdXR0b24gPSBnZXRFbGVtZW50PEhUTUxCdXR0b25FbGVtZW50Pihcblx0J2NsZWFyLWN1c3RvbS1jb2xvci1idXR0b24nXG4pO1xuY29uc3QgY2xvc2VDdXN0b21Db2xvck1lbnVCdXR0b24gPSBnZXRFbGVtZW50PEhUTUxCdXR0b25FbGVtZW50Pihcblx0J2Nsb3NlLWN1c3RvbS1jb2xvci1tZW51LWJ1dHRvbidcbik7XG5jb25zdCBjbG9zZUFkdmFuY2VkTWVudUJ1dHRvbiA9IGdldEVsZW1lbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+KFxuXHQnY2xvc2UtYWR2YW5jZWQtbWVudS1idXR0b24nXG4pO1xuY29uc3QgY2xvc2VIZWxwTWVudUJ1dHRvbiA9IGdldEVsZW1lbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+KFxuXHQnY2xvc2UtaGVscC1tZW51LWJ1dHRvbidcbik7XG5jb25zdCBjbG9zZUhpc3RvcnlNZW51QnV0dG9uID0gZ2V0RWxlbWVudDxIVE1MQnV0dG9uRWxlbWVudD4oXG5cdCdjbG9zZS1oaXN0b3J5LW1lbnUtYnV0dG9uJ1xuKTtcbmNvbnN0IGN1c3RvbUNvbG9yRWxlbWVudCA9IGdldEVsZW1lbnQ8SFRNTElucHV0RWxlbWVudD4oJ2N1c3RvbS1jb2xvcicpO1xuY29uc3QgY3VzdG9tQ29sb3JNZW51QnV0dG9uID0gZ2V0RWxlbWVudDxIVE1MQnV0dG9uRWxlbWVudD4oXG5cdCdjdXN0b20tY29sb3ItbWVudS1idXR0b24nXG4pO1xuY29uc3QgZGVzYXR1cmF0ZUJ1dHRvbiA9IGdldEVsZW1lbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+KCdkZXNhdHVyYXRlLWJ1dHRvbicpO1xuY29uc3QgZW5hYmxlQWxwaGFDaGVja2JveCA9IGdldEVsZW1lbnQ8SFRNTElucHV0RWxlbWVudD4oXG5cdCdlbmFibGUtYWxwaGEtY2hlY2tib3gnXG4pO1xuY29uc3QgZ2VuZXJhdGVCdXR0b24gPSBnZXRFbGVtZW50PEhUTUxCdXR0b25FbGVtZW50PignZ2VuZXJhdGUtYnV0dG9uJyk7XG5jb25zdCBoZWxwTWVudUJ1dHRvbiA9IGdldEVsZW1lbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+KCdoZWxwLW1lbnUtYnV0dG9uJyk7XG5jb25zdCBoaXN0b3J5TWVudUJ1dHRvbiA9IGdldEVsZW1lbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+KCdoaXN0b3J5LW1lbnUtYnV0dG9uJyk7XG5jb25zdCBsaW1pdERhcmtuZXNzQ2hlY2tib3ggPSBnZXRFbGVtZW50PEhUTUxJbnB1dEVsZW1lbnQ+KFxuXHQnbGltaXQtZGFya25lc3MtY2hlY2tib3gnXG4pO1xuY29uc3QgbGltaXRHcmF5bmVzc0NoZWNrYm94ID0gZ2V0RWxlbWVudDxIVE1MSW5wdXRFbGVtZW50Pihcblx0J2xpbWl0LWdyYXluZXNzLWNoZWNrYm94J1xuKTtcbmNvbnN0IGxpbWl0TGlnaHRuZXNzQ2hlY2tib3ggPSBnZXRFbGVtZW50PEhUTUxJbnB1dEVsZW1lbnQ+KFxuXHQnbGltaXQtbGlnaHRuZXNzLWNoZWNrYm94J1xuKTtcbmNvbnN0IHBhbGV0dGVOdW1iZXJPcHRpb25zID0gZ2V0RWxlbWVudDxIVE1MSW5wdXRFbGVtZW50Pihcblx0J3BhbGV0dGUtbnVtYmVyLW9wdGlvbnMnXG4pO1xuY29uc3QgcGFsZXR0ZVR5cGVPcHRpb25zID0gZ2V0RWxlbWVudDxIVE1MU2VsZWN0RWxlbWVudD4oXG5cdCdwYWxldHRlLXR5cGUtb3B0aW9ucydcbik7XG5jb25zdCBzYXR1cmF0ZUJ1dHRvbiA9IGdldEVsZW1lbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+KCdzYXR1cmF0ZS1idXR0b24nKTtcbmNvbnN0IHNlbGVjdGVkQ29sb3JPcHRpb24gPSBnZXRFbGVtZW50PEhUTUxTZWxlY3RFbGVtZW50Pihcblx0J3NlbGVjdGVkLWNvbG9yLW9wdGlvbidcbik7XG5jb25zdCBzaG93QXNDTVlLQnV0dG9uID0gZ2V0RWxlbWVudDxIVE1MQnV0dG9uRWxlbWVudD4oJ3Nob3ctYXMtY215ay1idXR0b24nKTtcbmNvbnN0IHNob3dBc0hleEJ1dHRvbiA9IGdldEVsZW1lbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+KCdzaG93LWFzLWhleC1idXR0b24nKTtcbmNvbnN0IHNob3dBc0hTTEJ1dHRvbiA9IGdldEVsZW1lbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+KCdzaG93LWFzLWhzbC1idXR0b24nKTtcbmNvbnN0IHNob3dBc0hTVkJ1dHRvbiA9IGdldEVsZW1lbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+KCdzaG93LWFzLWhzdi1idXR0b24nKTtcbmNvbnN0IHNob3dBc0xBQkJ1dHRvbiA9IGdldEVsZW1lbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+KCdzaG93LWFzLWxhYi1idXR0b24nKTtcbmNvbnN0IHNob3dBc1JHQkJ1dHRvbiA9IGdldEVsZW1lbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+KCdzaG93LWFzLXJnYi1idXR0b24nKTtcblxuZXhwb3J0IGNvbnN0IGRvbTogRE9NRGF0YSA9IHtcblx0YWR2YW5jZWRNZW51QnV0dG9uLFxuXHRhcHBseUN1c3RvbUNvbG9yQnV0dG9uLFxuXHRjbGVhckN1c3RvbUNvbG9yQnV0dG9uLFxuXHRjbG9zZUFkdmFuY2VkTWVudUJ1dHRvbixcblx0Y2xvc2VDdXN0b21Db2xvck1lbnVCdXR0b24sXG5cdGNsb3NlSGVscE1lbnVCdXR0b24sXG5cdGNsb3NlSGlzdG9yeU1lbnVCdXR0b24sXG5cdGN1c3RvbUNvbG9yRWxlbWVudCxcblx0Y3VzdG9tQ29sb3JNZW51QnV0dG9uLFxuXHRkZXNhdHVyYXRlQnV0dG9uLFxuXHRlbmFibGVBbHBoYUNoZWNrYm94LFxuXHRnZW5lcmF0ZUJ1dHRvbixcblx0aGVscE1lbnVCdXR0b24sXG5cdGhpc3RvcnlNZW51QnV0dG9uLFxuXHRsaW1pdERhcmtuZXNzQ2hlY2tib3gsXG5cdGxpbWl0R3JheW5lc3NDaGVja2JveCxcblx0bGltaXRMaWdodG5lc3NDaGVja2JveCxcblx0cGFsZXR0ZU51bWJlck9wdGlvbnMsXG5cdHBhbGV0dGVUeXBlT3B0aW9ucyxcblx0c2F0dXJhdGVCdXR0b24sXG5cdHNlbGVjdGVkQ29sb3JPcHRpb24sXG5cdHNob3dBc0NNWUtCdXR0b24sXG5cdHNob3dBc0hleEJ1dHRvbixcblx0c2hvd0FzSFNMQnV0dG9uLFxuXHRzaG93QXNIU1ZCdXR0b24sXG5cdHNob3dBc0xBQkJ1dHRvbixcblx0c2hvd0FzUkdCQnV0dG9uXG59IGFzIGNvbnN0O1xuIl19