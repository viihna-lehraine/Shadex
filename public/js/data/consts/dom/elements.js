// File: src/data/consts/dom/elements.js
import { domUtils } from '../../../common/dom/index.js';
const getElement = domUtils.getElement;
const advancedMenu = getElement('advanced-menu');
const advancedMenuButton = getElement('advanced-menu-button');
const advancedMenuContent = getElement('advanced-menu-content');
const applyCustomColorButton = getElement('apply-custom-color-button');
const clearCustomColorButton = getElement('clear-custom-color-button');
const customColorDisplay = getElement('custom-color-display');
const customColorInput = getElement('custom-color-input');
const customColorMenu = getElement('custom-color-menu');
const customColorMenuButton = getElement('custom-color-menu-button');
const deleteDatabaseButton = getElement('delete-database-button');
const desaturateButton = getElement('desaturate-button');
const developerMenu = getElement('developer-menu');
const developerMenuButton = getElement('developer-menu-button');
const enableAlphaCheckbox = getElement('enable-alpha-checkbox');
const generateButton = getElement('generate-button');
const helpMenu = getElement('help-menu');
const helpMenuButton = getElement('help-menu-button');
const helpMenuContent = getElement('help-menu-content');
const historyMenu = getElement('history-menu');
const historyMenuButton = getElement('history-menu-button');
const historyMenuContent = getElement('history-menu-content');
const limitDarknessCheckbox = getElement('limit-darkness-checkbox');
const limitGraynessCheckbox = getElement('limit-grayness-checkbox');
const limitLightnessCheckbox = getElement('limit-lightness-checkbox');
const paletteNumberOptions = getElement('palette-number-options');
const paletteTypeOptions = getElement('palette-type-options');
const resetDatabaseButton = getElement('reset-database-button');
const resetPaletteIDButton = getElement('reset-palette-id-button');
const saturateButton = getElement('saturate-button');
const selectedColorOption = getElement('selected-color-option');
const showAsCMYKButton = getElement('show-as-cmyk-button');
const showAsHexButton = getElement('show-as-hex-button');
const showAsHSLButton = getElement('show-as-hsl-button');
const showAsHSVButton = getElement('show-as-hsv-button');
const showAsLABButton = getElement('show-as-lab-button');
const showAsRGBButton = getElement('show-as-rgb-button');
export const domElements = {
    advancedMenu,
    advancedMenuButton,
    advancedMenuContent,
    applyCustomColorButton,
    clearCustomColorButton,
    customColorDisplay,
    customColorInput,
    customColorMenu,
    customColorMenuButton,
    deleteDatabaseButton,
    desaturateButton,
    developerMenu,
    developerMenuButton,
    enableAlphaCheckbox,
    generateButton,
    helpMenu,
    helpMenuButton,
    helpMenuContent,
    historyMenu,
    historyMenuButton,
    historyMenuContent,
    limitDarknessCheckbox,
    limitGraynessCheckbox,
    limitLightnessCheckbox,
    paletteNumberOptions,
    paletteTypeOptions,
    resetDatabaseButton,
    resetPaletteIDButton,
    saturateButton,
    selectedColorOption,
    showAsCMYKButton,
    showAsHexButton,
    showAsHSLButton,
    showAsHSVButton,
    showAsLABButton,
    showAsRGBButton
};
//# sourceMappingURL=data:application/json;base64,