// File: src/data/consts/dom/IDs.js
const advancedMenuButton = 'advanced-menu-button';
const applyCustomColorButton = 'apply-custom-color-button';
const clearCustomColorButton = 'clear-custom-color-button';
const closeAdvancedMenuButton = 'close-advanced-menu-button';
const closeCustomColorMenuButton = 'close-custom-color-menu-button';
const closeDeveloperMenuButton = 'close-developer-menu-button';
const closeHelpMenuButton = 'close-help-menu-button';
const closeHistoryMenuButton = 'close-history-menu-button';
const customColorElement = 'custom-color';
const customColorMenuButton = 'custom-color-menu-button';
const desaturateButton = 'desaturate-button';
const developerMenuButton = 'developer-menu-button';
const enableAlphaCheckbox = 'enable-alpha-checkbox';
const generateButton = 'generate-button';
const helpMenuButton = 'help-menu-button';
const historyMenuButton = 'history-menu-button';
const limitDarknessCheckbox = 'limit-darkness-checkbox';
const limitGraynessCheckbox = 'limit-grayness-checkbox';
const limitLightnessCheckbox = 'limit-lightness-checkbox';
const paletteNumberOptions = 'palette-number-options';
const paletteTypeOptions = 'palette-type-options';
const resetButton = 'reset-button';
const saturateButton = 'saturate-button';
const selectedColorOption = 'selected-color-option';
const showAsCMYKButton = 'show-as-cmyk-button';
const showAsHexButton = 'show-as-hex-button';
const showAsHSLButton = 'show-as-hsl-button';
const showAsHSVButton = 'show-as-hsv-button';
const showAsLABButton = 'show-as-lab-button';
const showAsRGBButton = 'show-as-rgb-button';
export const domIDs = {
    advancedMenuButton,
    applyCustomColorButton,
    clearCustomColorButton,
    closeAdvancedMenuButton,
    closeCustomColorMenuButton,
    closeDeveloperMenuButton,
    closeHelpMenuButton,
    closeHistoryMenuButton,
    customColorElement,
    customColorMenuButton,
    desaturateButton,
    developerMenuButton,
    enableAlphaCheckbox,
    generateButton,
    helpMenuButton,
    historyMenuButton,
    limitDarknessCheckbox,
    limitGraynessCheckbox,
    limitLightnessCheckbox,
    paletteNumberOptions,
    paletteTypeOptions,
    resetButton,
    saturateButton,
    selectedColorOption,
    showAsCMYKButton,
    showAsHexButton,
    showAsHSLButton,
    showAsHSVButton,
    showAsLABButton,
    showAsRGBButton
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSURzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2RhdGEvY29uc3RzL2RvbS9JRHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUNBQW1DO0FBSW5DLE1BQU0sa0JBQWtCLEdBQUcsc0JBQXNCLENBQUM7QUFDbEQsTUFBTSxzQkFBc0IsR0FBRywyQkFBMkIsQ0FBQztBQUMzRCxNQUFNLHNCQUFzQixHQUFHLDJCQUEyQixDQUFDO0FBQzNELE1BQU0sdUJBQXVCLEdBQUcsNEJBQTRCLENBQUM7QUFDN0QsTUFBTSwwQkFBMEIsR0FBRyxnQ0FBZ0MsQ0FBQztBQUNwRSxNQUFNLHdCQUF3QixHQUFHLDZCQUE2QixDQUFDO0FBQy9ELE1BQU0sbUJBQW1CLEdBQUcsd0JBQXdCLENBQUM7QUFDckQsTUFBTSxzQkFBc0IsR0FBRywyQkFBMkIsQ0FBQztBQUMzRCxNQUFNLGtCQUFrQixHQUFHLGNBQWMsQ0FBQztBQUMxQyxNQUFNLHFCQUFxQixHQUFHLDBCQUEwQixDQUFDO0FBQ3pELE1BQU0sZ0JBQWdCLEdBQUcsbUJBQW1CLENBQUM7QUFDN0MsTUFBTSxtQkFBbUIsR0FBRyx1QkFBdUIsQ0FBQztBQUNwRCxNQUFNLG1CQUFtQixHQUFHLHVCQUF1QixDQUFDO0FBQ3BELE1BQU0sY0FBYyxHQUFHLGlCQUFpQixDQUFDO0FBQ3pDLE1BQU0sY0FBYyxHQUFHLGtCQUFrQixDQUFDO0FBQzFDLE1BQU0saUJBQWlCLEdBQUcscUJBQXFCLENBQUM7QUFDaEQsTUFBTSxxQkFBcUIsR0FBRyx5QkFBeUIsQ0FBQztBQUN4RCxNQUFNLHFCQUFxQixHQUFHLHlCQUF5QixDQUFDO0FBQ3hELE1BQU0sc0JBQXNCLEdBQUcsMEJBQTBCLENBQUM7QUFDMUQsTUFBTSxvQkFBb0IsR0FBRyx3QkFBd0IsQ0FBQztBQUN0RCxNQUFNLGtCQUFrQixHQUFHLHNCQUFzQixDQUFDO0FBQ2xELE1BQU0sV0FBVyxHQUFHLGNBQWMsQ0FBQztBQUNuQyxNQUFNLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQztBQUN6QyxNQUFNLG1CQUFtQixHQUFHLHVCQUF1QixDQUFDO0FBQ3BELE1BQU0sZ0JBQWdCLEdBQUcscUJBQXFCLENBQUM7QUFDL0MsTUFBTSxlQUFlLEdBQUcsb0JBQW9CLENBQUM7QUFDN0MsTUFBTSxlQUFlLEdBQUcsb0JBQW9CLENBQUM7QUFDN0MsTUFBTSxlQUFlLEdBQUcsb0JBQW9CLENBQUM7QUFDN0MsTUFBTSxlQUFlLEdBQUcsb0JBQW9CLENBQUM7QUFDN0MsTUFBTSxlQUFlLEdBQUcsb0JBQW9CLENBQUM7QUFFN0MsTUFBTSxDQUFDLE1BQU0sTUFBTSxHQUFnQjtJQUNsQyxrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsMEJBQTBCO0lBQzFCLHdCQUF3QjtJQUN4QixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsY0FBYztJQUNkLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixzQkFBc0I7SUFDdEIsb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsY0FBYztJQUNkLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGVBQWU7SUFDZixlQUFlO0lBQ2YsZUFBZTtJQUNmLGVBQWU7Q0FDTixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZTogc3JjL2RhdGEvY29uc3RzL2RvbS9JRHMuanNcblxuaW1wb3J0IHsgRE9NX0lEX0RhdGEgfSBmcm9tICcuLi8uLi8uLi9pbmRleC9pbmRleC5qcyc7XG5cbmNvbnN0IGFkdmFuY2VkTWVudUJ1dHRvbiA9ICdhZHZhbmNlZC1tZW51LWJ1dHRvbic7XG5jb25zdCBhcHBseUN1c3RvbUNvbG9yQnV0dG9uID0gJ2FwcGx5LWN1c3RvbS1jb2xvci1idXR0b24nO1xuY29uc3QgY2xlYXJDdXN0b21Db2xvckJ1dHRvbiA9ICdjbGVhci1jdXN0b20tY29sb3ItYnV0dG9uJztcbmNvbnN0IGNsb3NlQWR2YW5jZWRNZW51QnV0dG9uID0gJ2Nsb3NlLWFkdmFuY2VkLW1lbnUtYnV0dG9uJztcbmNvbnN0IGNsb3NlQ3VzdG9tQ29sb3JNZW51QnV0dG9uID0gJ2Nsb3NlLWN1c3RvbS1jb2xvci1tZW51LWJ1dHRvbic7XG5jb25zdCBjbG9zZURldmVsb3Blck1lbnVCdXR0b24gPSAnY2xvc2UtZGV2ZWxvcGVyLW1lbnUtYnV0dG9uJztcbmNvbnN0IGNsb3NlSGVscE1lbnVCdXR0b24gPSAnY2xvc2UtaGVscC1tZW51LWJ1dHRvbic7XG5jb25zdCBjbG9zZUhpc3RvcnlNZW51QnV0dG9uID0gJ2Nsb3NlLWhpc3RvcnktbWVudS1idXR0b24nO1xuY29uc3QgY3VzdG9tQ29sb3JFbGVtZW50ID0gJ2N1c3RvbS1jb2xvcic7XG5jb25zdCBjdXN0b21Db2xvck1lbnVCdXR0b24gPSAnY3VzdG9tLWNvbG9yLW1lbnUtYnV0dG9uJztcbmNvbnN0IGRlc2F0dXJhdGVCdXR0b24gPSAnZGVzYXR1cmF0ZS1idXR0b24nO1xuY29uc3QgZGV2ZWxvcGVyTWVudUJ1dHRvbiA9ICdkZXZlbG9wZXItbWVudS1idXR0b24nO1xuY29uc3QgZW5hYmxlQWxwaGFDaGVja2JveCA9ICdlbmFibGUtYWxwaGEtY2hlY2tib3gnO1xuY29uc3QgZ2VuZXJhdGVCdXR0b24gPSAnZ2VuZXJhdGUtYnV0dG9uJztcbmNvbnN0IGhlbHBNZW51QnV0dG9uID0gJ2hlbHAtbWVudS1idXR0b24nO1xuY29uc3QgaGlzdG9yeU1lbnVCdXR0b24gPSAnaGlzdG9yeS1tZW51LWJ1dHRvbic7XG5jb25zdCBsaW1pdERhcmtuZXNzQ2hlY2tib3ggPSAnbGltaXQtZGFya25lc3MtY2hlY2tib3gnO1xuY29uc3QgbGltaXRHcmF5bmVzc0NoZWNrYm94ID0gJ2xpbWl0LWdyYXluZXNzLWNoZWNrYm94JztcbmNvbnN0IGxpbWl0TGlnaHRuZXNzQ2hlY2tib3ggPSAnbGltaXQtbGlnaHRuZXNzLWNoZWNrYm94JztcbmNvbnN0IHBhbGV0dGVOdW1iZXJPcHRpb25zID0gJ3BhbGV0dGUtbnVtYmVyLW9wdGlvbnMnO1xuY29uc3QgcGFsZXR0ZVR5cGVPcHRpb25zID0gJ3BhbGV0dGUtdHlwZS1vcHRpb25zJztcbmNvbnN0IHJlc2V0QnV0dG9uID0gJ3Jlc2V0LWJ1dHRvbic7XG5jb25zdCBzYXR1cmF0ZUJ1dHRvbiA9ICdzYXR1cmF0ZS1idXR0b24nO1xuY29uc3Qgc2VsZWN0ZWRDb2xvck9wdGlvbiA9ICdzZWxlY3RlZC1jb2xvci1vcHRpb24nO1xuY29uc3Qgc2hvd0FzQ01ZS0J1dHRvbiA9ICdzaG93LWFzLWNteWstYnV0dG9uJztcbmNvbnN0IHNob3dBc0hleEJ1dHRvbiA9ICdzaG93LWFzLWhleC1idXR0b24nO1xuY29uc3Qgc2hvd0FzSFNMQnV0dG9uID0gJ3Nob3ctYXMtaHNsLWJ1dHRvbic7XG5jb25zdCBzaG93QXNIU1ZCdXR0b24gPSAnc2hvdy1hcy1oc3YtYnV0dG9uJztcbmNvbnN0IHNob3dBc0xBQkJ1dHRvbiA9ICdzaG93LWFzLWxhYi1idXR0b24nO1xuY29uc3Qgc2hvd0FzUkdCQnV0dG9uID0gJ3Nob3ctYXMtcmdiLWJ1dHRvbic7XG5cbmV4cG9ydCBjb25zdCBkb21JRHM6IERPTV9JRF9EYXRhID0ge1xuXHRhZHZhbmNlZE1lbnVCdXR0b24sXG5cdGFwcGx5Q3VzdG9tQ29sb3JCdXR0b24sXG5cdGNsZWFyQ3VzdG9tQ29sb3JCdXR0b24sXG5cdGNsb3NlQWR2YW5jZWRNZW51QnV0dG9uLFxuXHRjbG9zZUN1c3RvbUNvbG9yTWVudUJ1dHRvbixcblx0Y2xvc2VEZXZlbG9wZXJNZW51QnV0dG9uLFxuXHRjbG9zZUhlbHBNZW51QnV0dG9uLFxuXHRjbG9zZUhpc3RvcnlNZW51QnV0dG9uLFxuXHRjdXN0b21Db2xvckVsZW1lbnQsXG5cdGN1c3RvbUNvbG9yTWVudUJ1dHRvbixcblx0ZGVzYXR1cmF0ZUJ1dHRvbixcblx0ZGV2ZWxvcGVyTWVudUJ1dHRvbixcblx0ZW5hYmxlQWxwaGFDaGVja2JveCxcblx0Z2VuZXJhdGVCdXR0b24sXG5cdGhlbHBNZW51QnV0dG9uLFxuXHRoaXN0b3J5TWVudUJ1dHRvbixcblx0bGltaXREYXJrbmVzc0NoZWNrYm94LFxuXHRsaW1pdEdyYXluZXNzQ2hlY2tib3gsXG5cdGxpbWl0TGlnaHRuZXNzQ2hlY2tib3gsXG5cdHBhbGV0dGVOdW1iZXJPcHRpb25zLFxuXHRwYWxldHRlVHlwZU9wdGlvbnMsXG5cdHJlc2V0QnV0dG9uLFxuXHRzYXR1cmF0ZUJ1dHRvbixcblx0c2VsZWN0ZWRDb2xvck9wdGlvbixcblx0c2hvd0FzQ01ZS0J1dHRvbixcblx0c2hvd0FzSGV4QnV0dG9uLFxuXHRzaG93QXNIU0xCdXR0b24sXG5cdHNob3dBc0hTVkJ1dHRvbixcblx0c2hvd0FzTEFCQnV0dG9uLFxuXHRzaG93QXNSR0JCdXR0b25cbn0gYXMgY29uc3Q7XG4iXX0=