// File: src/data/consts/dom/IDs.js
const advancedMenuButton = 'advanced-menu-button';
const applyCustomColorButton = 'apply-custom-color-button';
const clearCustomColorButton = 'clear-custom-color-button';
const closeAdvancedMenuButton = 'close-advanced-menu-button';
const closeCustomColorMenuButton = 'close-custom-color-menu-button';
const closeHelpMenuButton = 'close-help-menu-button';
const closeHistoryMenuButton = 'close-history-menu-button';
const customColorElement = 'custom-color';
const customColorMenuButton = 'custom-color-menu-button';
const desaturateButton = 'desaturate-button';
const enableAlphaCheckbox = 'enable-alpha-checkbox';
const generateButton = 'generate-button';
const helpMenuButton = 'help-menu-button';
const historyMenuButton = 'history-menu-button';
const limitDarknessCheckbox = 'limit-darkness-checkbox';
const limitGraynessCheckbox = 'limit-grayness-checkbox';
const limitLightnessCheckbox = 'limit-lightness-checkbox';
const paletteNumberOptions = 'palette-number-options';
const paletteTypeOptions = 'palette-type-options';
const saturateButton = 'saturate-button';
const selectedColorOption = 'selected-color-option';
const showAsCMYKButton = 'show-as-cmyk-button';
const showAsHexButton = 'show-as-hex-button';
const showAsHSLButton = 'show-as-hsl-button';
const showAsHSVButton = 'show-as-hsv-button';
const showAsLABButton = 'show-as-lab-button';
const showAsRGBButton = 'show-as-rgb-button';
export const domIDs = {
    advancedMenuButton,
    applyCustomColorButton,
    clearCustomColorButton,
    closeAdvancedMenuButton,
    closeCustomColorMenuButton,
    closeHelpMenuButton,
    closeHistoryMenuButton,
    customColorElement,
    customColorMenuButton,
    desaturateButton,
    enableAlphaCheckbox,
    generateButton,
    helpMenuButton,
    historyMenuButton,
    limitDarknessCheckbox,
    limitGraynessCheckbox,
    limitLightnessCheckbox,
    paletteNumberOptions,
    paletteTypeOptions,
    saturateButton,
    selectedColorOption,
    showAsCMYKButton,
    showAsHexButton,
    showAsHSLButton,
    showAsHSVButton,
    showAsLABButton,
    showAsRGBButton
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSURzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2RhdGEvY29uc3RzL2RvbS9JRHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUNBQW1DO0FBSW5DLE1BQU0sa0JBQWtCLEdBQUcsc0JBQXNCLENBQUM7QUFDbEQsTUFBTSxzQkFBc0IsR0FBRywyQkFBMkIsQ0FBQztBQUMzRCxNQUFNLHNCQUFzQixHQUFHLDJCQUEyQixDQUFDO0FBQzNELE1BQU0sdUJBQXVCLEdBQUcsNEJBQTRCLENBQUM7QUFDN0QsTUFBTSwwQkFBMEIsR0FBRyxnQ0FBZ0MsQ0FBQztBQUNwRSxNQUFNLG1CQUFtQixHQUFHLHdCQUF3QixDQUFDO0FBQ3JELE1BQU0sc0JBQXNCLEdBQUcsMkJBQTJCLENBQUM7QUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxjQUFjLENBQUM7QUFDMUMsTUFBTSxxQkFBcUIsR0FBRywwQkFBMEIsQ0FBQztBQUN6RCxNQUFNLGdCQUFnQixHQUFHLG1CQUFtQixDQUFDO0FBQzdDLE1BQU0sbUJBQW1CLEdBQUcsdUJBQXVCLENBQUM7QUFDcEQsTUFBTSxjQUFjLEdBQUcsaUJBQWlCLENBQUM7QUFDekMsTUFBTSxjQUFjLEdBQUcsa0JBQWtCLENBQUM7QUFDMUMsTUFBTSxpQkFBaUIsR0FBRyxxQkFBcUIsQ0FBQztBQUNoRCxNQUFNLHFCQUFxQixHQUFHLHlCQUF5QixDQUFDO0FBQ3hELE1BQU0scUJBQXFCLEdBQUcseUJBQXlCLENBQUM7QUFDeEQsTUFBTSxzQkFBc0IsR0FBRywwQkFBMEIsQ0FBQztBQUMxRCxNQUFNLG9CQUFvQixHQUFHLHdCQUF3QixDQUFDO0FBQ3RELE1BQU0sa0JBQWtCLEdBQUcsc0JBQXNCLENBQUM7QUFDbEQsTUFBTSxjQUFjLEdBQUcsaUJBQWlCLENBQUM7QUFDekMsTUFBTSxtQkFBbUIsR0FBRyx1QkFBdUIsQ0FBQztBQUNwRCxNQUFNLGdCQUFnQixHQUFHLHFCQUFxQixDQUFDO0FBQy9DLE1BQU0sZUFBZSxHQUFHLG9CQUFvQixDQUFDO0FBQzdDLE1BQU0sZUFBZSxHQUFHLG9CQUFvQixDQUFDO0FBQzdDLE1BQU0sZUFBZSxHQUFHLG9CQUFvQixDQUFDO0FBQzdDLE1BQU0sZUFBZSxHQUFHLG9CQUFvQixDQUFDO0FBQzdDLE1BQU0sZUFBZSxHQUFHLG9CQUFvQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBZ0I7SUFDbEMsa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLDBCQUEwQjtJQUMxQixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2QsY0FBYztJQUNkLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0QixvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixlQUFlO0lBQ2YsZUFBZTtJQUNmLGVBQWU7SUFDZixlQUFlO0NBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGU6IHNyYy9kYXRhL2NvbnN0cy9kb20vSURzLmpzXG5cbmltcG9ydCB7IERPTV9JRF9EYXRhIH0gZnJvbSAnLi4vLi4vLi4vaW5kZXgvaW5kZXguanMnO1xuXG5jb25zdCBhZHZhbmNlZE1lbnVCdXR0b24gPSAnYWR2YW5jZWQtbWVudS1idXR0b24nO1xuY29uc3QgYXBwbHlDdXN0b21Db2xvckJ1dHRvbiA9ICdhcHBseS1jdXN0b20tY29sb3ItYnV0dG9uJztcbmNvbnN0IGNsZWFyQ3VzdG9tQ29sb3JCdXR0b24gPSAnY2xlYXItY3VzdG9tLWNvbG9yLWJ1dHRvbic7XG5jb25zdCBjbG9zZUFkdmFuY2VkTWVudUJ1dHRvbiA9ICdjbG9zZS1hZHZhbmNlZC1tZW51LWJ1dHRvbic7XG5jb25zdCBjbG9zZUN1c3RvbUNvbG9yTWVudUJ1dHRvbiA9ICdjbG9zZS1jdXN0b20tY29sb3ItbWVudS1idXR0b24nO1xuY29uc3QgY2xvc2VIZWxwTWVudUJ1dHRvbiA9ICdjbG9zZS1oZWxwLW1lbnUtYnV0dG9uJztcbmNvbnN0IGNsb3NlSGlzdG9yeU1lbnVCdXR0b24gPSAnY2xvc2UtaGlzdG9yeS1tZW51LWJ1dHRvbic7XG5jb25zdCBjdXN0b21Db2xvckVsZW1lbnQgPSAnY3VzdG9tLWNvbG9yJztcbmNvbnN0IGN1c3RvbUNvbG9yTWVudUJ1dHRvbiA9ICdjdXN0b20tY29sb3ItbWVudS1idXR0b24nO1xuY29uc3QgZGVzYXR1cmF0ZUJ1dHRvbiA9ICdkZXNhdHVyYXRlLWJ1dHRvbic7XG5jb25zdCBlbmFibGVBbHBoYUNoZWNrYm94ID0gJ2VuYWJsZS1hbHBoYS1jaGVja2JveCc7XG5jb25zdCBnZW5lcmF0ZUJ1dHRvbiA9ICdnZW5lcmF0ZS1idXR0b24nO1xuY29uc3QgaGVscE1lbnVCdXR0b24gPSAnaGVscC1tZW51LWJ1dHRvbic7XG5jb25zdCBoaXN0b3J5TWVudUJ1dHRvbiA9ICdoaXN0b3J5LW1lbnUtYnV0dG9uJztcbmNvbnN0IGxpbWl0RGFya25lc3NDaGVja2JveCA9ICdsaW1pdC1kYXJrbmVzcy1jaGVja2JveCc7XG5jb25zdCBsaW1pdEdyYXluZXNzQ2hlY2tib3ggPSAnbGltaXQtZ3JheW5lc3MtY2hlY2tib3gnO1xuY29uc3QgbGltaXRMaWdodG5lc3NDaGVja2JveCA9ICdsaW1pdC1saWdodG5lc3MtY2hlY2tib3gnO1xuY29uc3QgcGFsZXR0ZU51bWJlck9wdGlvbnMgPSAncGFsZXR0ZS1udW1iZXItb3B0aW9ucyc7XG5jb25zdCBwYWxldHRlVHlwZU9wdGlvbnMgPSAncGFsZXR0ZS10eXBlLW9wdGlvbnMnO1xuY29uc3Qgc2F0dXJhdGVCdXR0b24gPSAnc2F0dXJhdGUtYnV0dG9uJztcbmNvbnN0IHNlbGVjdGVkQ29sb3JPcHRpb24gPSAnc2VsZWN0ZWQtY29sb3Itb3B0aW9uJztcbmNvbnN0IHNob3dBc0NNWUtCdXR0b24gPSAnc2hvdy1hcy1jbXlrLWJ1dHRvbic7XG5jb25zdCBzaG93QXNIZXhCdXR0b24gPSAnc2hvdy1hcy1oZXgtYnV0dG9uJztcbmNvbnN0IHNob3dBc0hTTEJ1dHRvbiA9ICdzaG93LWFzLWhzbC1idXR0b24nO1xuY29uc3Qgc2hvd0FzSFNWQnV0dG9uID0gJ3Nob3ctYXMtaHN2LWJ1dHRvbic7XG5jb25zdCBzaG93QXNMQUJCdXR0b24gPSAnc2hvdy1hcy1sYWItYnV0dG9uJztcbmNvbnN0IHNob3dBc1JHQkJ1dHRvbiA9ICdzaG93LWFzLXJnYi1idXR0b24nO1xuXG5leHBvcnQgY29uc3QgZG9tSURzOiBET01fSURfRGF0YSA9IHtcblx0YWR2YW5jZWRNZW51QnV0dG9uLFxuXHRhcHBseUN1c3RvbUNvbG9yQnV0dG9uLFxuXHRjbGVhckN1c3RvbUNvbG9yQnV0dG9uLFxuXHRjbG9zZUFkdmFuY2VkTWVudUJ1dHRvbixcblx0Y2xvc2VDdXN0b21Db2xvck1lbnVCdXR0b24sXG5cdGNsb3NlSGVscE1lbnVCdXR0b24sXG5cdGNsb3NlSGlzdG9yeU1lbnVCdXR0b24sXG5cdGN1c3RvbUNvbG9yRWxlbWVudCxcblx0Y3VzdG9tQ29sb3JNZW51QnV0dG9uLFxuXHRkZXNhdHVyYXRlQnV0dG9uLFxuXHRlbmFibGVBbHBoYUNoZWNrYm94LFxuXHRnZW5lcmF0ZUJ1dHRvbixcblx0aGVscE1lbnVCdXR0b24sXG5cdGhpc3RvcnlNZW51QnV0dG9uLFxuXHRsaW1pdERhcmtuZXNzQ2hlY2tib3gsXG5cdGxpbWl0R3JheW5lc3NDaGVja2JveCxcblx0bGltaXRMaWdodG5lc3NDaGVja2JveCxcblx0cGFsZXR0ZU51bWJlck9wdGlvbnMsXG5cdHBhbGV0dGVUeXBlT3B0aW9ucyxcblx0c2F0dXJhdGVCdXR0b24sXG5cdHNlbGVjdGVkQ29sb3JPcHRpb24sXG5cdHNob3dBc0NNWUtCdXR0b24sXG5cdHNob3dBc0hleEJ1dHRvbixcblx0c2hvd0FzSFNMQnV0dG9uLFxuXHRzaG93QXNIU1ZCdXR0b24sXG5cdHNob3dBc0xBQkJ1dHRvbixcblx0c2hvd0FzUkdCQnV0dG9uXG59IGFzIGNvbnN0O1xuIl19