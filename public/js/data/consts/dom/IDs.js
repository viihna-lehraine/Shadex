// File: src/data/consts/dom/IDs.js
const advancedMenu = 'advanced-menu';
const advancedMenuButton = 'advanced-menu-button';
const applyCustomColorButton = 'apply-custom-color-button';
const clearCustomColorButton = 'clear-custom-color-button';
const closeAdvancedMenuButton = 'close-advanced-menu-button';
const closeCustomColorMenuButton = 'close-custom-color-menu-button';
const closeDeveloperMenuButton = 'close-developer-menu-button';
const closeHelpMenuButton = 'close-help-menu-button';
const closeHistoryMenuButton = 'close-history-menu-button';
const customColorDisplay = 'custom-color-display';
const customColorInput = 'custom-color-input';
const customColorMenu = 'custom-color-menu';
const customColorMenuButton = 'custom-color-menu-button';
const deleteDatabaseButton = 'delete-database-button';
const desaturateButton = 'desaturate-button';
const developerMenu = 'developer-menu';
const developerMenuButton = 'developer-menu-button';
const enableAlphaCheckbox = 'enable-alpha-checkbox';
const generateButton = 'generate-button';
const helpMenu = 'help-menu';
const helpMenuButton = 'help-menu-button';
const historyMenu = 'history-menu';
const historyMenuButton = 'history-menu-button';
const limitDarknessCheckbox = 'limit-darkness-checkbox';
const limitGraynessCheckbox = 'limit-grayness-checkbox';
const limitLightnessCheckbox = 'limit-lightness-checkbox';
const paletteNumberOptions = 'palette-number-options';
const paletteTypeOptions = 'palette-type-options';
const resetButton = 'reset-button';
const resetPaletteIDButton = 'reset-palette-id-button';
const saturateButton = 'saturate-button';
const selectedColorOption = 'selected-color-option';
const showAsCMYKButton = 'show-as-cmyk-button';
const showAsHexButton = 'show-as-hex-button';
const showAsHSLButton = 'show-as-hsl-button';
const showAsHSVButton = 'show-as-hsv-button';
const showAsLABButton = 'show-as-lab-button';
const showAsRGBButton = 'show-as-rgb-button';
export const domIDs = {
    advancedMenu,
    advancedMenuButton,
    applyCustomColorButton,
    clearCustomColorButton,
    closeAdvancedMenuButton,
    closeCustomColorMenuButton,
    closeDeveloperMenuButton,
    closeHelpMenuButton,
    closeHistoryMenuButton,
    customColorDisplay,
    customColorInput,
    customColorMenu,
    customColorMenuButton,
    deleteDatabaseButton,
    desaturateButton,
    developerMenu,
    developerMenuButton,
    enableAlphaCheckbox,
    generateButton,
    helpMenu,
    helpMenuButton,
    historyMenu,
    historyMenuButton,
    limitDarknessCheckbox,
    limitGraynessCheckbox,
    limitLightnessCheckbox,
    paletteNumberOptions,
    paletteTypeOptions,
    resetButton,
    resetPaletteIDButton,
    saturateButton,
    selectedColorOption,
    showAsCMYKButton,
    showAsHexButton,
    showAsHSLButton,
    showAsHSVButton,
    showAsLABButton,
    showAsRGBButton
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSURzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2RhdGEvY29uc3RzL2RvbS9JRHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUNBQW1DO0FBSW5DLE1BQU0sWUFBWSxHQUFHLGVBQWUsQ0FBQztBQUNyQyxNQUFNLGtCQUFrQixHQUFHLHNCQUFzQixDQUFDO0FBQ2xELE1BQU0sc0JBQXNCLEdBQUcsMkJBQTJCLENBQUM7QUFDM0QsTUFBTSxzQkFBc0IsR0FBRywyQkFBMkIsQ0FBQztBQUMzRCxNQUFNLHVCQUF1QixHQUFHLDRCQUE0QixDQUFDO0FBQzdELE1BQU0sMEJBQTBCLEdBQUcsZ0NBQWdDLENBQUM7QUFDcEUsTUFBTSx3QkFBd0IsR0FBRyw2QkFBNkIsQ0FBQztBQUMvRCxNQUFNLG1CQUFtQixHQUFHLHdCQUF3QixDQUFDO0FBQ3JELE1BQU0sc0JBQXNCLEdBQUcsMkJBQTJCLENBQUM7QUFDM0QsTUFBTSxrQkFBa0IsR0FBRyxzQkFBc0IsQ0FBQztBQUNsRCxNQUFNLGdCQUFnQixHQUFHLG9CQUFvQixDQUFDO0FBQzlDLE1BQU0sZUFBZSxHQUFHLG1CQUFtQixDQUFDO0FBQzVDLE1BQU0scUJBQXFCLEdBQUcsMEJBQTBCLENBQUM7QUFDekQsTUFBTSxvQkFBb0IsR0FBRyx3QkFBd0IsQ0FBQztBQUN0RCxNQUFNLGdCQUFnQixHQUFHLG1CQUFtQixDQUFDO0FBQzdDLE1BQU0sYUFBYSxHQUFHLGdCQUFnQixDQUFDO0FBQ3ZDLE1BQU0sbUJBQW1CLEdBQUcsdUJBQXVCLENBQUM7QUFDcEQsTUFBTSxtQkFBbUIsR0FBRyx1QkFBdUIsQ0FBQztBQUNwRCxNQUFNLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQztBQUN6QyxNQUFNLFFBQVEsR0FBRyxXQUFXLENBQUM7QUFDN0IsTUFBTSxjQUFjLEdBQUcsa0JBQWtCLENBQUM7QUFDMUMsTUFBTSxXQUFXLEdBQUcsY0FBYyxDQUFDO0FBQ25DLE1BQU0saUJBQWlCLEdBQUcscUJBQXFCLENBQUM7QUFDaEQsTUFBTSxxQkFBcUIsR0FBRyx5QkFBeUIsQ0FBQztBQUN4RCxNQUFNLHFCQUFxQixHQUFHLHlCQUF5QixDQUFDO0FBQ3hELE1BQU0sc0JBQXNCLEdBQUcsMEJBQTBCLENBQUM7QUFDMUQsTUFBTSxvQkFBb0IsR0FBRyx3QkFBd0IsQ0FBQztBQUN0RCxNQUFNLGtCQUFrQixHQUFHLHNCQUFzQixDQUFDO0FBQ2xELE1BQU0sV0FBVyxHQUFHLGNBQWMsQ0FBQztBQUNuQyxNQUFNLG9CQUFvQixHQUFHLHlCQUF5QixDQUFDO0FBQ3ZELE1BQU0sY0FBYyxHQUFHLGlCQUFpQixDQUFDO0FBQ3pDLE1BQU0sbUJBQW1CLEdBQUcsdUJBQXVCLENBQUM7QUFDcEQsTUFBTSxnQkFBZ0IsR0FBRyxxQkFBcUIsQ0FBQztBQUMvQyxNQUFNLGVBQWUsR0FBRyxvQkFBb0IsQ0FBQztBQUM3QyxNQUFNLGVBQWUsR0FBRyxvQkFBb0IsQ0FBQztBQUM3QyxNQUFNLGVBQWUsR0FBRyxvQkFBb0IsQ0FBQztBQUM3QyxNQUFNLGVBQWUsR0FBRyxvQkFBb0IsQ0FBQztBQUM3QyxNQUFNLGVBQWUsR0FBRyxvQkFBb0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQWdCO0lBQ2xDLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsMEJBQTBCO0lBQzFCLHdCQUF3QjtJQUN4QixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLHFCQUFxQjtJQUNyQixvQkFBb0I7SUFDcEIsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGNBQWM7SUFDZCxRQUFRO0lBQ1IsY0FBYztJQUNkLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixzQkFBc0I7SUFDdEIsb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsb0JBQW9CO0lBQ3BCLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixlQUFlO0lBQ2YsZUFBZTtJQUNmLGVBQWU7SUFDZixlQUFlO0NBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGU6IHNyYy9kYXRhL2NvbnN0cy9kb20vSURzLmpzXG5cbmltcG9ydCB7IERPTV9JRF9EYXRhIH0gZnJvbSAnLi4vLi4vLi4vaW5kZXgvaW5kZXguanMnO1xuXG5jb25zdCBhZHZhbmNlZE1lbnUgPSAnYWR2YW5jZWQtbWVudSc7XG5jb25zdCBhZHZhbmNlZE1lbnVCdXR0b24gPSAnYWR2YW5jZWQtbWVudS1idXR0b24nO1xuY29uc3QgYXBwbHlDdXN0b21Db2xvckJ1dHRvbiA9ICdhcHBseS1jdXN0b20tY29sb3ItYnV0dG9uJztcbmNvbnN0IGNsZWFyQ3VzdG9tQ29sb3JCdXR0b24gPSAnY2xlYXItY3VzdG9tLWNvbG9yLWJ1dHRvbic7XG5jb25zdCBjbG9zZUFkdmFuY2VkTWVudUJ1dHRvbiA9ICdjbG9zZS1hZHZhbmNlZC1tZW51LWJ1dHRvbic7XG5jb25zdCBjbG9zZUN1c3RvbUNvbG9yTWVudUJ1dHRvbiA9ICdjbG9zZS1jdXN0b20tY29sb3ItbWVudS1idXR0b24nO1xuY29uc3QgY2xvc2VEZXZlbG9wZXJNZW51QnV0dG9uID0gJ2Nsb3NlLWRldmVsb3Blci1tZW51LWJ1dHRvbic7XG5jb25zdCBjbG9zZUhlbHBNZW51QnV0dG9uID0gJ2Nsb3NlLWhlbHAtbWVudS1idXR0b24nO1xuY29uc3QgY2xvc2VIaXN0b3J5TWVudUJ1dHRvbiA9ICdjbG9zZS1oaXN0b3J5LW1lbnUtYnV0dG9uJztcbmNvbnN0IGN1c3RvbUNvbG9yRGlzcGxheSA9ICdjdXN0b20tY29sb3ItZGlzcGxheSc7XG5jb25zdCBjdXN0b21Db2xvcklucHV0ID0gJ2N1c3RvbS1jb2xvci1pbnB1dCc7XG5jb25zdCBjdXN0b21Db2xvck1lbnUgPSAnY3VzdG9tLWNvbG9yLW1lbnUnO1xuY29uc3QgY3VzdG9tQ29sb3JNZW51QnV0dG9uID0gJ2N1c3RvbS1jb2xvci1tZW51LWJ1dHRvbic7XG5jb25zdCBkZWxldGVEYXRhYmFzZUJ1dHRvbiA9ICdkZWxldGUtZGF0YWJhc2UtYnV0dG9uJztcbmNvbnN0IGRlc2F0dXJhdGVCdXR0b24gPSAnZGVzYXR1cmF0ZS1idXR0b24nO1xuY29uc3QgZGV2ZWxvcGVyTWVudSA9ICdkZXZlbG9wZXItbWVudSc7XG5jb25zdCBkZXZlbG9wZXJNZW51QnV0dG9uID0gJ2RldmVsb3Blci1tZW51LWJ1dHRvbic7XG5jb25zdCBlbmFibGVBbHBoYUNoZWNrYm94ID0gJ2VuYWJsZS1hbHBoYS1jaGVja2JveCc7XG5jb25zdCBnZW5lcmF0ZUJ1dHRvbiA9ICdnZW5lcmF0ZS1idXR0b24nO1xuY29uc3QgaGVscE1lbnUgPSAnaGVscC1tZW51JztcbmNvbnN0IGhlbHBNZW51QnV0dG9uID0gJ2hlbHAtbWVudS1idXR0b24nO1xuY29uc3QgaGlzdG9yeU1lbnUgPSAnaGlzdG9yeS1tZW51JztcbmNvbnN0IGhpc3RvcnlNZW51QnV0dG9uID0gJ2hpc3RvcnktbWVudS1idXR0b24nO1xuY29uc3QgbGltaXREYXJrbmVzc0NoZWNrYm94ID0gJ2xpbWl0LWRhcmtuZXNzLWNoZWNrYm94JztcbmNvbnN0IGxpbWl0R3JheW5lc3NDaGVja2JveCA9ICdsaW1pdC1ncmF5bmVzcy1jaGVja2JveCc7XG5jb25zdCBsaW1pdExpZ2h0bmVzc0NoZWNrYm94ID0gJ2xpbWl0LWxpZ2h0bmVzcy1jaGVja2JveCc7XG5jb25zdCBwYWxldHRlTnVtYmVyT3B0aW9ucyA9ICdwYWxldHRlLW51bWJlci1vcHRpb25zJztcbmNvbnN0IHBhbGV0dGVUeXBlT3B0aW9ucyA9ICdwYWxldHRlLXR5cGUtb3B0aW9ucyc7XG5jb25zdCByZXNldEJ1dHRvbiA9ICdyZXNldC1idXR0b24nO1xuY29uc3QgcmVzZXRQYWxldHRlSURCdXR0b24gPSAncmVzZXQtcGFsZXR0ZS1pZC1idXR0b24nO1xuY29uc3Qgc2F0dXJhdGVCdXR0b24gPSAnc2F0dXJhdGUtYnV0dG9uJztcbmNvbnN0IHNlbGVjdGVkQ29sb3JPcHRpb24gPSAnc2VsZWN0ZWQtY29sb3Itb3B0aW9uJztcbmNvbnN0IHNob3dBc0NNWUtCdXR0b24gPSAnc2hvdy1hcy1jbXlrLWJ1dHRvbic7XG5jb25zdCBzaG93QXNIZXhCdXR0b24gPSAnc2hvdy1hcy1oZXgtYnV0dG9uJztcbmNvbnN0IHNob3dBc0hTTEJ1dHRvbiA9ICdzaG93LWFzLWhzbC1idXR0b24nO1xuY29uc3Qgc2hvd0FzSFNWQnV0dG9uID0gJ3Nob3ctYXMtaHN2LWJ1dHRvbic7XG5jb25zdCBzaG93QXNMQUJCdXR0b24gPSAnc2hvdy1hcy1sYWItYnV0dG9uJztcbmNvbnN0IHNob3dBc1JHQkJ1dHRvbiA9ICdzaG93LWFzLXJnYi1idXR0b24nO1xuXG5leHBvcnQgY29uc3QgZG9tSURzOiBET01fSURfRGF0YSA9IHtcblx0YWR2YW5jZWRNZW51LFxuXHRhZHZhbmNlZE1lbnVCdXR0b24sXG5cdGFwcGx5Q3VzdG9tQ29sb3JCdXR0b24sXG5cdGNsZWFyQ3VzdG9tQ29sb3JCdXR0b24sXG5cdGNsb3NlQWR2YW5jZWRNZW51QnV0dG9uLFxuXHRjbG9zZUN1c3RvbUNvbG9yTWVudUJ1dHRvbixcblx0Y2xvc2VEZXZlbG9wZXJNZW51QnV0dG9uLFxuXHRjbG9zZUhlbHBNZW51QnV0dG9uLFxuXHRjbG9zZUhpc3RvcnlNZW51QnV0dG9uLFxuXHRjdXN0b21Db2xvckRpc3BsYXksXG5cdGN1c3RvbUNvbG9ySW5wdXQsXG5cdGN1c3RvbUNvbG9yTWVudSxcblx0Y3VzdG9tQ29sb3JNZW51QnV0dG9uLFxuXHRkZWxldGVEYXRhYmFzZUJ1dHRvbixcblx0ZGVzYXR1cmF0ZUJ1dHRvbixcblx0ZGV2ZWxvcGVyTWVudSxcblx0ZGV2ZWxvcGVyTWVudUJ1dHRvbixcblx0ZW5hYmxlQWxwaGFDaGVja2JveCxcblx0Z2VuZXJhdGVCdXR0b24sXG5cdGhlbHBNZW51LFxuXHRoZWxwTWVudUJ1dHRvbixcblx0aGlzdG9yeU1lbnUsXG5cdGhpc3RvcnlNZW51QnV0dG9uLFxuXHRsaW1pdERhcmtuZXNzQ2hlY2tib3gsXG5cdGxpbWl0R3JheW5lc3NDaGVja2JveCxcblx0bGltaXRMaWdodG5lc3NDaGVja2JveCxcblx0cGFsZXR0ZU51bWJlck9wdGlvbnMsXG5cdHBhbGV0dGVUeXBlT3B0aW9ucyxcblx0cmVzZXRCdXR0b24sXG5cdHJlc2V0UGFsZXR0ZUlEQnV0dG9uLFxuXHRzYXR1cmF0ZUJ1dHRvbixcblx0c2VsZWN0ZWRDb2xvck9wdGlvbixcblx0c2hvd0FzQ01ZS0J1dHRvbixcblx0c2hvd0FzSGV4QnV0dG9uLFxuXHRzaG93QXNIU0xCdXR0b24sXG5cdHNob3dBc0hTVkJ1dHRvbixcblx0c2hvd0FzTEFCQnV0dG9uLFxuXHRzaG93QXNSR0JCdXR0b25cbn0gYXMgY29uc3Q7XG4iXX0=