// File: src/data/defaults/colors/colors.js
import { brand } from '../../../common/core/base.js';
const cmyk = {
    value: {
        cyan: 0,
        magenta: 0,
        yellow: 0,
        key: 0,
        alpha: 1
    },
    format: 'cmyk'
};
const cmykBranded = {
    value: {
        cyan: brand.asPercentile(0),
        magenta: brand.asPercentile(0),
        yellow: brand.asPercentile(0),
        key: brand.asPercentile(0),
        alpha: brand.asAlphaRange(1)
    },
    format: 'cmyk'
};
const hex = {
    value: {
        hex: '#000000FF',
        alpha: 'FF',
        numAlpha: 1
    },
    format: 'hex'
};
const hexBranded = {
    value: {
        hex: brand.asHexSet('#000000'),
        alpha: brand.asHexComponent('FF'),
        numAlpha: brand.asAlphaRange(1)
    },
    format: 'hex'
};
const hsl = {
    value: {
        hue: 0,
        saturation: 0,
        lightness: 0,
        alpha: 1
    },
    format: 'hsl'
};
const hslBranded = {
    value: {
        hue: brand.asRadial(0),
        saturation: brand.asPercentile(0),
        lightness: brand.asPercentile(0),
        alpha: brand.asAlphaRange(1)
    },
    format: 'hsl'
};
const hsv = {
    value: {
        hue: 0,
        saturation: 0,
        value: 0,
        alpha: 1
    },
    format: 'hsv'
};
const hsvBranded = {
    value: {
        hue: brand.asRadial(0),
        saturation: brand.asPercentile(0),
        value: brand.asPercentile(0),
        alpha: brand.asAlphaRange(1)
    },
    format: 'hsv'
};
const lab = {
    value: {
        l: 0,
        a: 0,
        b: 0,
        alpha: 1
    },
    format: 'lab'
};
const labBranded = {
    value: {
        l: brand.asLAB_L(0),
        a: brand.asLAB_A(0),
        b: brand.asLAB_B(0),
        alpha: brand.asAlphaRange(1)
    },
    format: 'lab'
};
const rgb = {
    value: {
        red: 0,
        green: 0,
        blue: 0,
        alpha: 1
    },
    format: 'rgb'
};
const rgbBranded = {
    value: {
        red: brand.asByteRange(0),
        green: brand.asByteRange(0),
        blue: brand.asByteRange(0),
        alpha: brand.asAlphaRange(1)
    },
    format: 'rgb'
};
const sl = {
    value: {
        saturation: 0,
        lightness: 0,
        alpha: 1
    },
    format: 'sl'
};
const slBranded = {
    value: {
        saturation: brand.asPercentile(0),
        lightness: brand.asPercentile(0),
        alpha: brand.asAlphaRange(1)
    },
    format: 'sl'
};
const sv = {
    value: {
        saturation: 0,
        value: 0,
        alpha: 1
    },
    format: 'sv'
};
const svBranded = {
    value: {
        saturation: brand.asPercentile(0),
        value: brand.asPercentile(0),
        alpha: brand.asAlphaRange(1)
    },
    format: 'sv'
};
const xyz = {
    value: {
        x: 0,
        y: 0,
        z: 0,
        alpha: 1
    },
    format: 'xyz'
};
const xyzBranded = {
    value: {
        x: brand.asXYZ_X(0),
        y: brand.asXYZ_Y(0),
        z: brand.asXYZ_Z(0),
        alpha: brand.asAlphaRange(1)
    },
    format: 'xyz'
};
export const brandedColors = {
    cmyk: cmykBranded,
    hex: hexBranded,
    hsl: hslBranded,
    hsv: hsvBranded,
    lab: labBranded,
    rgb: rgbBranded,
    sl: slBranded,
    sv: svBranded,
    xyz: xyzBranded
};
export const colors = {
    cmyk,
    hex,
    hsl,
    hsv,
    lab,
    rgb,
    sl,
    sv,
    xyz
};
//# sourceMappingURL=data:application/json;base64,