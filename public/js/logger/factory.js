// File: src/logger/factory.ts
import { AppLogger } from './AppLogger.js';
import { data } from '../data/index.js';
const debugLevel = data.mode.debugLevel;
const appLogger = AppLogger.getInstance();
function logDebug(message) {
    appLogger.log(message, 'debug', debugLevel);
}
function logInfo(message) {
    appLogger.log(message, 'info', debugLevel);
}
function logWarning(message) {
    appLogger.log(message, 'warn', debugLevel);
}
function logError(message) {
    appLogger.log(message, 'error', debugLevel);
}
function logCritical(message) {
    appLogger.log(message, 'error', debugLevel);
}
export const log = {
    debug: logDebug,
    info: logInfo,
    warn: logWarning,
    error: logError,
    critical: logCritical
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sb2dnZXIvZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4QkFBOEI7QUFFOUIsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUV4QyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztBQUV4QyxNQUFNLFNBQVMsR0FBRyxTQUFTLENBQUMsV0FBVyxFQUFFLENBQUM7QUFFMUMsU0FBUyxRQUFRLENBQUMsT0FBZTtJQUNoQyxTQUFTLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDN0MsQ0FBQztBQUVELFNBQVMsT0FBTyxDQUFDLE9BQWU7SUFDL0IsU0FBUyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQzVDLENBQUM7QUFFRCxTQUFTLFVBQVUsQ0FBQyxPQUFlO0lBQ2xDLFNBQVMsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztBQUM1QyxDQUFDO0FBRUQsU0FBUyxRQUFRLENBQUMsT0FBZTtJQUNoQyxTQUFTLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDN0MsQ0FBQztBQUVELFNBQVMsV0FBVyxDQUFDLE9BQWU7SUFDbkMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQzdDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUc7SUFDbEIsS0FBSyxFQUFFLFFBQVE7SUFDZixJQUFJLEVBQUUsT0FBTztJQUNiLElBQUksRUFBRSxVQUFVO0lBQ2hCLEtBQUssRUFBRSxRQUFRO0lBQ2YsUUFBUSxFQUFFLFdBQVc7Q0FDckIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGU6IHNyYy9sb2dnZXIvZmFjdG9yeS50c1xuXG5pbXBvcnQgeyBBcHBMb2dnZXIgfSBmcm9tICcuL0FwcExvZ2dlci5qcyc7XG5pbXBvcnQgeyBkYXRhIH0gZnJvbSAnLi4vZGF0YS9pbmRleC5qcyc7XG5cbmNvbnN0IGRlYnVnTGV2ZWwgPSBkYXRhLm1vZGUuZGVidWdMZXZlbDtcblxuY29uc3QgYXBwTG9nZ2VyID0gQXBwTG9nZ2VyLmdldEluc3RhbmNlKCk7XG5cbmZ1bmN0aW9uIGxvZ0RlYnVnKG1lc3NhZ2U6IHN0cmluZyk6IHZvaWQge1xuXHRhcHBMb2dnZXIubG9nKG1lc3NhZ2UsICdkZWJ1ZycsIGRlYnVnTGV2ZWwpO1xufVxuXG5mdW5jdGlvbiBsb2dJbmZvKG1lc3NhZ2U6IHN0cmluZyk6IHZvaWQge1xuXHRhcHBMb2dnZXIubG9nKG1lc3NhZ2UsICdpbmZvJywgZGVidWdMZXZlbCk7XG59XG5cbmZ1bmN0aW9uIGxvZ1dhcm5pbmcobWVzc2FnZTogc3RyaW5nKTogdm9pZCB7XG5cdGFwcExvZ2dlci5sb2cobWVzc2FnZSwgJ3dhcm4nLCBkZWJ1Z0xldmVsKTtcbn1cblxuZnVuY3Rpb24gbG9nRXJyb3IobWVzc2FnZTogc3RyaW5nKTogdm9pZCB7XG5cdGFwcExvZ2dlci5sb2cobWVzc2FnZSwgJ2Vycm9yJywgZGVidWdMZXZlbCk7XG59XG5cbmZ1bmN0aW9uIGxvZ0NyaXRpY2FsKG1lc3NhZ2U6IHN0cmluZyk6IHZvaWQge1xuXHRhcHBMb2dnZXIubG9nKG1lc3NhZ2UsICdlcnJvcicsIGRlYnVnTGV2ZWwpO1xufVxuXG5leHBvcnQgY29uc3QgbG9nID0ge1xuXHRkZWJ1ZzogbG9nRGVidWcsXG5cdGluZm86IGxvZ0luZm8sXG5cdHdhcm46IGxvZ1dhcm5pbmcsXG5cdGVycm9yOiBsb2dFcnJvcixcblx0Y3JpdGljYWw6IGxvZ0NyaXRpY2FsXG59O1xuIl19