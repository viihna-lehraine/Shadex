// File: src/logger/debug.ts
import { data } from '../data/index.js';
const elementsToCheck = {
    advancedMenuButton: 'Advanced Menu Button',
    applyCustomColorButton: 'Apply Custom Color Button',
    clearCustomColorButton: 'Clear Custom Color Button',
    closeCustomColorMenuButton: 'Close Custom Color Menu Button',
    closeHelpMenuButton: 'Close Help Menu Button',
    closeHistoryMenuButton: 'Close History Menu Button',
    desaturateButton: 'Desaturate Button',
    generateButton: 'Generate Button',
    helpMenuButton: 'Help Menu Button',
    historyMenuButton: 'History Menu Button',
    saturateButton: 'Saturate Button',
    showAsCMYKButton: 'Show as CMYK Button',
    showAsHexButton: 'Show as Hex Button',
    showAsHSLButton: 'Show as HSL Button',
    showAsHSVButton: 'Show as HSV Button',
    showAsLABButton: 'Show as LAB Button',
    showAsRGBButton: 'Show as RGB Button'
};
function validateDOMElements() {
    const elements = data.consts.dom;
    const notFoundElements = [];
    Object.entries(elementsToCheck).forEach(([key, name]) => {
        if (!elements[key]) {
            notFoundElements.push(name);
        }
    });
    const allFound = notFoundElements.length === 0;
    if (allFound)
        console.log('All elements found.');
    else {
        console.log(`Some DOM elements are missing: ${notFoundElements.length} not found.`);
        console.log('Missing elements:');
        console.log(notFoundElements.join('\n'));
    }
}
export const debug = {
    validateDOMElements
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVidWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbG9nZ2VyL2RlYnVnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRCQUE0QjtBQUc1QixPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFeEMsTUFBTSxlQUFlLEdBQUc7SUFDdkIsa0JBQWtCLEVBQUUsc0JBQXNCO0lBQzFDLHNCQUFzQixFQUFFLDJCQUEyQjtJQUNuRCxzQkFBc0IsRUFBRSwyQkFBMkI7SUFDbkQsMEJBQTBCLEVBQUUsZ0NBQWdDO0lBQzVELG1CQUFtQixFQUFFLHdCQUF3QjtJQUM3QyxzQkFBc0IsRUFBRSwyQkFBMkI7SUFDbkQsZ0JBQWdCLEVBQUUsbUJBQW1CO0lBQ3JDLGNBQWMsRUFBRSxpQkFBaUI7SUFDakMsY0FBYyxFQUFFLGtCQUFrQjtJQUNsQyxpQkFBaUIsRUFBRSxxQkFBcUI7SUFDeEMsY0FBYyxFQUFFLGlCQUFpQjtJQUNqQyxnQkFBZ0IsRUFBRSxxQkFBcUI7SUFDdkMsZUFBZSxFQUFFLG9CQUFvQjtJQUNyQyxlQUFlLEVBQUUsb0JBQW9CO0lBQ3JDLGVBQWUsRUFBRSxvQkFBb0I7SUFDckMsZUFBZSxFQUFFLG9CQUFvQjtJQUNyQyxlQUFlLEVBQUUsb0JBQW9CO0NBQ3JDLENBQUM7QUFNRixTQUFTLG1CQUFtQjtJQUMzQixNQUFNLFFBQVEsR0FBZ0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7SUFDOUMsTUFBTSxnQkFBZ0IsR0FBYSxFQUFFLENBQUM7SUFFdEMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFO1FBQ3ZELElBQUksQ0FBQyxRQUFRLENBQUMsR0FBd0IsQ0FBQyxFQUFFLENBQUM7WUFDekMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdCLENBQUM7SUFDRixDQUFDLENBQUMsQ0FBQztJQUVILE1BQU0sUUFBUSxHQUFHLGdCQUFnQixDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUM7SUFFL0MsSUFBSSxRQUFRO1FBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1NBQzVDLENBQUM7UUFDTCxPQUFPLENBQUMsR0FBRyxDQUNWLGtDQUFrQyxnQkFBZ0IsQ0FBQyxNQUFNLGFBQWEsQ0FDdEUsQ0FBQztRQUNGLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUNqQyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzFDLENBQUM7QUFDRixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUEyQjtJQUM1QyxtQkFBbUI7Q0FDVixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZTogc3JjL2xvZ2dlci9kZWJ1Zy50c1xuXG5pbXBvcnQgeyBMb2dnZXJGbkRlYnVnSW50ZXJmYWNlIH0gZnJvbSAnLi4vaW5kZXgvaW5kZXguanMnO1xuaW1wb3J0IHsgZGF0YSB9IGZyb20gJy4uL2RhdGEvaW5kZXguanMnO1xuXG5jb25zdCBlbGVtZW50c1RvQ2hlY2sgPSB7XG5cdGFkdmFuY2VkTWVudUJ1dHRvbjogJ0FkdmFuY2VkIE1lbnUgQnV0dG9uJyxcblx0YXBwbHlDdXN0b21Db2xvckJ1dHRvbjogJ0FwcGx5IEN1c3RvbSBDb2xvciBCdXR0b24nLFxuXHRjbGVhckN1c3RvbUNvbG9yQnV0dG9uOiAnQ2xlYXIgQ3VzdG9tIENvbG9yIEJ1dHRvbicsXG5cdGNsb3NlQ3VzdG9tQ29sb3JNZW51QnV0dG9uOiAnQ2xvc2UgQ3VzdG9tIENvbG9yIE1lbnUgQnV0dG9uJyxcblx0Y2xvc2VIZWxwTWVudUJ1dHRvbjogJ0Nsb3NlIEhlbHAgTWVudSBCdXR0b24nLFxuXHRjbG9zZUhpc3RvcnlNZW51QnV0dG9uOiAnQ2xvc2UgSGlzdG9yeSBNZW51IEJ1dHRvbicsXG5cdGRlc2F0dXJhdGVCdXR0b246ICdEZXNhdHVyYXRlIEJ1dHRvbicsXG5cdGdlbmVyYXRlQnV0dG9uOiAnR2VuZXJhdGUgQnV0dG9uJyxcblx0aGVscE1lbnVCdXR0b246ICdIZWxwIE1lbnUgQnV0dG9uJyxcblx0aGlzdG9yeU1lbnVCdXR0b246ICdIaXN0b3J5IE1lbnUgQnV0dG9uJyxcblx0c2F0dXJhdGVCdXR0b246ICdTYXR1cmF0ZSBCdXR0b24nLFxuXHRzaG93QXNDTVlLQnV0dG9uOiAnU2hvdyBhcyBDTVlLIEJ1dHRvbicsXG5cdHNob3dBc0hleEJ1dHRvbjogJ1Nob3cgYXMgSGV4IEJ1dHRvbicsXG5cdHNob3dBc0hTTEJ1dHRvbjogJ1Nob3cgYXMgSFNMIEJ1dHRvbicsXG5cdHNob3dBc0hTVkJ1dHRvbjogJ1Nob3cgYXMgSFNWIEJ1dHRvbicsXG5cdHNob3dBc0xBQkJ1dHRvbjogJ1Nob3cgYXMgTEFCIEJ1dHRvbicsXG5cdHNob3dBc1JHQkJ1dHRvbjogJ1Nob3cgYXMgUkdCIEJ1dHRvbidcbn07XG5cbnR5cGUgRE9NRWxlbWVudHMgPSB7XG5cdFtrZXkgaW4ga2V5b2YgdHlwZW9mIGVsZW1lbnRzVG9DaGVja10/OiBIVE1MRWxlbWVudCB8IG51bGw7XG59O1xuXG5mdW5jdGlvbiB2YWxpZGF0ZURPTUVsZW1lbnRzKCk6IHZvaWQge1xuXHRjb25zdCBlbGVtZW50czogRE9NRWxlbWVudHMgPSBkYXRhLmNvbnN0cy5kb207XG5cdGNvbnN0IG5vdEZvdW5kRWxlbWVudHM6IHN0cmluZ1tdID0gW107XG5cblx0T2JqZWN0LmVudHJpZXMoZWxlbWVudHNUb0NoZWNrKS5mb3JFYWNoKChba2V5LCBuYW1lXSkgPT4ge1xuXHRcdGlmICghZWxlbWVudHNba2V5IGFzIGtleW9mIERPTUVsZW1lbnRzXSkge1xuXHRcdFx0bm90Rm91bmRFbGVtZW50cy5wdXNoKG5hbWUpO1xuXHRcdH1cblx0fSk7XG5cblx0Y29uc3QgYWxsRm91bmQgPSBub3RGb3VuZEVsZW1lbnRzLmxlbmd0aCA9PT0gMDtcblxuXHRpZiAoYWxsRm91bmQpIGNvbnNvbGUubG9nKCdBbGwgZWxlbWVudHMgZm91bmQuJyk7XG5cdGVsc2Uge1xuXHRcdGNvbnNvbGUubG9nKFxuXHRcdFx0YFNvbWUgRE9NIGVsZW1lbnRzIGFyZSBtaXNzaW5nOiAke25vdEZvdW5kRWxlbWVudHMubGVuZ3RofSBub3QgZm91bmQuYFxuXHRcdCk7XG5cdFx0Y29uc29sZS5sb2coJ01pc3NpbmcgZWxlbWVudHM6Jyk7XG5cdFx0Y29uc29sZS5sb2cobm90Rm91bmRFbGVtZW50cy5qb2luKCdcXG4nKSk7XG5cdH1cbn1cblxuZXhwb3J0IGNvbnN0IGRlYnVnOiBMb2dnZXJGbkRlYnVnSW50ZXJmYWNlID0ge1xuXHR2YWxpZGF0ZURPTUVsZW1lbnRzXG59IGFzIGNvbnN0O1xuIl19