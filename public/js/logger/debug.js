// File: src/logger/debug.js
import { data } from '../data/index.js';
const elementsToCheck = {
    advancedMenuButton: 'Advanced Menu Button',
    applyCustomColorButton: 'Apply Custom Color Button',
    clearCustomColorButton: 'Clear Custom Color Button',
    closeCustomColorMenuButton: 'Close Custom Color Menu Button',
    closeHelpMenuButton: 'Close Help Menu Button',
    closeHistoryMenuButton: 'Close History Menu Button',
    desaturateButton: 'Desaturate Button',
    generateButton: 'Generate Button',
    helpMenuButton: 'Help Menu Button',
    historyMenuButton: 'History Menu Button',
    saturateButton: 'Saturate Button',
    showAsCMYKButton: 'Show as CMYK Button',
    showAsHexButton: 'Show as Hex Button',
    showAsHSLButton: 'Show as HSL Button',
    showAsHSVButton: 'Show as HSV Button',
    showAsLABButton: 'Show as LAB Button',
    showAsRGBButton: 'Show as RGB Button'
};
function validateDOMElements() {
    const elements = data.consts.dom.elements;
    const notFoundElements = [];
    Object.entries(elementsToCheck).forEach(([key, name]) => {
        if (!elements[key]) {
            notFoundElements.push(name);
        }
    });
    const allFound = notFoundElements.length === 0;
    if (allFound)
        console.log('All elements found.');
    else {
        console.log(`Some DOM elements are missing: ${notFoundElements.length} not found.`);
        console.log('Missing elements:');
        notFoundElements.forEach(element => console.log(`- ${element}`));
    }
}
export const debug = {
    validateDOMElements
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVidWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbG9nZ2VyL2RlYnVnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRCQUE0QjtBQUc1QixPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFeEMsTUFBTSxlQUFlLEdBQUc7SUFDdkIsa0JBQWtCLEVBQUUsc0JBQXNCO0lBQzFDLHNCQUFzQixFQUFFLDJCQUEyQjtJQUNuRCxzQkFBc0IsRUFBRSwyQkFBMkI7SUFDbkQsMEJBQTBCLEVBQUUsZ0NBQWdDO0lBQzVELG1CQUFtQixFQUFFLHdCQUF3QjtJQUM3QyxzQkFBc0IsRUFBRSwyQkFBMkI7SUFDbkQsZ0JBQWdCLEVBQUUsbUJBQW1CO0lBQ3JDLGNBQWMsRUFBRSxpQkFBaUI7SUFDakMsY0FBYyxFQUFFLGtCQUFrQjtJQUNsQyxpQkFBaUIsRUFBRSxxQkFBcUI7SUFDeEMsY0FBYyxFQUFFLGlCQUFpQjtJQUNqQyxnQkFBZ0IsRUFBRSxxQkFBcUI7SUFDdkMsZUFBZSxFQUFFLG9CQUFvQjtJQUNyQyxlQUFlLEVBQUUsb0JBQW9CO0lBQ3JDLGVBQWUsRUFBRSxvQkFBb0I7SUFDckMsZUFBZSxFQUFFLG9CQUFvQjtJQUNyQyxlQUFlLEVBQUUsb0JBQW9CO0NBQ3JDLENBQUM7QUFNRixTQUFTLG1CQUFtQjtJQUMzQixNQUFNLFFBQVEsR0FBZ0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDO0lBQ3ZELE1BQU0sZ0JBQWdCLEdBQWEsRUFBRSxDQUFDO0lBRXRDLE1BQU0sQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRTtRQUN2RCxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQXdCLENBQUMsRUFBRSxDQUFDO1lBQ3pDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM3QixDQUFDO0lBQ0YsQ0FBQyxDQUFDLENBQUM7SUFFSCxNQUFNLFFBQVEsR0FBRyxnQkFBZ0IsQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDO0lBRS9DLElBQUksUUFBUTtRQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQztTQUM1QyxDQUFDO1FBQ0wsT0FBTyxDQUFDLEdBQUcsQ0FDVixrQ0FBa0MsZ0JBQWdCLENBQUMsTUFBTSxhQUFhLENBQ3RFLENBQUM7UUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDakMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNsRSxDQUFDO0FBQ0YsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBMkI7SUFDNUMsbUJBQW1CO0NBQ1YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGU6IHNyYy9sb2dnZXIvZGVidWcuanNcblxuaW1wb3J0IHsgTG9nZ2VyRm5EZWJ1Z0ludGVyZmFjZSB9IGZyb20gJy4uL2luZGV4L2luZGV4LmpzJztcbmltcG9ydCB7IGRhdGEgfSBmcm9tICcuLi9kYXRhL2luZGV4LmpzJztcblxuY29uc3QgZWxlbWVudHNUb0NoZWNrID0ge1xuXHRhZHZhbmNlZE1lbnVCdXR0b246ICdBZHZhbmNlZCBNZW51IEJ1dHRvbicsXG5cdGFwcGx5Q3VzdG9tQ29sb3JCdXR0b246ICdBcHBseSBDdXN0b20gQ29sb3IgQnV0dG9uJyxcblx0Y2xlYXJDdXN0b21Db2xvckJ1dHRvbjogJ0NsZWFyIEN1c3RvbSBDb2xvciBCdXR0b24nLFxuXHRjbG9zZUN1c3RvbUNvbG9yTWVudUJ1dHRvbjogJ0Nsb3NlIEN1c3RvbSBDb2xvciBNZW51IEJ1dHRvbicsXG5cdGNsb3NlSGVscE1lbnVCdXR0b246ICdDbG9zZSBIZWxwIE1lbnUgQnV0dG9uJyxcblx0Y2xvc2VIaXN0b3J5TWVudUJ1dHRvbjogJ0Nsb3NlIEhpc3RvcnkgTWVudSBCdXR0b24nLFxuXHRkZXNhdHVyYXRlQnV0dG9uOiAnRGVzYXR1cmF0ZSBCdXR0b24nLFxuXHRnZW5lcmF0ZUJ1dHRvbjogJ0dlbmVyYXRlIEJ1dHRvbicsXG5cdGhlbHBNZW51QnV0dG9uOiAnSGVscCBNZW51IEJ1dHRvbicsXG5cdGhpc3RvcnlNZW51QnV0dG9uOiAnSGlzdG9yeSBNZW51IEJ1dHRvbicsXG5cdHNhdHVyYXRlQnV0dG9uOiAnU2F0dXJhdGUgQnV0dG9uJyxcblx0c2hvd0FzQ01ZS0J1dHRvbjogJ1Nob3cgYXMgQ01ZSyBCdXR0b24nLFxuXHRzaG93QXNIZXhCdXR0b246ICdTaG93IGFzIEhleCBCdXR0b24nLFxuXHRzaG93QXNIU0xCdXR0b246ICdTaG93IGFzIEhTTCBCdXR0b24nLFxuXHRzaG93QXNIU1ZCdXR0b246ICdTaG93IGFzIEhTViBCdXR0b24nLFxuXHRzaG93QXNMQUJCdXR0b246ICdTaG93IGFzIExBQiBCdXR0b24nLFxuXHRzaG93QXNSR0JCdXR0b246ICdTaG93IGFzIFJHQiBCdXR0b24nXG59O1xuXG50eXBlIERPTUVsZW1lbnRzID0ge1xuXHRba2V5IGluIGtleW9mIHR5cGVvZiBlbGVtZW50c1RvQ2hlY2tdPzogSFRNTEVsZW1lbnQgfCBudWxsO1xufTtcblxuZnVuY3Rpb24gdmFsaWRhdGVET01FbGVtZW50cygpOiB2b2lkIHtcblx0Y29uc3QgZWxlbWVudHM6IERPTUVsZW1lbnRzID0gZGF0YS5jb25zdHMuZG9tLmVsZW1lbnRzO1xuXHRjb25zdCBub3RGb3VuZEVsZW1lbnRzOiBzdHJpbmdbXSA9IFtdO1xuXG5cdE9iamVjdC5lbnRyaWVzKGVsZW1lbnRzVG9DaGVjaykuZm9yRWFjaCgoW2tleSwgbmFtZV0pID0+IHtcblx0XHRpZiAoIWVsZW1lbnRzW2tleSBhcyBrZXlvZiBET01FbGVtZW50c10pIHtcblx0XHRcdG5vdEZvdW5kRWxlbWVudHMucHVzaChuYW1lKTtcblx0XHR9XG5cdH0pO1xuXG5cdGNvbnN0IGFsbEZvdW5kID0gbm90Rm91bmRFbGVtZW50cy5sZW5ndGggPT09IDA7XG5cblx0aWYgKGFsbEZvdW5kKSBjb25zb2xlLmxvZygnQWxsIGVsZW1lbnRzIGZvdW5kLicpO1xuXHRlbHNlIHtcblx0XHRjb25zb2xlLmxvZyhcblx0XHRcdGBTb21lIERPTSBlbGVtZW50cyBhcmUgbWlzc2luZzogJHtub3RGb3VuZEVsZW1lbnRzLmxlbmd0aH0gbm90IGZvdW5kLmBcblx0XHQpO1xuXHRcdGNvbnNvbGUubG9nKCdNaXNzaW5nIGVsZW1lbnRzOicpO1xuXHRcdG5vdEZvdW5kRWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IGNvbnNvbGUubG9nKGAtICR7ZWxlbWVudH1gKSk7XG5cdH1cbn1cblxuZXhwb3J0IGNvbnN0IGRlYnVnOiBMb2dnZXJGbkRlYnVnSW50ZXJmYWNlID0ge1xuXHR2YWxpZGF0ZURPTUVsZW1lbnRzXG59IGFzIGNvbnN0O1xuIl19