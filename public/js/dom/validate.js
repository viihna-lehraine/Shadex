// File: src/dom/validate.ts
import { data } from '../data/index.js';
import { logger } from '../logger/index.js';
const logMode = data.mode.logging;
const mode = data.mode;
function validateElements() {
    const ids = data.consts.dom.ids;
    const missingElements = [];
    Object.values(ids).forEach(id => {
        const element = document.getElementById(id);
        if (!element) {
            if (logMode.errors)
                logger.error(`Element with ID "${id}" not found`);
            missingElements.push(id);
        }
    });
    if (missingElements.length) {
        if (logMode.warnings)
            logger.warning(`Some DOM elements are missing (${missingElements.length}): ${missingElements.join(', ')}`);
    }
    else {
        if (logMode.info && mode.debug && logMode.verbosity > 1)
            logger.info('All required DOM elements are present.');
    }
}
export const validate = {
    elements: validateElements
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZG9tL3ZhbGlkYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRCQUE0QjtBQUc1QixPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDeEMsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTVDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO0FBQ2xDLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7QUFFdkIsU0FBUyxnQkFBZ0I7SUFDeEIsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDO0lBQ2hDLE1BQU0sZUFBZSxHQUFhLEVBQUUsQ0FBQztJQUVyQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRTtRQUMvQixNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRTVDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNkLElBQUksT0FBTyxDQUFDLE1BQU07Z0JBQ2pCLE1BQU0sQ0FBQyxLQUFLLENBQUMsb0JBQW9CLEVBQUUsYUFBYSxDQUFDLENBQUM7WUFDbkQsZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMxQixDQUFDO0lBQ0YsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLGVBQWUsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUM1QixJQUFJLE9BQU8sQ0FBQyxRQUFRO1lBQ25CLE1BQU0sQ0FBQyxPQUFPLENBQ2Isa0NBQWtDLGVBQWUsQ0FBQyxNQUFNLE1BQU0sZUFBZSxDQUFDLElBQUksQ0FDakYsSUFBSSxDQUNKLEVBQUUsQ0FDSCxDQUFDO0lBQ0osQ0FBQztTQUFNLENBQUM7UUFDUCxJQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxPQUFPLENBQUMsU0FBUyxHQUFHLENBQUM7WUFDdEQsTUFBTSxDQUFDLElBQUksQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO0lBQ3hELENBQUM7QUFDRixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUEyQjtJQUMvQyxRQUFRLEVBQUUsZ0JBQWdCO0NBQzFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiBzcmMvZG9tL3ZhbGlkYXRlLnRzXG5cbmltcG9ydCB7IERPTVZhbGlkYXRlRm5JbnRlcmZhY2UgfSBmcm9tICcuLi9pbmRleC9pbmRleC5qcyc7XG5pbXBvcnQgeyBkYXRhIH0gZnJvbSAnLi4vZGF0YS9pbmRleC5qcyc7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuLi9sb2dnZXIvaW5kZXguanMnO1xuXG5jb25zdCBsb2dNb2RlID0gZGF0YS5tb2RlLmxvZ2dpbmc7XG5jb25zdCBtb2RlID0gZGF0YS5tb2RlO1xuXG5mdW5jdGlvbiB2YWxpZGF0ZUVsZW1lbnRzKCk6IHZvaWQge1xuXHRjb25zdCBpZHMgPSBkYXRhLmNvbnN0cy5kb20uaWRzO1xuXHRjb25zdCBtaXNzaW5nRWxlbWVudHM6IHN0cmluZ1tdID0gW107XG5cblx0T2JqZWN0LnZhbHVlcyhpZHMpLmZvckVhY2goaWQgPT4ge1xuXHRcdGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG5cblx0XHRpZiAoIWVsZW1lbnQpIHtcblx0XHRcdGlmIChsb2dNb2RlLmVycm9ycylcblx0XHRcdFx0bG9nZ2VyLmVycm9yKGBFbGVtZW50IHdpdGggSUQgXCIke2lkfVwiIG5vdCBmb3VuZGApO1xuXHRcdFx0bWlzc2luZ0VsZW1lbnRzLnB1c2goaWQpO1xuXHRcdH1cblx0fSk7XG5cblx0aWYgKG1pc3NpbmdFbGVtZW50cy5sZW5ndGgpIHtcblx0XHRpZiAobG9nTW9kZS53YXJuaW5ncylcblx0XHRcdGxvZ2dlci53YXJuaW5nKFxuXHRcdFx0XHRgU29tZSBET00gZWxlbWVudHMgYXJlIG1pc3NpbmcgKCR7bWlzc2luZ0VsZW1lbnRzLmxlbmd0aH0pOiAke21pc3NpbmdFbGVtZW50cy5qb2luKFxuXHRcdFx0XHRcdCcsICdcblx0XHRcdFx0KX1gXG5cdFx0XHQpO1xuXHR9IGVsc2Uge1xuXHRcdGlmIChsb2dNb2RlLmluZm8gJiYgbW9kZS5kZWJ1ZyAmJiBsb2dNb2RlLnZlcmJvc2l0eSA+IDEpXG5cdFx0XHRsb2dnZXIuaW5mbygnQWxsIHJlcXVpcmVkIERPTSBlbGVtZW50cyBhcmUgcHJlc2VudC4nKTtcblx0fVxufVxuXG5leHBvcnQgY29uc3QgdmFsaWRhdGU6IERPTVZhbGlkYXRlRm5JbnRlcmZhY2UgPSB7XG5cdGVsZW1lbnRzOiB2YWxpZGF0ZUVsZW1lbnRzXG59O1xuIl19