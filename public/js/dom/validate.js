// File: src/dom/validate.ts
import { data } from '../data/index.js';
import { log } from '../classes/logger/index.js';
const logMode = data.mode.logging;
const mode = data.mode;
function validateElements() {
    const ids = data.consts.dom.ids;
    const missingElements = [];
    Object.values(ids).forEach(id => {
        const element = document.getElementById(id);
        if (!element) {
            if (logMode.errors)
                log.error(`Element with ID "${id}" not found`);
            missingElements.push(id);
        }
    });
    if (missingElements.length) {
        if (logMode.warnings)
            log.warning(`Some DOM elements are missing (${missingElements.length}): ${missingElements.join(', ')}`);
    }
    else {
        if (logMode.info && mode.debug && logMode.verbosity > 1)
            log.info('All required DOM elements are present.');
    }
}
export const validate = {
    elements: validateElements
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZG9tL3ZhbGlkYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRCQUE0QjtBQUc1QixPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDeEMsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRWpELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO0FBQ2xDLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7QUFFdkIsU0FBUyxnQkFBZ0I7SUFDeEIsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDO0lBQ2hDLE1BQU0sZUFBZSxHQUFhLEVBQUUsQ0FBQztJQUVyQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRTtRQUMvQixNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRTVDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNkLElBQUksT0FBTyxDQUFDLE1BQU07Z0JBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxvQkFBb0IsRUFBRSxhQUFhLENBQUMsQ0FBQztZQUNuRSxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzFCLENBQUM7SUFDRixDQUFDLENBQUMsQ0FBQztJQUVILElBQUksZUFBZSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQzVCLElBQUksT0FBTyxDQUFDLFFBQVE7WUFDbkIsR0FBRyxDQUFDLE9BQU8sQ0FDVixrQ0FBa0MsZUFBZSxDQUFDLE1BQU0sTUFBTSxlQUFlLENBQUMsSUFBSSxDQUNqRixJQUFJLENBQ0osRUFBRSxDQUNILENBQUM7SUFDSixDQUFDO1NBQU0sQ0FBQztRQUNQLElBQUksT0FBTyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLE9BQU8sQ0FBQyxTQUFTLEdBQUcsQ0FBQztZQUN0RCxHQUFHLENBQUMsSUFBSSxDQUFDLHdDQUF3QyxDQUFDLENBQUM7SUFDckQsQ0FBQztBQUNGLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQTJCO0lBQy9DLFFBQVEsRUFBRSxnQkFBZ0I7Q0FDMUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGU6IHNyYy9kb20vdmFsaWRhdGUudHNcblxuaW1wb3J0IHsgRE9NVmFsaWRhdGVGbkludGVyZmFjZSB9IGZyb20gJy4uL2luZGV4L2luZGV4LmpzJztcbmltcG9ydCB7IGRhdGEgfSBmcm9tICcuLi9kYXRhL2luZGV4LmpzJztcbmltcG9ydCB7IGxvZyB9IGZyb20gJy4uL2NsYXNzZXMvbG9nZ2VyL2luZGV4LmpzJztcblxuY29uc3QgbG9nTW9kZSA9IGRhdGEubW9kZS5sb2dnaW5nO1xuY29uc3QgbW9kZSA9IGRhdGEubW9kZTtcblxuZnVuY3Rpb24gdmFsaWRhdGVFbGVtZW50cygpOiB2b2lkIHtcblx0Y29uc3QgaWRzID0gZGF0YS5jb25zdHMuZG9tLmlkcztcblx0Y29uc3QgbWlzc2luZ0VsZW1lbnRzOiBzdHJpbmdbXSA9IFtdO1xuXG5cdE9iamVjdC52YWx1ZXMoaWRzKS5mb3JFYWNoKGlkID0+IHtcblx0XHRjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuXG5cdFx0aWYgKCFlbGVtZW50KSB7XG5cdFx0XHRpZiAobG9nTW9kZS5lcnJvcnMpIGxvZy5lcnJvcihgRWxlbWVudCB3aXRoIElEIFwiJHtpZH1cIiBub3QgZm91bmRgKTtcblx0XHRcdG1pc3NpbmdFbGVtZW50cy5wdXNoKGlkKTtcblx0XHR9XG5cdH0pO1xuXG5cdGlmIChtaXNzaW5nRWxlbWVudHMubGVuZ3RoKSB7XG5cdFx0aWYgKGxvZ01vZGUud2FybmluZ3MpXG5cdFx0XHRsb2cud2FybmluZyhcblx0XHRcdFx0YFNvbWUgRE9NIGVsZW1lbnRzIGFyZSBtaXNzaW5nICgke21pc3NpbmdFbGVtZW50cy5sZW5ndGh9KTogJHttaXNzaW5nRWxlbWVudHMuam9pbihcblx0XHRcdFx0XHQnLCAnXG5cdFx0XHRcdCl9YFxuXHRcdFx0KTtcblx0fSBlbHNlIHtcblx0XHRpZiAobG9nTW9kZS5pbmZvICYmIG1vZGUuZGVidWcgJiYgbG9nTW9kZS52ZXJib3NpdHkgPiAxKVxuXHRcdFx0bG9nLmluZm8oJ0FsbCByZXF1aXJlZCBET00gZWxlbWVudHMgYXJlIHByZXNlbnQuJyk7XG5cdH1cbn1cblxuZXhwb3J0IGNvbnN0IHZhbGlkYXRlOiBET01WYWxpZGF0ZUZuSW50ZXJmYWNlID0ge1xuXHRlbGVtZW50czogdmFsaWRhdGVFbGVtZW50c1xufTtcbiJdfQ==