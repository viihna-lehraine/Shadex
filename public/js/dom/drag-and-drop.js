let dragSrcEl = null;
function attachDragAndDropEventListeners(element) {
    try {
        if (element) {
            element.addEventListener('dragstart', dragAndDrop.handleDragStart);
            element.addEventListener('dragover', dragAndDrop.handleDragOver);
            element.addEventListener('drop', dragAndDrop.handleDrop);
            element.addEventListener('dragend', dragAndDrop.handleDragEnd);
        }
        console.log('Drag and drop event listeners successfully attached');
    }
    catch (error) {
        console.error(`Failed to execute attachDragAndDropEventListeners: ${error}`);
    }
}
function handleDragStart(e) {
    try {
        dragSrcEl = e.currentTarget;
        if (e.dataTransfer) {
            e.dataTransfer.effectAllowed = 'move';
            e.dataTransfer.setData('text/html', dragSrcEl.outerHTML);
        }
        console.log('handleDragStart complete');
    }
    catch (error) {
        console.error(`Error in handleDragStart: ${error}`);
    }
}
function handleDragOver(e) {
    try {
        e.preventDefault();
        if (e.dataTransfer) {
            e.dataTransfer.dropEffect = 'move';
        }
        console.log('handleDragOver complete');
        return false;
    }
    catch (error) {
        console.error(`Error in handleDragOver: ${error}`);
        return false;
    }
}
function handleDragEnd(e) {
    try {
        const target = e.currentTarget;
        target.classList.remove('dragging');
        document.querySelectorAll('.color-stripe').forEach(el => {
            el.classList.remove('dragging');
        });
        console.log('handleDragEnd complete');
    }
    catch (error) {
        console.error(`Error in handleDragEnd: ${error}`);
    }
}
function handleDrop(e) {
    try {
        e.stopPropagation();
        const target = e.currentTarget;
        if (dragSrcEl && dragSrcEl !== target) {
            const dragSrcId = dragSrcEl.id;
            const dropTargetId = target.id;
            const dragSrcText = dragSrcEl.querySelector('.color-text-output-box').value;
            const dropTargetText = target.querySelector('.color-text-output-box').value;
            const dragSrcOuterHTML = dragSrcEl.outerHTML;
            const dropTargetOuterHTML = target.outerHTML;
            dragSrcEl.outerHTML = dropTargetOuterHTML;
            target.outerHTML = dragSrcOuterHTML;
            const newDragSrcEl = document.getElementById(dropTargetId);
            const newDropTargetEl = document.getElementById(dragSrcId);
            newDragSrcEl.id = dragSrcId;
            newDropTargetEl.id = dropTargetId;
            newDragSrcEl.querySelector('.color-text-output-box').value = dropTargetText;
            newDropTargetEl.querySelector('.color-text-output-box').value = dragSrcText;
            console.log('calling attachDragAndDropEventListeners for new elements');
            attachDragAndDropEventListeners(newDragSrcEl);
            attachDragAndDropEventListeners(newDropTargetEl);
        }
        console.log('handleDrop complete');
    }
    catch (error) {
        console.error(`Error in handleDrop: ${error}`);
    }
}
export const dragAndDrop = {
    attachDragAndDropEventListeners,
    handleDragEnd,
    handleDragOver,
    handleDragStart,
    handleDrop
};
//# sourceMappingURL=data:application/json;base64,