import { convert } from '../../color-conversion/conversion-index.js';
export function isHexTooGray(hex) {
    const rgb = convert.hexToRGB(hex);
    return isRGBTooGray(rgb);
}
export function isHexTooDark(hex) {
    const rgb = convert.hexToRGB(hex);
    return isRGBTooDark(rgb);
}
export function isHexTooBright(hex) {
    const rgb = convert.hexToRGB(hex);
    return isRGBTooBright(rgb);
}
export function isHSLTooGray(hsl, hslGrayThreshold = 20) {
    return hsl.value.saturation < hslGrayThreshold;
}
export function isHSLTooDark(hsl, hslDarknessThreshold = 25) {
    return hsl.value.lightness < hslDarknessThreshold;
}
export function isHSLTooBright(hsl, hslBrightnessThreshold = 75) {
    return hsl.value.lightness > hslBrightnessThreshold;
}
export function isRGBTooGray(rgb, rgbGrayTreshold = 10) {
    return (Math.abs(rgb.value.red - rgb.value.green) < rgbGrayTreshold &&
        Math.abs(rgb.value.green - rgb.value.blue) < rgbGrayTreshold &&
        Math.abs(rgb.value.red - rgb.value.blue) < rgbGrayTreshold);
}
export function isRGBTooDark(rgb, rgbMinBrightness = 50) {
    return ((rgb.value.red + rgb.value.green + rgb.value.blue) / 3 <
        rgbMinBrightness);
}
export function isRGBTooBright(rgb, rgbMaxBrightness = 200) {
    return ((rgb.value.red + rgb.value.green + rgb.value.blue) / 3 >
        rgbMaxBrightness);
}
export function isHSVTooGray(hsv, hsvGrayThreshold = 10) {
    return hsv.value.saturation < hsvGrayThreshold;
}
export function isHSVTooDark(hsv, hsvDarknessThreshold = 10) {
    return hsv.value.value < hsvDarknessThreshold;
}
export function isHSVTooBright(hsv, hsvBrightnessValueThreshold = 90, hsvBrightnessSaturationThreshold = 10) {
    return (hsv.value.value > hsvBrightnessValueThreshold &&
        hsv.value.saturation < hsvBrightnessSaturationThreshold);
}
export function isCMYKTooGray(cmyk, cmykGrayThreshold = 5) {
    return (Math.abs(cmyk.value.cyan - cmyk.value.magenta) < cmykGrayThreshold &&
        Math.abs(cmyk.value.magenta - cmyk.value.yellow) < cmykGrayThreshold);
}
export function isCMYKTooDark(cmyk, cmykDarknesshreshold = 90) {
    return cmyk.value.key > cmykDarknesshreshold;
}
export function isCMYKTooBright(cmyk, cmykBrightnessThreshold = 10) {
    return (cmyk.value.cyan < cmykBrightnessThreshold &&
        cmyk.value.magenta < cmykBrightnessThreshold &&
        cmyk.value.yellow < cmykBrightnessThreshold);
}
export function isLABTooGray(lab, labGrayThreshold = 10) {
    return (Math.abs(lab.value.a) < labGrayThreshold &&
        Math.abs(lab.value.b) < labGrayThreshold);
}
export function isLABTooDark(lab, labDarknessThreshold = 10) {
    return lab.value.l < labDarknessThreshold;
}
export function isLABTooBright(lab, labBrightnessThreshold = 90) {
    return lab.value.l > labBrightnessThreshold;
}
export function isColorInBounds(cmyk, hex, hsl, hsv, lab, rgb) {
    return (isCMYKTooGray(cmyk) ||
        isCMYKTooDark(cmyk) ||
        isCMYKTooBright(cmyk) ||
        isHexTooGray(hex) ||
        isHexTooDark(hex) ||
        isHexTooBright(hex) ||
        isHSLTooGray(hsl) ||
        isHSLTooDark(hsl) ||
        isHSLTooBright(hsl) ||
        isHSVTooGray(hsv) ||
        isHSVTooDark(hsv) ||
        isHSVTooBright(hsv) ||
        isLABTooGray(lab) ||
        isLABTooDark(lab) ||
        isLABTooBright(lab) ||
        isRGBTooGray(rgb) ||
        isRGBTooDark(rgb) ||
        isRGBTooBright(rgb));
}
export const colorLimits = {
    isCMYKTooBright,
    isCMYKTooDark,
    isCMYKTooGray,
    isHSLTooBright,
    isHSLTooDark,
    isHSLTooGray,
    isHSVTooBright,
    isHSVTooDark,
    isHSVTooGray,
    isLABTooBright,
    isLABTooDark,
    isLABTooGray,
    isRGBTooBright,
    isRGBTooDark,
    isRGBTooGray
};
//# sourceMappingURL=data:application/json;base64,