import { convert } from '../color-conversion/conversion-index.js';
function applyGammaCorrection(value) {
    return value > 0.0031308
        ? 1.055 * Math.pow(value, 1 / 2.4) - 0.055
        : 12.92 * value;
}
function clampRGB(rgb) {
    return {
        value: {
            red: Math.round(Math.min(Math.max(0, rgb.value.red), 1) * 255),
            green: Math.round(Math.min(Math.max(0, rgb.value.green), 1) * 255),
            blue: Math.round(Math.min(Math.max(0, rgb.value.blue), 1) * 255)
        },
        format: 'rgb'
    };
}
function cmykToXYZTryCaseHelper(cmy) {
    const rgb = convert.cmykToRGB(cmy);
    return convert.rgbToXYZ(rgb);
}
function hexToCMYKTryCaseHelper(hex) {
    const rgb = convert.hexToRGB(hex);
    return convert.rgbToCMYK(rgb);
}
function hexToXYZTryCaseHelper(hex) {
    const lab = convert.hexToLAB(hex);
    const xyz = convert.labToXYZ(lab);
    return xyz;
}
export function hueToRGB(p, q, t) {
    if (t < 0)
        t += 1;
    if (t > 1)
        t -= 1;
    if (t < 1 / 6)
        return p + (q - p) * 6 * t;
    if (t < 1 / 2)
        return q;
    if (t < 2 / 3)
        return p + (q - p) * (2 / 3 - t) * 6;
    return p;
}
function hslAddFormat(value) {
    return { value: value, format: 'hsl' };
}
function hslToCMYKTryCaseHelper(hsl) {
    const rgb = convert.hslToRGB(hsl);
    return convert.rgbToCMYK(rgb);
}
function hslToHexTryCaseHelper(hsl) {
    const rgb = convert.hslToRGB(hsl);
    return convert.rgbToHex(rgb);
}
function hslToXYZTryCaseHelper(hsl) {
    const lab = convert.hslToLAB(hsl);
    return convert.labToXYZ(lab);
}
function hsvToCMYKTryCaseHelper(hsv) {
    const rgb = convert.hsvToRGB(hsv);
    return convert.rgbToCMYK(rgb);
}
function hsvToXYZTryCaseHelper(hsv) {
    const rgb = convert.hsvToRGB(hsv);
    return convert.rgbToXYZ(rgb);
}
function labToCMYKTryCaseHelper(lab) {
    const rgb = convert.labToRGB(lab);
    return convert.rgbToCMYK(rgb);
}
function xyzToCMYKTryCaseHelper(xyz) {
    const lab = convert.xyzToLAB(xyz);
    return convert.labToCMYK(lab);
}
function xyzToHexTryCaseHelper(xyz) {
    const lab = convert.xyzToLAB(xyz);
    return convert.labToHex(lab);
}
function xyzToHSLTryCaseHelper(xyz) {
    const lab = convert.xyzToLAB(xyz);
    return convert.labToHSL(lab);
}
function xyzToHSVTryCaseHelper(xyz) {
    const lab = convert.xyzToLAB(xyz);
    return convert.labToHSV(lab);
}
export const conversionHelpers = {
    applyGammaCorrection,
    clampRGB,
    cmykToXYZTryCaseHelper,
    hexToCMYKTryCaseHelper,
    hexToXYZTryCaseHelper,
    hslAddFormat,
    hslToCMYKTryCaseHelper,
    hslToHexTryCaseHelper,
    hslToXYZTryCaseHelper,
    hsvToCMYKTryCaseHelper,
    hsvToXYZTryCaseHelper,
    hueToRGB,
    labToCMYKTryCaseHelper,
    xyzToCMYKTryCaseHelper,
    xyzToHexTryCaseHelper,
    xyzToHSLTryCaseHelper,
    xyzToHSVTryCaseHelper
};
//# sourceMappingURL=data:application/json;base64,