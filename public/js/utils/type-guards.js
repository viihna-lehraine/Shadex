import { conversionMap } from '../color-conversion/conversion.js';
function isCMYK(color) {
    return color.format === 'cmyk';
}
function isHex(color) {
    return color.format === 'hex';
}
function isHSL(color) {
    return color.format === 'hsl';
}
function isHSV(color) {
    return color.format === 'hsv';
}
function isLAB(color) {
    return color.format === 'lab';
}
function isRGB(color) {
    return color.format === 'rgb';
}
function isXYZ(color) {
    return color.format === 'xyz';
}
// ***** SECTION 2 *****
function isHexColor(value) {
    return (typeof value === 'object' &&
        value !== null &&
        'hex' in value &&
        typeof value.hex === 'string' &&
        value.format === 'hex');
}
// ***** SECTION 3 *****
function isColorObjectData(color) {
    return (typeof color === 'object' &&
        color !== null &&
        'format' in color &&
        'value' in color);
}
// ***** SECTION 4 *****
function isColorFormat(format) {
    return ['cmyk', 'hex', 'hsl', 'hsv', 'lab', 'rgb'].includes(format);
}
function isColorSpace(value) {
    return ['cmyk', 'hex', 'hsl', 'hsv', 'lab', 'rgb', 'xyz'].includes(value);
}
// ***** SECTION 5 *****
function isInputElement(element) {
    return element instanceof HTMLInputElement;
}
// ***** SECTION 6 *****
function isConversion(from, to) {
    return from in conversionMap && to in conversionMap[from];
}
export const guards = {
    isCMYK,
    isColorObjectData,
    isHex,
    isHSL,
    isHSV,
    isLAB,
    isRGB,
    isXYZ,
    isHexColor,
    isColorFormat,
    isColorSpace,
    isConversion,
    isInputElement
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZS1ndWFyZHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvdHlwZS1ndWFyZHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRS9ELFNBQVMsTUFBTSxDQUFDLEtBQXNCO0lBQ3JDLE9BQU8sS0FBSyxDQUFDLE1BQU0sS0FBSyxNQUFNLENBQUM7QUFDaEMsQ0FBQztBQUVELFNBQVMsS0FBSyxDQUFDLEtBQXNCO0lBQ3BDLE9BQU8sS0FBSyxDQUFDLE1BQU0sS0FBSyxLQUFLLENBQUM7QUFDL0IsQ0FBQztBQUVELFNBQVMsS0FBSyxDQUFDLEtBQXNCO0lBQ3BDLE9BQU8sS0FBSyxDQUFDLE1BQU0sS0FBSyxLQUFLLENBQUM7QUFDL0IsQ0FBQztBQUVELFNBQVMsS0FBSyxDQUFDLEtBQXNCO0lBQ3BDLE9BQU8sS0FBSyxDQUFDLE1BQU0sS0FBSyxLQUFLLENBQUM7QUFDL0IsQ0FBQztBQUVELFNBQVMsS0FBSyxDQUFDLEtBQXNCO0lBQ3BDLE9BQU8sS0FBSyxDQUFDLE1BQU0sS0FBSyxLQUFLLENBQUM7QUFDL0IsQ0FBQztBQUVELFNBQVMsS0FBSyxDQUFDLEtBQXNCO0lBQ3BDLE9BQU8sS0FBSyxDQUFDLE1BQU0sS0FBSyxLQUFLLENBQUM7QUFDL0IsQ0FBQztBQUVELFNBQVMsS0FBSyxDQUFDLEtBQXNCO0lBQ3BDLE9BQU8sS0FBSyxDQUFDLE1BQU0sS0FBSyxLQUFLLENBQUM7QUFDL0IsQ0FBQztBQUVELHdCQUF3QjtBQUV4QixTQUFTLFVBQVUsQ0FBQyxLQUFjO0lBQ2pDLE9BQU8sQ0FDTixPQUFPLEtBQUssS0FBSyxRQUFRO1FBQ3pCLEtBQUssS0FBSyxJQUFJO1FBQ2QsS0FBSyxJQUFJLEtBQUs7UUFDZCxPQUFRLEtBQW1CLENBQUMsR0FBRyxLQUFLLFFBQVE7UUFDM0MsS0FBbUIsQ0FBQyxNQUFNLEtBQUssS0FBSyxDQUNyQyxDQUFDO0FBQ0gsQ0FBQztBQUVELHdCQUF3QjtBQUV4QixTQUFTLGlCQUFpQixDQUFDLEtBQWM7SUFDeEMsT0FBTyxDQUNOLE9BQU8sS0FBSyxLQUFLLFFBQVE7UUFDekIsS0FBSyxLQUFLLElBQUk7UUFDZCxRQUFRLElBQUksS0FBSztRQUNqQixPQUFPLElBQUksS0FBSyxDQUNoQixDQUFDO0FBQ0gsQ0FBQztBQUVELHdCQUF3QjtBQUV4QixTQUFTLGFBQWEsQ0FBQyxNQUFjO0lBQ3BDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNyRSxDQUFDO0FBRUQsU0FBUyxZQUFZLENBQUMsS0FBYTtJQUNsQyxPQUFPLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzNFLENBQUM7QUFFRCx3QkFBd0I7QUFFeEIsU0FBUyxjQUFjLENBQUMsT0FBMkI7SUFDbEQsT0FBTyxPQUFPLFlBQVksZ0JBQWdCLENBQUM7QUFDNUMsQ0FBQztBQUVELHdCQUF3QjtBQUV4QixTQUFTLFlBQVksQ0FDcEIsSUFBK0IsRUFDL0IsRUFBa0M7SUFFbEMsT0FBTyxJQUFJLElBQUksYUFBYSxJQUFJLEVBQUUsSUFBSSxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDM0QsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBRztJQUNyQixNQUFNO0lBQ04saUJBQWlCO0lBQ2pCLEtBQUs7SUFDTCxLQUFLO0lBQ0wsS0FBSztJQUNMLEtBQUs7SUFDTCxLQUFLO0lBQ0wsS0FBSztJQUNMLFVBQVU7SUFDVixhQUFhO0lBQ2IsWUFBWTtJQUNaLFlBQVk7SUFDWixjQUFjO0NBQ2QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHR5cGVzIGZyb20gJy4uL2luZGV4JztcbmltcG9ydCB7IGNvbnZlcnNpb25NYXAgfSBmcm9tICcuLi9jb2xvci1jb252ZXJzaW9uL2NvbnZlcnNpb24nO1xuXG5mdW5jdGlvbiBpc0NNWUsoY29sb3I6IHR5cGVzLkNvbG9yRGF0YSk6IGNvbG9yIGlzIHR5cGVzLkNNWUsge1xuXHRyZXR1cm4gY29sb3IuZm9ybWF0ID09PSAnY215ayc7XG59XG5cbmZ1bmN0aW9uIGlzSGV4KGNvbG9yOiB0eXBlcy5Db2xvckRhdGEpOiBjb2xvciBpcyB0eXBlcy5IZXgge1xuXHRyZXR1cm4gY29sb3IuZm9ybWF0ID09PSAnaGV4Jztcbn1cblxuZnVuY3Rpb24gaXNIU0woY29sb3I6IHR5cGVzLkNvbG9yRGF0YSk6IGNvbG9yIGlzIHR5cGVzLkhTTCB7XG5cdHJldHVybiBjb2xvci5mb3JtYXQgPT09ICdoc2wnO1xufVxuXG5mdW5jdGlvbiBpc0hTVihjb2xvcjogdHlwZXMuQ29sb3JEYXRhKTogY29sb3IgaXMgdHlwZXMuSFNWIHtcblx0cmV0dXJuIGNvbG9yLmZvcm1hdCA9PT0gJ2hzdic7XG59XG5cbmZ1bmN0aW9uIGlzTEFCKGNvbG9yOiB0eXBlcy5Db2xvckRhdGEpOiBjb2xvciBpcyB0eXBlcy5MQUIge1xuXHRyZXR1cm4gY29sb3IuZm9ybWF0ID09PSAnbGFiJztcbn1cblxuZnVuY3Rpb24gaXNSR0IoY29sb3I6IHR5cGVzLkNvbG9yRGF0YSk6IGNvbG9yIGlzIHR5cGVzLlJHQiB7XG5cdHJldHVybiBjb2xvci5mb3JtYXQgPT09ICdyZ2InO1xufVxuXG5mdW5jdGlvbiBpc1hZWihjb2xvcjogdHlwZXMuQ29sb3JEYXRhKTogY29sb3IgaXMgdHlwZXMuWFlaIHtcblx0cmV0dXJuIGNvbG9yLmZvcm1hdCA9PT0gJ3h5eic7XG59XG5cbi8vICoqKioqIFNFQ1RJT04gMiAqKioqKlxuXG5mdW5jdGlvbiBpc0hleENvbG9yKHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgdHlwZXMuSGV4IHtcblx0cmV0dXJuIChcblx0XHR0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmXG5cdFx0dmFsdWUgIT09IG51bGwgJiZcblx0XHQnaGV4JyBpbiB2YWx1ZSAmJlxuXHRcdHR5cGVvZiAodmFsdWUgYXMgdHlwZXMuSGV4KS5oZXggPT09ICdzdHJpbmcnICYmXG5cdFx0KHZhbHVlIGFzIHR5cGVzLkhleCkuZm9ybWF0ID09PSAnaGV4J1xuXHQpO1xufVxuXG4vLyAqKioqKiBTRUNUSU9OIDMgKioqKipcblxuZnVuY3Rpb24gaXNDb2xvck9iamVjdERhdGEoY29sb3I6IHVua25vd24pOiBjb2xvciBpcyB0eXBlcy5Db2xvck9iamVjdERhdGEge1xuXHRyZXR1cm4gKFxuXHRcdHR5cGVvZiBjb2xvciA9PT0gJ29iamVjdCcgJiZcblx0XHRjb2xvciAhPT0gbnVsbCAmJlxuXHRcdCdmb3JtYXQnIGluIGNvbG9yICYmXG5cdFx0J3ZhbHVlJyBpbiBjb2xvclxuXHQpO1xufVxuXG4vLyAqKioqKiBTRUNUSU9OIDQgKioqKipcblxuZnVuY3Rpb24gaXNDb2xvckZvcm1hdChmb3JtYXQ6IHN0cmluZyk6IGZvcm1hdCBpcyB0eXBlcy5Db2xvckZvcm1hdHMge1xuXHRyZXR1cm4gWydjbXlrJywgJ2hleCcsICdoc2wnLCAnaHN2JywgJ2xhYicsICdyZ2InXS5pbmNsdWRlcyhmb3JtYXQpO1xufVxuXG5mdW5jdGlvbiBpc0NvbG9yU3BhY2UodmFsdWU6IHN0cmluZyk6IHZhbHVlIGlzIHR5cGVzLkNvbG9yU3BhY2Uge1xuXHRyZXR1cm4gWydjbXlrJywgJ2hleCcsICdoc2wnLCAnaHN2JywgJ2xhYicsICdyZ2InLCAneHl6J10uaW5jbHVkZXModmFsdWUpO1xufVxuXG4vLyAqKioqKiBTRUNUSU9OIDUgKioqKipcblxuZnVuY3Rpb24gaXNJbnB1dEVsZW1lbnQoZWxlbWVudDogSFRNTEVsZW1lbnQgfCBudWxsKTogZWxlbWVudCBpcyBIVE1MRWxlbWVudCB7XG5cdHJldHVybiBlbGVtZW50IGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudDtcbn1cblxuLy8gKioqKiogU0VDVElPTiA2ICoqKioqXG5cbmZ1bmN0aW9uIGlzQ29udmVyc2lvbihcblx0ZnJvbToga2V5b2YgdHlwZXMuQ29udmVyc2lvbk1hcCxcblx0dG86IGtleW9mIHR5cGVzLkNvbG9yRGF0YUludGVyZmFjZVxuKTogYm9vbGVhbiB7XG5cdHJldHVybiBmcm9tIGluIGNvbnZlcnNpb25NYXAgJiYgdG8gaW4gY29udmVyc2lvbk1hcFtmcm9tXTtcbn1cblxuZXhwb3J0IGNvbnN0IGd1YXJkcyA9IHtcblx0aXNDTVlLLFxuXHRpc0NvbG9yT2JqZWN0RGF0YSxcblx0aXNIZXgsXG5cdGlzSFNMLFxuXHRpc0hTVixcblx0aXNMQUIsXG5cdGlzUkdCLFxuXHRpc1hZWixcblx0aXNIZXhDb2xvcixcblx0aXNDb2xvckZvcm1hdCxcblx0aXNDb2xvclNwYWNlLFxuXHRpc0NvbnZlcnNpb24sXG5cdGlzSW5wdXRFbGVtZW50XG59O1xuIl19