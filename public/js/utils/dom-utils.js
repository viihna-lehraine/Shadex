import { database } from '../database/database.js';
import { domHelpers } from '../helpers/dom.js';
import { paletteUtils } from '../utils/palette-utils.js';
async function genPaletteBox(items, numBoxes, tableId) {
    try {
        const paletteRow = document.getElementById('palette-row');
        if (!paletteRow) {
            console.error('paletteRow is undefined.');
            return;
        }
        paletteRow.innerHTML = '';
        const fragment = document.createDocumentFragment();
        items.slice(0, numBoxes).forEach((item, i) => {
            const { hsl: color } = item.colors;
            const { colorStripe } = domHelpers.makePaletteBox(color, i + 1);
            fragment.appendChild(colorStripe);
            paletteUtils.populateColorTextOutputBox(color, i + 1);
        });
        paletteRow.appendChild(fragment);
        console.log('Palette boxes generated and rendered.');
        await database.saveData('tables', tableId, { palette: items });
    }
    catch (error) {
        console.error(`Error generating palette box: ${error}`);
    }
}
export const domUtils = {
    genPaletteBox
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tLXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2RvbS11dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDaEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRzVDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV0RCxLQUFLLFVBQVUsYUFBYSxDQUMzQixLQUE0QixFQUM1QixRQUFnQixFQUNoQixPQUFlO0lBRWYsSUFBSSxDQUFDO1FBQ0osTUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUxRCxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDakIsT0FBTyxDQUFDLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1lBRTFDLE9BQU87UUFDUixDQUFDO1FBRUQsVUFBVSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7UUFFMUIsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLHNCQUFzQixFQUFFLENBQUM7UUFFbkQsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzVDLE1BQU0sRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUNuQyxNQUFNLEVBQUUsV0FBVyxFQUFFLEdBQUcsVUFBVSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBRWhFLFFBQVEsQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7WUFFbEMsWUFBWSxDQUFDLDBCQUEwQixDQUFDLEtBQUssRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDdkQsQ0FBQyxDQUFDLENBQUM7UUFFSCxVQUFVLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRWpDLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUNBQXVDLENBQUMsQ0FBQztRQUVyRCxNQUFNLFFBQVEsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDO1FBQ2hCLE9BQU8sQ0FBQyxLQUFLLENBQUMsaUNBQWlDLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDekQsQ0FBQztBQUNGLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQXVCO0lBQzNDLGFBQWE7Q0FDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGF0YWJhc2UgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZSc7XG5pbXBvcnQgeyBkb21IZWxwZXJzIH0gZnJvbSAnLi4vaGVscGVycy9kb20nO1xuaW1wb3J0ICogYXMgZm5PYmplY3RzIGZyb20gJy4uL2luZGV4L2ZuLW9iamVjdHMnO1xuaW1wb3J0ICogYXMgcGFsZXR0ZSBmcm9tICcuLi9pbmRleC9wYWxldHRlJztcbmltcG9ydCB7IHBhbGV0dGVVdGlscyB9IGZyb20gJy4uL3V0aWxzL3BhbGV0dGUtdXRpbHMnO1xuXG5hc3luYyBmdW5jdGlvbiBnZW5QYWxldHRlQm94KFxuXHRpdGVtczogcGFsZXR0ZS5QYWxldHRlSXRlbVtdLFxuXHRudW1Cb3hlczogbnVtYmVyLFxuXHR0YWJsZUlkOiBzdHJpbmdcbik6IFByb21pc2U8dm9pZD4ge1xuXHR0cnkge1xuXHRcdGNvbnN0IHBhbGV0dGVSb3cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGFsZXR0ZS1yb3cnKTtcblxuXHRcdGlmICghcGFsZXR0ZVJvdykge1xuXHRcdFx0Y29uc29sZS5lcnJvcigncGFsZXR0ZVJvdyBpcyB1bmRlZmluZWQuJyk7XG5cblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRwYWxldHRlUm93LmlubmVySFRNTCA9ICcnO1xuXG5cdFx0Y29uc3QgZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG5cblx0XHRpdGVtcy5zbGljZSgwLCBudW1Cb3hlcykuZm9yRWFjaCgoaXRlbSwgaSkgPT4ge1xuXHRcdFx0Y29uc3QgeyBoc2w6IGNvbG9yIH0gPSBpdGVtLmNvbG9ycztcblx0XHRcdGNvbnN0IHsgY29sb3JTdHJpcGUgfSA9IGRvbUhlbHBlcnMubWFrZVBhbGV0dGVCb3goY29sb3IsIGkgKyAxKTtcblxuXHRcdFx0ZnJhZ21lbnQuYXBwZW5kQ2hpbGQoY29sb3JTdHJpcGUpO1xuXG5cdFx0XHRwYWxldHRlVXRpbHMucG9wdWxhdGVDb2xvclRleHRPdXRwdXRCb3goY29sb3IsIGkgKyAxKTtcblx0XHR9KTtcblxuXHRcdHBhbGV0dGVSb3cuYXBwZW5kQ2hpbGQoZnJhZ21lbnQpO1xuXG5cdFx0Y29uc29sZS5sb2coJ1BhbGV0dGUgYm94ZXMgZ2VuZXJhdGVkIGFuZCByZW5kZXJlZC4nKTtcblxuXHRcdGF3YWl0IGRhdGFiYXNlLnNhdmVEYXRhKCd0YWJsZXMnLCB0YWJsZUlkLCB7IHBhbGV0dGU6IGl0ZW1zIH0pO1xuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGNvbnNvbGUuZXJyb3IoYEVycm9yIGdlbmVyYXRpbmcgcGFsZXR0ZSBib3g6ICR7ZXJyb3J9YCk7XG5cdH1cbn1cblxuZXhwb3J0IGNvbnN0IGRvbVV0aWxzOiBmbk9iamVjdHMuRE9NVXRpbHMgPSB7XG5cdGdlblBhbGV0dGVCb3hcbn07XG4iXX0=