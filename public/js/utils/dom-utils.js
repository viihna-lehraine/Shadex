import { database } from '../database/database.js';
import { domHelpers } from '../helpers/dom.js';
import { paletteUtils } from '../utils/palette-utils.js';
async function genPaletteBox(items, numBoxes, tableId) {
    try {
        const paletteRow = document.getElementById('palette-row');
        if (!paletteRow) {
            console.error('paletteRow is undefined.');
            return;
        }
        paletteRow.innerHTML = '';
        const fragment = document.createDocumentFragment();
        items.slice(0, numBoxes).forEach((item, i) => {
            const color = { value: item.colors.hsl, format: 'hsl' };
            const { colorStripe } = domHelpers.makePaletteBox(color, i + 1);
            fragment.appendChild(colorStripe);
            paletteUtils.populateColorTextOutputBox(color, i + 1);
        });
        paletteRow.appendChild(fragment);
        console.log('Palette boxes generated and rendered.');
        await database.saveData('tables', tableId, { palette: items });
    }
    catch (error) {
        console.error(`Error generating palette box: ${error}`);
    }
}
export const domUtils = {
    genPaletteBox
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tLXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2RvbS11dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDaEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBSTVDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV0RCxLQUFLLFVBQVUsYUFBYSxDQUMzQixLQUE0QixFQUM1QixRQUFnQixFQUNoQixPQUFlO0lBRWYsSUFBSSxDQUFDO1FBQ0osTUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUxRCxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDakIsT0FBTyxDQUFDLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1lBRTFDLE9BQU87UUFDUixDQUFDO1FBRUQsVUFBVSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7UUFFMUIsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLHNCQUFzQixFQUFFLENBQUM7UUFFbkQsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzVDLE1BQU0sS0FBSyxHQUFlLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQztZQUNwRSxNQUFNLEVBQUUsV0FBVyxFQUFFLEdBQUcsVUFBVSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBRWhFLFFBQVEsQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7WUFFbEMsWUFBWSxDQUFDLDBCQUEwQixDQUFDLEtBQUssRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDdkQsQ0FBQyxDQUFDLENBQUM7UUFFSCxVQUFVLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRWpDLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUNBQXVDLENBQUMsQ0FBQztRQUVyRCxNQUFNLFFBQVEsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDO1FBQ2hCLE9BQU8sQ0FBQyxLQUFLLENBQUMsaUNBQWlDLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDekQsQ0FBQztBQUNGLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQXVCO0lBQzNDLGFBQWE7Q0FDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGF0YWJhc2UgfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZSc7XG5pbXBvcnQgeyBkb21IZWxwZXJzIH0gZnJvbSAnLi4vaGVscGVycy9kb20nO1xuaW1wb3J0ICogYXMgY29sb3JzIGZyb20gJy4uL2luZGV4L2NvbG9ycyc7XG5pbXBvcnQgKiBhcyBmbk9iamVjdHMgZnJvbSAnLi4vaW5kZXgvZm4tb2JqZWN0cyc7XG5pbXBvcnQgKiBhcyBwYWxldHRlIGZyb20gJy4uL2luZGV4L3BhbGV0dGUnO1xuaW1wb3J0IHsgcGFsZXR0ZVV0aWxzIH0gZnJvbSAnLi4vdXRpbHMvcGFsZXR0ZS11dGlscyc7XG5cbmFzeW5jIGZ1bmN0aW9uIGdlblBhbGV0dGVCb3goXG5cdGl0ZW1zOiBwYWxldHRlLlBhbGV0dGVJdGVtW10sXG5cdG51bUJveGVzOiBudW1iZXIsXG5cdHRhYmxlSWQ6IHN0cmluZ1xuKTogUHJvbWlzZTx2b2lkPiB7XG5cdHRyeSB7XG5cdFx0Y29uc3QgcGFsZXR0ZVJvdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwYWxldHRlLXJvdycpO1xuXG5cdFx0aWYgKCFwYWxldHRlUm93KSB7XG5cdFx0XHRjb25zb2xlLmVycm9yKCdwYWxldHRlUm93IGlzIHVuZGVmaW5lZC4nKTtcblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHBhbGV0dGVSb3cuaW5uZXJIVE1MID0gJyc7XG5cblx0XHRjb25zdCBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcblxuXHRcdGl0ZW1zLnNsaWNlKDAsIG51bUJveGVzKS5mb3JFYWNoKChpdGVtLCBpKSA9PiB7XG5cdFx0XHRjb25zdCBjb2xvcjogY29sb3JzLkhTTCA9IHsgdmFsdWU6IGl0ZW0uY29sb3JzLmhzbCwgZm9ybWF0OiAnaHNsJyB9O1xuXHRcdFx0Y29uc3QgeyBjb2xvclN0cmlwZSB9ID0gZG9tSGVscGVycy5tYWtlUGFsZXR0ZUJveChjb2xvciwgaSArIDEpO1xuXG5cdFx0XHRmcmFnbWVudC5hcHBlbmRDaGlsZChjb2xvclN0cmlwZSk7XG5cblx0XHRcdHBhbGV0dGVVdGlscy5wb3B1bGF0ZUNvbG9yVGV4dE91dHB1dEJveChjb2xvciwgaSArIDEpO1xuXHRcdH0pO1xuXG5cdFx0cGFsZXR0ZVJvdy5hcHBlbmRDaGlsZChmcmFnbWVudCk7XG5cblx0XHRjb25zb2xlLmxvZygnUGFsZXR0ZSBib3hlcyBnZW5lcmF0ZWQgYW5kIHJlbmRlcmVkLicpO1xuXG5cdFx0YXdhaXQgZGF0YWJhc2Uuc2F2ZURhdGEoJ3RhYmxlcycsIHRhYmxlSWQsIHsgcGFsZXR0ZTogaXRlbXMgfSk7XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0Y29uc29sZS5lcnJvcihgRXJyb3IgZ2VuZXJhdGluZyBwYWxldHRlIGJveDogJHtlcnJvcn1gKTtcblx0fVxufVxuXG5leHBvcnQgY29uc3QgZG9tVXRpbHM6IGZuT2JqZWN0cy5ET01VdGlscyA9IHtcblx0Z2VuUGFsZXR0ZUJveFxufTtcbiJdfQ==