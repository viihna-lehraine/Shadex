// File: src/paelette/common/paletteUtils/probability.js
import { data } from '../../../data/index.js';
import { logger } from '../../../logger/index.js';
const logMode = data.mode.logging;
const probabilities = data.consts.probabilities;
function getWeightedRandomInterval() {
    try {
        const weights = probabilities.weights;
        const probabilityValues = probabilities.values;
        const cumulativeProbabilities = probabilityValues.reduce((acc, prob, i) => {
            acc[i] = (acc[i - 1] || 0) + prob;
            return acc;
        }, []);
        const random = Math.random();
        for (let i = 0; i < cumulativeProbabilities.length; i++) {
            if (random < cumulativeProbabilities[i]) {
                return weights[i];
            }
        }
        return weights[weights.length - 1];
    }
    catch (error) {
        if (logMode.errors)
            logger.error(`Error generating weighted random interval: ${error}`);
        return 50;
    }
}
export const probability = {
    getWeightedRandomInterval
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvYmFiaWxpdHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcGFsZXR0ZS9jb21tb24vcGFsZXR0ZVV0aWxzL3Byb2JhYmlsaXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdEQUF3RDtBQUd4RCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDOUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRWxELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO0FBQ2xDLE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDO0FBRWhELFNBQVMseUJBQXlCO0lBQ2pDLElBQUksQ0FBQztRQUNKLE1BQU0sT0FBTyxHQUFHLGFBQWEsQ0FBQyxPQUFPLENBQUM7UUFDdEMsTUFBTSxpQkFBaUIsR0FBRyxhQUFhLENBQUMsTUFBTSxDQUFDO1FBQy9DLE1BQU0sdUJBQXVCLEdBQWEsaUJBQWlCLENBQUMsTUFBTSxDQUNqRSxDQUFDLEdBQWEsRUFBRSxJQUFZLEVBQUUsQ0FBUyxFQUFFLEVBQUU7WUFDMUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDbEMsT0FBTyxHQUFHLENBQUM7UUFDWixDQUFDLEVBQ0QsRUFBRSxDQUNGLENBQUM7UUFDRixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFFN0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLHVCQUF1QixDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQ3pELElBQUksTUFBTSxHQUFHLHVCQUF1QixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7Z0JBQ3pDLE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25CLENBQUM7UUFDRixDQUFDO1FBRUQsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztRQUNoQixJQUFJLE9BQU8sQ0FBQyxNQUFNO1lBQ2pCLE1BQU0sQ0FBQyxLQUFLLENBQUMsOENBQThDLEtBQUssRUFBRSxDQUFDLENBQUM7UUFFckUsT0FBTyxFQUFFLENBQUM7SUFDWCxDQUFDO0FBQ0YsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBb0M7SUFDM0QseUJBQXlCO0NBQ2hCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiBzcmMvcGFlbGV0dGUvY29tbW9uL3BhbGV0dGVVdGlscy9wcm9iYWJpbGl0eS5qc1xuXG5pbXBvcnQgeyBQYWxldHRlQ29tbW9uX1V0aWxzX1Byb2JhYmlsaXR5IH0gZnJvbSAnLi4vLi4vLi4vaW5kZXgvaW5kZXguanMnO1xuaW1wb3J0IHsgZGF0YSB9IGZyb20gJy4uLy4uLy4uL2RhdGEvaW5kZXguanMnO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnLi4vLi4vLi4vbG9nZ2VyL2luZGV4LmpzJztcblxuY29uc3QgbG9nTW9kZSA9IGRhdGEubW9kZS5sb2dnaW5nO1xuY29uc3QgcHJvYmFiaWxpdGllcyA9IGRhdGEuY29uc3RzLnByb2JhYmlsaXRpZXM7XG5cbmZ1bmN0aW9uIGdldFdlaWdodGVkUmFuZG9tSW50ZXJ2YWwoKTogbnVtYmVyIHtcblx0dHJ5IHtcblx0XHRjb25zdCB3ZWlnaHRzID0gcHJvYmFiaWxpdGllcy53ZWlnaHRzO1xuXHRcdGNvbnN0IHByb2JhYmlsaXR5VmFsdWVzID0gcHJvYmFiaWxpdGllcy52YWx1ZXM7XG5cdFx0Y29uc3QgY3VtdWxhdGl2ZVByb2JhYmlsaXRpZXM6IG51bWJlcltdID0gcHJvYmFiaWxpdHlWYWx1ZXMucmVkdWNlKFxuXHRcdFx0KGFjYzogbnVtYmVyW10sIHByb2I6IG51bWJlciwgaTogbnVtYmVyKSA9PiB7XG5cdFx0XHRcdGFjY1tpXSA9IChhY2NbaSAtIDFdIHx8IDApICsgcHJvYjtcblx0XHRcdFx0cmV0dXJuIGFjYztcblx0XHRcdH0sXG5cdFx0XHRbXVxuXHRcdCk7XG5cdFx0Y29uc3QgcmFuZG9tID0gTWF0aC5yYW5kb20oKTtcblxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgY3VtdWxhdGl2ZVByb2JhYmlsaXRpZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdGlmIChyYW5kb20gPCBjdW11bGF0aXZlUHJvYmFiaWxpdGllc1tpXSkge1xuXHRcdFx0XHRyZXR1cm4gd2VpZ2h0c1tpXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gd2VpZ2h0c1t3ZWlnaHRzLmxlbmd0aCAtIDFdO1xuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGlmIChsb2dNb2RlLmVycm9ycylcblx0XHRcdGxvZ2dlci5lcnJvcihgRXJyb3IgZ2VuZXJhdGluZyB3ZWlnaHRlZCByYW5kb20gaW50ZXJ2YWw6ICR7ZXJyb3J9YCk7XG5cblx0XHRyZXR1cm4gNTA7XG5cdH1cbn1cblxuZXhwb3J0IGNvbnN0IHByb2JhYmlsaXR5OiBQYWxldHRlQ29tbW9uX1V0aWxzX1Byb2JhYmlsaXR5ID0ge1xuXHRnZXRXZWlnaHRlZFJhbmRvbUludGVydmFsXG59IGFzIGNvbnN0O1xuIl19