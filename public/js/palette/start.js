// File: src/palette/start.ts
import { helpers, utils } from '../common.js';
import { generate } from './generate.js';
import { idb } from '../idb.js';
async function paletteGen(options) {
    try {
        let { numBoxes, customColor } = options;
        if (customColor === null || customColor === undefined) {
            console.error('Custom color is null or undefined.');
            return;
        }
        const validatedCustomColor = helpers.dom.validateAndConvertColor(customColor) ??
            utils.random.hsl(options.enableAlpha);
        options.customColor = validatedCustomColor;
        const palette = await generate.selectedPalette(options);
        if (palette.items.length === 0) {
            console.error('Colors array is empty or invalid.');
            return;
        }
        console.log(`Colors array generated: ${JSON.stringify(palette.items)}`);
        const tableId = await idb.getNextTableID();
        await utils.dom.genPaletteBox(palette.items, numBoxes, tableId);
    }
    catch (error) {
        console.error(`Error starting palette generation: ${error}`);
    }
}
export const start = { paletteGen };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGFsZXR0ZS9zdGFydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkI7QUFHN0IsT0FBTyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDM0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN0QyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRTdCLEtBQUssVUFBVSxVQUFVLENBQUMsT0FBdUI7SUFDaEQsSUFBSSxDQUFDO1FBQ0osSUFBSSxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsR0FBRyxPQUFPLENBQUM7UUFFeEMsSUFBSSxXQUFXLEtBQUssSUFBSSxJQUFJLFdBQVcsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUN2RCxPQUFPLENBQUMsS0FBSyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7WUFFcEQsT0FBTztRQUNSLENBQUM7UUFFRCxNQUFNLG9CQUFvQixHQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLFdBQVcsQ0FBUztZQUN6RCxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFdkMsT0FBTyxDQUFDLFdBQVcsR0FBRyxvQkFBb0IsQ0FBQztRQUUzQyxNQUFNLE9BQU8sR0FBRyxNQUFNLFFBQVEsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFeEQsSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUUsQ0FBQztZQUNoQyxPQUFPLENBQUMsS0FBSyxDQUFDLG1DQUFtQyxDQUFDLENBQUM7WUFFbkQsT0FBTztRQUNSLENBQUM7UUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFeEUsTUFBTSxPQUFPLEdBQUcsTUFBTSxHQUFHLENBQUMsY0FBYyxFQUFFLENBQUM7UUFFM0MsTUFBTSxLQUFLLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztRQUNoQixPQUFPLENBQUMsS0FBSyxDQUFDLHNDQUFzQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQzlELENBQUM7QUFDRixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUUsVUFBVSxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiBzcmMvcGFsZXR0ZS9zdGFydC50c1xuXG5pbXBvcnQgeyBIU0wsIFBhbGV0dGVPcHRpb25zIH0gZnJvbSAnLi4vaW5kZXgnO1xuaW1wb3J0IHsgaGVscGVycywgdXRpbHMgfSBmcm9tICcuLi9jb21tb24nO1xuaW1wb3J0IHsgZ2VuZXJhdGUgfSBmcm9tICcuL2dlbmVyYXRlJztcbmltcG9ydCB7IGlkYiB9IGZyb20gJy4uL2lkYic7XG5cbmFzeW5jIGZ1bmN0aW9uIHBhbGV0dGVHZW4ob3B0aW9uczogUGFsZXR0ZU9wdGlvbnMpOiBQcm9taXNlPHZvaWQ+IHtcblx0dHJ5IHtcblx0XHRsZXQgeyBudW1Cb3hlcywgY3VzdG9tQ29sb3IgfSA9IG9wdGlvbnM7XG5cblx0XHRpZiAoY3VzdG9tQ29sb3IgPT09IG51bGwgfHwgY3VzdG9tQ29sb3IgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0Y29uc29sZS5lcnJvcignQ3VzdG9tIGNvbG9yIGlzIG51bGwgb3IgdW5kZWZpbmVkLicpO1xuXG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Y29uc3QgdmFsaWRhdGVkQ3VzdG9tQ29sb3I6IEhTTCA9XG5cdFx0XHQoaGVscGVycy5kb20udmFsaWRhdGVBbmRDb252ZXJ0Q29sb3IoY3VzdG9tQ29sb3IpIGFzIEhTTCkgPz9cblx0XHRcdHV0aWxzLnJhbmRvbS5oc2wob3B0aW9ucy5lbmFibGVBbHBoYSk7XG5cblx0XHRvcHRpb25zLmN1c3RvbUNvbG9yID0gdmFsaWRhdGVkQ3VzdG9tQ29sb3I7XG5cblx0XHRjb25zdCBwYWxldHRlID0gYXdhaXQgZ2VuZXJhdGUuc2VsZWN0ZWRQYWxldHRlKG9wdGlvbnMpO1xuXG5cdFx0aWYgKHBhbGV0dGUuaXRlbXMubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRjb25zb2xlLmVycm9yKCdDb2xvcnMgYXJyYXkgaXMgZW1wdHkgb3IgaW52YWxpZC4nKTtcblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnNvbGUubG9nKGBDb2xvcnMgYXJyYXkgZ2VuZXJhdGVkOiAke0pTT04uc3RyaW5naWZ5KHBhbGV0dGUuaXRlbXMpfWApO1xuXG5cdFx0Y29uc3QgdGFibGVJZCA9IGF3YWl0IGlkYi5nZXROZXh0VGFibGVJRCgpO1xuXG5cdFx0YXdhaXQgdXRpbHMuZG9tLmdlblBhbGV0dGVCb3gocGFsZXR0ZS5pdGVtcywgbnVtQm94ZXMsIHRhYmxlSWQpO1xuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGNvbnNvbGUuZXJyb3IoYEVycm9yIHN0YXJ0aW5nIHBhbGV0dGUgZ2VuZXJhdGlvbjogJHtlcnJvcn1gKTtcblx0fVxufVxuXG5leHBvcnQgY29uc3Qgc3RhcnQgPSB7IHBhbGV0dGVHZW4gfTtcbiJdfQ==