import { convert } from '../color-conversion/conversion-index.js';
import { componentToHex } from '../utils/transforms.js';
import { conversionHelpers } from '../helpers/conversion.js';
import { defaults } from '../utils/defaults.js';
export function hslToHex(hsl) {
    try {
        const rgb = convert.hslToRGB(hsl);
        return rgbToHex(rgb);
    }
    catch (error) {
        console.warn(`hslToHex error: ${error}`);
        return defaults.defaultHex();
    }
}
export function hsvToHex(hsv) {
    try {
        const rgb = convert.hsvToRGB(hsv);
        return rgbToHex(rgb);
    }
    catch (error) {
        console.warn(`hsvToHex error: ${error}`);
        return defaults.defaultHex();
    }
}
export function cmykToHex(cmyk) {
    try {
        const rgb = convert.cmykToRGB(cmyk);
        return rgbToHex(rgb);
    }
    catch (error) {
        console.warn(`cmykToHex error: ${error}`);
        return defaults.defaultHex();
    }
}
export function labToHex(lab) {
    try {
        const rgb = convert.labToRGB(lab);
        return rgbToHex(rgb);
    }
    catch (error) {
        console.warn(`labToHex error: ${error}`);
        return defaults.defaultHex();
    }
}
export function rgbToHex(rgb) {
    try {
        if ([rgb.value.red, rgb.value.green, rgb.value.blue].some(v => isNaN(v) || v < 0 || v > 255)) {
            console.warn(`Invalid RGB values: R=${rgb.value.red}, G=${rgb.value.green}, B=${rgb.value.blue}`);
            return { value: { hex: '#000000' }, format: 'hex' };
        }
        return {
            value: {
                hex: `#${componentToHex(rgb.value.red)}${componentToHex(rgb.value.green)}${componentToHex(rgb.value.blue)}`
            },
            format: 'hex'
        };
    }
    catch (error) {
        console.warn(`rgbToHex error: ${error}`);
        return defaults.defaultHex();
    }
}
export function xyzToHex(xyz) {
    try {
        return conversionHelpers.xyzToHexTryCaseHelper(xyz);
    }
    catch (error) {
        console.warn(`xyzToHex error: ${error}`);
        return defaults.defaultHex();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9IZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29sb3ItY29udmVyc2lvbi90b0hleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFFL0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUU3QyxNQUFNLFVBQVUsUUFBUSxDQUFDLEdBQWM7SUFDdEMsSUFBSSxDQUFDO1FBQ0osTUFBTSxHQUFHLEdBQWMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM3QyxPQUFPLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztRQUNoQixPQUFPLENBQUMsSUFBSSxDQUFDLG1CQUFtQixLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQ3pDLE9BQU8sUUFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQzlCLENBQUM7QUFDRixDQUFDO0FBRUQsTUFBTSxVQUFVLFFBQVEsQ0FBQyxHQUFjO0lBQ3RDLElBQUksQ0FBQztRQUNKLE1BQU0sR0FBRyxHQUFjLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDN0MsT0FBTyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdEIsQ0FBQztJQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7UUFDaEIsT0FBTyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUN6QyxPQUFPLFFBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUM5QixDQUFDO0FBQ0YsQ0FBQztBQUVELE1BQU0sVUFBVSxTQUFTLENBQUMsSUFBZ0I7SUFDekMsSUFBSSxDQUFDO1FBQ0osTUFBTSxHQUFHLEdBQWMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQyxPQUFPLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztRQUNoQixPQUFPLENBQUMsSUFBSSxDQUFDLG9CQUFvQixLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQzFDLE9BQU8sUUFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQzlCLENBQUM7QUFDRixDQUFDO0FBRUQsTUFBTSxVQUFVLFFBQVEsQ0FBQyxHQUFjO0lBQ3RDLElBQUksQ0FBQztRQUNKLE1BQU0sR0FBRyxHQUFjLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFN0MsT0FBTyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdEIsQ0FBQztJQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7UUFDaEIsT0FBTyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUN6QyxPQUFPLFFBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUM5QixDQUFDO0FBQ0YsQ0FBQztBQUVELE1BQU0sVUFBVSxRQUFRLENBQUMsR0FBYztJQUN0QyxJQUFJLENBQUM7UUFDSixJQUNDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQ3BELENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FDakMsRUFDQSxDQUFDO1lBQ0YsT0FBTyxDQUFDLElBQUksQ0FDWCx5QkFBeUIsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLE9BQU8sR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLE9BQU8sR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FDbkYsQ0FBQztZQUNGLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDO1FBQ3JELENBQUM7UUFFRCxPQUFPO1lBQ04sS0FBSyxFQUFFO2dCQUNOLEdBQUcsRUFBRSxJQUFJLGNBQWMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO2FBQzNHO1lBQ0QsTUFBTSxFQUFFLEtBQUs7U0FDYixDQUFDO0lBQ0gsQ0FBQztJQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7UUFDaEIsT0FBTyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUN6QyxPQUFPLFFBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUM5QixDQUFDO0FBQ0YsQ0FBQztBQUVELE1BQU0sVUFBVSxRQUFRLENBQUMsR0FBYztJQUN0QyxJQUFJLENBQUM7UUFDSixPQUFPLGlCQUFpQixDQUFDLHFCQUFxQixDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDO1FBQ2hCLE9BQU8sQ0FBQyxJQUFJLENBQUMsbUJBQW1CLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDekMsT0FBTyxRQUFRLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDOUIsQ0FBQztBQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb252ZXJ0IH0gZnJvbSAnLi4vY29sb3ItY29udmVyc2lvbi9jb252ZXJzaW9uLWluZGV4JztcbmltcG9ydCAqIGFzIHR5cGVzIGZyb20gJy4uL2luZGV4JztcbmltcG9ydCB7IGNvbXBvbmVudFRvSGV4IH0gZnJvbSAnLi4vdXRpbHMvdHJhbnNmb3Jtcyc7XG5pbXBvcnQgeyBjb252ZXJzaW9uSGVscGVycyB9IGZyb20gJy4uL2hlbHBlcnMvY29udmVyc2lvbic7XG5pbXBvcnQgeyBkZWZhdWx0cyB9IGZyb20gJy4uL3V0aWxzL2RlZmF1bHRzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGhzbFRvSGV4KGhzbDogdHlwZXMuSFNMKTogdHlwZXMuSGV4IHtcblx0dHJ5IHtcblx0XHRjb25zdCByZ2I6IHR5cGVzLlJHQiA9IGNvbnZlcnQuaHNsVG9SR0IoaHNsKTtcblx0XHRyZXR1cm4gcmdiVG9IZXgocmdiKTtcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLndhcm4oYGhzbFRvSGV4IGVycm9yOiAke2Vycm9yfWApO1xuXHRcdHJldHVybiBkZWZhdWx0cy5kZWZhdWx0SGV4KCk7XG5cdH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhzdlRvSGV4KGhzdjogdHlwZXMuSFNWKTogdHlwZXMuSGV4IHtcblx0dHJ5IHtcblx0XHRjb25zdCByZ2I6IHR5cGVzLlJHQiA9IGNvbnZlcnQuaHN2VG9SR0IoaHN2KTtcblx0XHRyZXR1cm4gcmdiVG9IZXgocmdiKTtcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLndhcm4oYGhzdlRvSGV4IGVycm9yOiAke2Vycm9yfWApO1xuXHRcdHJldHVybiBkZWZhdWx0cy5kZWZhdWx0SGV4KCk7XG5cdH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNteWtUb0hleChjbXlrOiB0eXBlcy5DTVlLKTogdHlwZXMuSGV4IHtcblx0dHJ5IHtcblx0XHRjb25zdCByZ2I6IHR5cGVzLlJHQiA9IGNvbnZlcnQuY215a1RvUkdCKGNteWspO1xuXHRcdHJldHVybiByZ2JUb0hleChyZ2IpO1xuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGNvbnNvbGUud2FybihgY215a1RvSGV4IGVycm9yOiAke2Vycm9yfWApO1xuXHRcdHJldHVybiBkZWZhdWx0cy5kZWZhdWx0SGV4KCk7XG5cdH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxhYlRvSGV4KGxhYjogdHlwZXMuTEFCKTogdHlwZXMuSGV4IHtcblx0dHJ5IHtcblx0XHRjb25zdCByZ2I6IHR5cGVzLlJHQiA9IGNvbnZlcnQubGFiVG9SR0IobGFiKTtcblxuXHRcdHJldHVybiByZ2JUb0hleChyZ2IpO1xuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGNvbnNvbGUud2FybihgbGFiVG9IZXggZXJyb3I6ICR7ZXJyb3J9YCk7XG5cdFx0cmV0dXJuIGRlZmF1bHRzLmRlZmF1bHRIZXgoKTtcblx0fVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmdiVG9IZXgocmdiOiB0eXBlcy5SR0IpOiB0eXBlcy5IZXgge1xuXHR0cnkge1xuXHRcdGlmIChcblx0XHRcdFtyZ2IudmFsdWUucmVkLCByZ2IudmFsdWUuZ3JlZW4sIHJnYi52YWx1ZS5ibHVlXS5zb21lKFxuXHRcdFx0XHR2ID0+IGlzTmFOKHYpIHx8IHYgPCAwIHx8IHYgPiAyNTVcblx0XHRcdClcblx0XHQpIHtcblx0XHRcdGNvbnNvbGUud2Fybihcblx0XHRcdFx0YEludmFsaWQgUkdCIHZhbHVlczogUj0ke3JnYi52YWx1ZS5yZWR9LCBHPSR7cmdiLnZhbHVlLmdyZWVufSwgQj0ke3JnYi52YWx1ZS5ibHVlfWBcblx0XHRcdCk7XG5cdFx0XHRyZXR1cm4geyB2YWx1ZTogeyBoZXg6ICcjMDAwMDAwJyB9LCBmb3JtYXQ6ICdoZXgnIH07XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHtcblx0XHRcdHZhbHVlOiB7XG5cdFx0XHRcdGhleDogYCMke2NvbXBvbmVudFRvSGV4KHJnYi52YWx1ZS5yZWQpfSR7Y29tcG9uZW50VG9IZXgocmdiLnZhbHVlLmdyZWVuKX0ke2NvbXBvbmVudFRvSGV4KHJnYi52YWx1ZS5ibHVlKX1gXG5cdFx0XHR9LFxuXHRcdFx0Zm9ybWF0OiAnaGV4J1xuXHRcdH07XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0Y29uc29sZS53YXJuKGByZ2JUb0hleCBlcnJvcjogJHtlcnJvcn1gKTtcblx0XHRyZXR1cm4gZGVmYXVsdHMuZGVmYXVsdEhleCgpO1xuXHR9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB4eXpUb0hleCh4eXo6IHR5cGVzLlhZWik6IHR5cGVzLkhleCB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIGNvbnZlcnNpb25IZWxwZXJzLnh5elRvSGV4VHJ5Q2FzZUhlbHBlcih4eXopO1xuXHR9IGNhdGNoIChlcnJvcikge1xuXHRcdGNvbnNvbGUud2FybihgeHl6VG9IZXggZXJyb3I6ICR7ZXJyb3J9YCk7XG5cdFx0cmV0dXJuIGRlZmF1bHRzLmRlZmF1bHRIZXgoKTtcblx0fVxufVxuIl19