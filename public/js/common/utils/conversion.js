// File: src/common/utils/conversion.ts
import { paletteUtils } from '../../palette/utils.js';
import { core } from '../index.js';
const convert = paletteUtils.convert;
function getConversionFn(from, to) {
    try {
        const fnName = `${from}To${to[0].toUpperCase() + to.slice(1)}`;
        if (!(fnName in convert))
            return undefined;
        const conversionFn = convert[fnName];
        return (value) => structuredClone(conversionFn(value));
    }
    catch (error) {
        console.error(`Error getting conversion function: ${error}`);
        return undefined;
    }
}
function genAllColorValues(color) {
    const result = {};
    try {
        const clonedColor = core.clone(color);
        if (!core.validateColorValues(clonedColor)) {
            console.error(`Invalid color: ${JSON.stringify(clonedColor)}`);
            return {};
        }
        result.cmyk = convert.hslToCMYK(clonedColor);
        result.hex = convert.hslToHex(clonedColor);
        result.hsl = clonedColor;
        result.hsv = convert.hslToHSV(clonedColor);
        result.lab = convert.hslToLAB(clonedColor);
        result.rgb = convert.hslToRGB(clonedColor);
        result.sl = convert.hslToSL(clonedColor);
        result.sv = convert.hslToSV(clonedColor);
        result.xyz = convert.hslToXYZ(clonedColor);
        return result;
    }
    catch (error) {
        console.error(`Error generating all color values: ${error}`);
        return {};
    }
}
export const conversion = {
    genAllColorValues,
    getConversionFn
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVyc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21tb24vdXRpbHMvY29udmVyc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1Q0FBdUM7QUFHdkMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFaEMsTUFBTSxPQUFPLEdBQUcsWUFBWSxDQUFDLE9BQU8sQ0FBQztBQUVyQyxTQUFTLGVBQWUsQ0FJdkIsSUFBVSxFQUNWLEVBQU07SUFFTixJQUFJLENBQUM7UUFDSixNQUFNLE1BQU0sR0FDWCxHQUFHLElBQUksS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBMEIsQ0FBQztRQUV6RSxJQUFJLENBQUMsQ0FBQyxNQUFNLElBQUksT0FBTyxDQUFDO1lBQUUsT0FBTyxTQUFTLENBQUM7UUFFM0MsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FFUixDQUFDO1FBRTVCLE9BQU8sQ0FBQyxLQUErQixFQUEwQixFQUFFLENBQ2xFLGVBQWUsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztRQUNoQixPQUFPLENBQUMsS0FBSyxDQUFDLHNDQUFzQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBRTdELE9BQU8sU0FBUyxDQUFDO0lBQ2xCLENBQUM7QUFDRixDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxLQUFVO0lBQ3BDLE1BQU0sTUFBTSxHQUErQixFQUFFLENBQUM7SUFFOUMsSUFBSSxDQUFDO1FBQ0osTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUV0QyxJQUFJLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUM7WUFDNUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7WUFFL0QsT0FBTyxFQUFFLENBQUM7UUFDWCxDQUFDO1FBRUQsTUFBTSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzdDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzQyxNQUFNLENBQUMsR0FBRyxHQUFHLFdBQVcsQ0FBQztRQUN6QixNQUFNLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0MsTUFBTSxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzQyxNQUFNLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDekMsTUFBTSxDQUFDLEVBQUUsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3pDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUUzQyxPQUFPLE1BQU0sQ0FBQztJQUNmLENBQUM7SUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDO1FBQ2hCLE9BQU8sQ0FBQyxLQUFLLENBQUMsc0NBQXNDLEtBQUssRUFBRSxDQUFDLENBQUM7UUFFN0QsT0FBTyxFQUFFLENBQUM7SUFDWCxDQUFDO0FBQ0YsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRztJQUN6QixpQkFBaUI7SUFDakIsZUFBZTtDQUNmLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiBzcmMvY29tbW9uL3V0aWxzL2NvbnZlcnNpb24udHNcblxuaW1wb3J0IHsgQ29sb3JEYXRhQXNzZXJ0aW9uLCBDb2xvckRhdGFFeHRlbmRlZCwgSFNMIH0gZnJvbSAnLi4vLi4vaW5kZXgnO1xuaW1wb3J0IHsgcGFsZXR0ZVV0aWxzIH0gZnJvbSAnLi4vLi4vcGFsZXR0ZS91dGlscyc7XG5pbXBvcnQgeyBjb3JlIH0gZnJvbSAnLi4vaW5kZXgnO1xuXG5jb25zdCBjb252ZXJ0ID0gcGFsZXR0ZVV0aWxzLmNvbnZlcnQ7XG5cbmZ1bmN0aW9uIGdldENvbnZlcnNpb25Gbjxcblx0RnJvbSBleHRlbmRzIGtleW9mIENvbG9yRGF0YUFzc2VydGlvbixcblx0VG8gZXh0ZW5kcyBrZXlvZiBDb2xvckRhdGFBc3NlcnRpb25cbj4oXG5cdGZyb206IEZyb20sXG5cdHRvOiBUb1xuKTogKCh2YWx1ZTogQ29sb3JEYXRhQXNzZXJ0aW9uW0Zyb21dKSA9PiBDb2xvckRhdGFBc3NlcnRpb25bVG9dKSB8IHVuZGVmaW5lZCB7XG5cdHRyeSB7XG5cdFx0Y29uc3QgZm5OYW1lID1cblx0XHRcdGAke2Zyb219VG8ke3RvWzBdLnRvVXBwZXJDYXNlKCkgKyB0by5zbGljZSgxKX1gIGFzIGtleW9mIHR5cGVvZiBjb252ZXJ0O1xuXG5cdFx0aWYgKCEoZm5OYW1lIGluIGNvbnZlcnQpKSByZXR1cm4gdW5kZWZpbmVkO1xuXG5cdFx0Y29uc3QgY29udmVyc2lvbkZuID0gY29udmVydFtmbk5hbWVdIGFzIHVua25vd24gYXMgKFxuXHRcdFx0aW5wdXQ6IENvbG9yRGF0YUFzc2VydGlvbltGcm9tXVxuXHRcdCkgPT4gQ29sb3JEYXRhQXNzZXJ0aW9uW1RvXTtcblxuXHRcdHJldHVybiAodmFsdWU6IENvbG9yRGF0YUFzc2VydGlvbltGcm9tXSk6IENvbG9yRGF0YUFzc2VydGlvbltUb10gPT5cblx0XHRcdHN0cnVjdHVyZWRDbG9uZShjb252ZXJzaW9uRm4odmFsdWUpKTtcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLmVycm9yKGBFcnJvciBnZXR0aW5nIGNvbnZlcnNpb24gZnVuY3Rpb246ICR7ZXJyb3J9YCk7XG5cblx0XHRyZXR1cm4gdW5kZWZpbmVkO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGdlbkFsbENvbG9yVmFsdWVzKGNvbG9yOiBIU0wpOiBQYXJ0aWFsPENvbG9yRGF0YUV4dGVuZGVkPiB7XG5cdGNvbnN0IHJlc3VsdDogUGFydGlhbDxDb2xvckRhdGFFeHRlbmRlZD4gPSB7fTtcblxuXHR0cnkge1xuXHRcdGNvbnN0IGNsb25lZENvbG9yID0gY29yZS5jbG9uZShjb2xvcik7XG5cblx0XHRpZiAoIWNvcmUudmFsaWRhdGVDb2xvclZhbHVlcyhjbG9uZWRDb2xvcikpIHtcblx0XHRcdGNvbnNvbGUuZXJyb3IoYEludmFsaWQgY29sb3I6ICR7SlNPTi5zdHJpbmdpZnkoY2xvbmVkQ29sb3IpfWApO1xuXG5cdFx0XHRyZXR1cm4ge307XG5cdFx0fVxuXG5cdFx0cmVzdWx0LmNteWsgPSBjb252ZXJ0LmhzbFRvQ01ZSyhjbG9uZWRDb2xvcik7XG5cdFx0cmVzdWx0LmhleCA9IGNvbnZlcnQuaHNsVG9IZXgoY2xvbmVkQ29sb3IpO1xuXHRcdHJlc3VsdC5oc2wgPSBjbG9uZWRDb2xvcjtcblx0XHRyZXN1bHQuaHN2ID0gY29udmVydC5oc2xUb0hTVihjbG9uZWRDb2xvcik7XG5cdFx0cmVzdWx0LmxhYiA9IGNvbnZlcnQuaHNsVG9MQUIoY2xvbmVkQ29sb3IpO1xuXHRcdHJlc3VsdC5yZ2IgPSBjb252ZXJ0LmhzbFRvUkdCKGNsb25lZENvbG9yKTtcblx0XHRyZXN1bHQuc2wgPSBjb252ZXJ0LmhzbFRvU0woY2xvbmVkQ29sb3IpO1xuXHRcdHJlc3VsdC5zdiA9IGNvbnZlcnQuaHNsVG9TVihjbG9uZWRDb2xvcik7XG5cdFx0cmVzdWx0Lnh5eiA9IGNvbnZlcnQuaHNsVG9YWVooY2xvbmVkQ29sb3IpO1xuXG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLmVycm9yKGBFcnJvciBnZW5lcmF0aW5nIGFsbCBjb2xvciB2YWx1ZXM6ICR7ZXJyb3J9YCk7XG5cblx0XHRyZXR1cm4ge307XG5cdH1cbn1cblxuZXhwb3J0IGNvbnN0IGNvbnZlcnNpb24gPSB7XG5cdGdlbkFsbENvbG9yVmFsdWVzLFxuXHRnZXRDb252ZXJzaW9uRm5cbn07XG4iXX0=