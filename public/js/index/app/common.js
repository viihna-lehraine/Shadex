// File: src/index/app/common.js
import { data } from '../../data/index.js';
const _sets = data.sets;
//# sourceMappingURL=data:application/json;base64,