// File: src/index/data.js
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"data.js","sourceRoot":"","sources":["../../../../src/index/app/data.ts"],"names":[],"mappings":"AAAA,0BAA0B","sourcesContent":["// File: src/index/data.js\n\nimport {\n\tCMYKUnbranded,\n\tCMYKString,\n\tHexUnbranded,\n\tHSLString,\n\tHSLUnbranded,\n\tHSVUnbranded,\n\tHSVString,\n\tLABString,\n\tLABUnbranded,\n\tMutationLog,\n\tPaletteItemUnbranded,\n\tPaletteUnbranded,\n\tSettings,\n\tSLString,\n\tSLUnbranded,\n\tSVString,\n\tSVUnbranded,\n\tRGBString,\n\tRGBUnbranded,\n\tStoredPaletteUnbranded,\n\tXYZString,\n\tXYZUnbranded\n} from '../index.js';\n\nexport interface AdjustmentsData {\n\tslaValue: number;\n}\n\nexport type AppModeData = 'dev' | 'prod';\n\nexport interface DebounceData {\n\tbutton: number;\n\tinput: number;\n}\n\nexport interface DefaultBaseColorsData {\n\tcmyk: CMYKUnbranded;\n\thex: HexUnbranded;\n\thsl: HSLUnbranded;\n\thsv: HSVUnbranded;\n\tlab: LABUnbranded;\n\trgb: RGBUnbranded;\n\tsl: SLUnbranded;\n\tsv: SVUnbranded;\n\txyz: XYZUnbranded;\n}\n\nexport interface DefaultColorStringsData {\n\tcmyk: CMYKString;\n\thsl: HSLString;\n\thsv: HSVString;\n\tlab: LABString;\n\trgb: RGBString;\n\tsl: SLString;\n\tsv: SVString;\n\txyz: XYZString;\n}\n\nexport interface DOMElementData {\n\tadvancedMenu: HTMLDivElement | null;\n\tadvancedMenuButton: HTMLButtonElement | null;\n\tadvancedMenuContent: HTMLDivElement | null;\n\tapplyCustomColorButton: HTMLButtonElement | null;\n\tclearCustomColorButton: HTMLButtonElement | null;\n\tcustomColorDisplay: HTMLSpanElement | null;\n\tcustomColorInput: HTMLInputElement | null;\n\tcustomColorMenu: HTMLDivElement | null;\n\tcustomColorMenuButton: HTMLButtonElement | null;\n\tdeleteDatabaseButton: HTMLButtonElement | null;\n\tdesaturateButton: HTMLButtonElement | null;\n\tdeveloperMenu: HTMLDivElement | null;\n\tdeveloperMenuButton: HTMLButtonElement | null;\n\tenableAlphaCheckbox: HTMLInputElement | null;\n\tgenerateButton: HTMLButtonElement | null;\n\thelpMenu: HTMLDivElement | null;\n\thelpMenuButton: HTMLButtonElement | null;\n\thelpMenuContent: HTMLDivElement | null;\n\thistoryMenu: HTMLDivElement | null;\n\thistoryMenuButton: HTMLButtonElement | null;\n\thistoryMenuContent: HTMLDivElement | null;\n\tlimitDarknessCheckbox: HTMLInputElement | null;\n\tlimitGraynessCheckbox: HTMLInputElement | null;\n\tlimitLightnessCheckbox: HTMLInputElement | null;\n\tpaletteNumberOptions: HTMLInputElement | null;\n\tpaletteTypeOptions: HTMLSelectElement | null;\n\tresetDatabaseButton: HTMLButtonElement | null;\n\tresetPaletteIDButton: HTMLButtonElement | null;\n\tsaturateButton: HTMLButtonElement | null;\n\tselectedColorOption: HTMLSelectElement | null;\n\tshowAsCMYKButton: HTMLButtonElement | null;\n\tshowAsHexButton: HTMLButtonElement | null;\n\tshowAsHSLButton: HTMLButtonElement | null;\n\tshowAsHSVButton: HTMLButtonElement | null;\n\tshowAsLABButton: HTMLButtonElement | null;\n\tshowAsRGBButton: HTMLButtonElement | null;\n}\n\nexport interface DOM_ID_Data {\n\tadvancedMenu: string;\n\tadvancedMenuButton: string;\n\tadvancedMenuContent: string;\n\tapplyCustomColorButton: string;\n\tclearCustomColorButton: string;\n\tcustomColorDisplay: string;\n\tcustomColorInput: string;\n\tcustomColorMenu: string;\n\tcustomColorMenuButton: string;\n\tdeleteDatabaseButton: string;\n\tdesaturateButton: string;\n\tdeveloperMenu: string;\n\tdeveloperMenuButton: string;\n\tenableAlphaCheckbox: string;\n\tgenerateButton: string;\n\thelpMenu: string;\n\thelpMenuButton: string;\n\thelpMenuContent: string;\n\thistoryMenu: string;\n\thistoryMenuButton: string;\n\thistoryMenuContent: string;\n\tlimitDarknessCheckbox: string;\n\tlimitGraynessCheckbox: string;\n\tlimitLightnessCheckbox: string;\n\tpaletteNumberOptions: string;\n\tpaletteTypeOptions: string;\n\tresetDatabaseButton: string;\n\tresetPaletteIDButton: string;\n\tsaturateButton: string;\n\tselectedColorOption: string;\n\tshowAsCMYKButton: string;\n\tshowAsHexButton: string;\n\tshowAsHSLButton: string;\n\tshowAsHSVButton: string;\n\tshowAsLABButton: string;\n\tshowAsRGBButton: string;\n}\n\nexport interface LimitsData {\n\txyz: {\n\t\tmax: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t\tz: number;\n\t\t};\n\t\tmin: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t\tz: number;\n\t\t};\n\t};\n}\n\nexport interface ModeData {\n\tapp: 'dev' | 'prod';\n\tdebug: boolean;\n\tdebugLevel: 0 | 1;\n\tdebugLogs: boolean;\n\texposeIDB: boolean;\n\terrorLogs: boolean;\n\tgracefulErrors: boolean;\n\tinfoLogs: boolean;\n\tlogClicks: boolean;\n\tquiet: boolean;\n\tshowAlerts: boolean;\n\tstackTrace: boolean;\n\tverbose: boolean;\n\twarnLogs: boolean;\n}\n\nexport interface PaletteRangesData {\n\tcomp: {\n\t\thueShift: number;\n\t\tlightShift: null;\n\t\tsatShift: null;\n\t};\n\tdiadic: {\n\t\thueShift: number;\n\t\tlightShift: number;\n\t\tsatShift: number;\n\t};\n\thexad: {\n\t\thueShift: null;\n\t\tlightShift: number;\n\t\tsatShift: number;\n\t};\n\trandom: {\n\t\thueShift: null;\n\t\tlightShift: null;\n\t\tsatShift: null;\n\t};\n\tsplitComp: {\n\t\thueShift: number;\n\t\tlightShift: number;\n\t\tsatShift: number;\n\t};\n\ttetra: {\n\t\thueShift: null;\n\t\tlightShift: number;\n\t\tsatShift: number;\n\t};\n\ttriad: {\n\t\thueShift: null;\n\t\tlightShift: number;\n\t\tsatShift: number;\n\t};\n}\n\nexport interface ProbabilitiesData {\n\tvalues: number[];\n\tweights: number[];\n}\n\nexport interface SetsData {\n\tAlphaRange: readonly [0, 1];\n\tByteRange: readonly [0, 255];\n\tHexComponent: 'HexComponent';\n\tHexSet: 'HexSet';\n\tLAB_L: readonly [0, 100];\n\tLAB_A: readonly [-128, 127];\n\tLAB_B: readonly [-128, 127];\n\tPercentile: readonly [0, 100];\n\tRadial: readonly [0, 360];\n\tXYZ_X: readonly [number, number];\n\tXYZ_Y: readonly [number, number];\n\tXYZ_Z: readonly [number, number];\n}\n\nexport interface ThresholdsData {\n\tdark: number;\n\tgray: number;\n\tlight: number;\n}\n\nexport interface TimeoutsData {\n\tcopyButtonText: number;\n\ttoast: number;\n\ttooltip: number;\n}\n\n// ******** INNER BUNDLE INTERFACES ********\n\nexport interface DOMData {\n\telements: DOMElementData;\n\tids: DOM_ID_Data;\n}\n\n// ******** BUNDLE INTERFACES ********\n\nexport interface ConstsData {\n\tadjustments: AdjustmentsData;\n\tdebounce: DebounceData;\n\tdom: DOMData;\n\tlimits: LimitsData;\n\tpaletteRanges: PaletteRangesData;\n\tprobabilities: ProbabilitiesData;\n\tthresholds: ThresholdsData;\n\ttimeouts: TimeoutsData;\n}\n\nexport interface DefaultColorsData {\n\tcmyk: CMYKUnbranded;\n\thex: HexUnbranded;\n\thsl: HSLUnbranded;\n\thsv: HSVUnbranded;\n\tlab: LABUnbranded;\n\trgb: RGBUnbranded;\n\tsl: SLUnbranded;\n\tsv: SVUnbranded;\n\txyz: XYZUnbranded;\n\tstrings: DefaultColorStringsData;\n}\n\nexport interface Defaults {\n\tcolors: DefaultBaseColorsData;\n\tcolorStrings: DefaultColorStringsData;\n\tidb: IDBDefaultsData;\n\tpalette: PaletteDefaultsData;\n}\n\nexport interface IDBDefaultsData {\n\tsettings: Settings;\n\tmutation: MutationLog;\n}\n\nexport interface PaletteDefaultsData {\n\tunbrandedData: PaletteUnbranded;\n\tunbrandedItem: PaletteItemUnbranded;\n\tunbrandedStored: StoredPaletteUnbranded;\n}\n\n// ******** FINAL BUNDLE ********\n\nexport interface DataInterface {\n\tconsts: ConstsData;\n\tdefaults: Defaults;\n\tidb: Readonly<{\n\t\tDEFAULT_KEYS: Readonly<Record<string, string>>;\n\t\tSTORE_NAMES: Readonly<Record<string, string>>;\n\t}>;\n\tmode: ModeData;\n\tsets: SetsData;\n}\n"]}