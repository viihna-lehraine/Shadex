// File: src/config/schema.ts

import { EnvSchema } from '../../../../../src/index/index.js';

export const ENV_SCHEMA: EnvSchema = {
	// * * * * * * * * * * * * * * * * * * *
	// 1. Main Application Settings (app.env)
	// * * * * * * * * * * * * * * * * * * *
	app: {
		type: 'string',
		allowedValues: ['dev', 'prod'],
		default: 'dev',
		nullable: false
	},
	debug: { type: 'boolean', default: true, nullable: false },
	errorLogs: { type: 'boolean', default: true, nullable: false },
	gracefulErrors: { type: 'boolean', default: false, nullable: false },
	infoLogs: { type: 'boolean', default: true, nullable: false },
	quiet: { type: 'boolean', default: false, nullable: false },
	stackTrace: { type: 'boolean', default: false, nullable: false },
	verbose: { type: 'boolean', default: true, nullable: false },
	warnLogs: { type: 'boolean', default: true, nullable: false },
	// * * * * * * * * * * * * * * *
	// 2. IndexedDB Defaults (idb.env)
	// * * * * * * * * * * * * * * *
	idbDefaults_ColorSpace: { type: 'string', default: 'hsl', nullable: false },
	idbDefaults_LastTableID: { type: 'number', default: 0, nullable: false },
	idbDefaults_KeysAPP_SETTINGS: {
		type: 'string',
		default: 'appSettings',
		nullable: false
	},
	idbDefaults_KeysCUSTOM_COLOR: {
		type: 'string',
		default: 'customColor',
		nullable: false
	},
	idbDefaults_StoreNamesCUSTOM_COLOR: {
		type: 'string',
		default: 'custom-color',
		nullable: false
	},
	idbDefaults_StoreNamesMUTATIONS: {
		type: 'string',
		default: 'mutations',
		nullable: false
	},
	idbDefaults_StoreNamesPALETTES: {
		type: 'string',
		default: 'palettes',
		nullable: false
	},
	idbDefaults_StoreNamesSETTINGS: {
		type: 'string',
		default: 'settings',
		nullable: false
	},
	idbDefaults_StoreNamesTABLES: {
		type: 'string',
		default: 'tables',
		nullable: false
	},
	// * * * * * * * * * * * *
	// 3. DOM Settings (dom.env)
	// * * * * * * * * * * * *
	buttonDebounce: { type: 'number', default: 300, nullable: false },
	inputDebounce: { type: 'number', default: 200, nullable: false },
	copyButtonTextTimeout: { type: 'number', default: 1000, nullable: false },
	toastTimeout: { type: 'number', default: 3000, nullable: false },
	tooltipTimeout: { type: 'number', default: 1000, nullable: false },
	// * * * * * * * * * * * * * * * * *
	// 4. DOM Elements (domElements.env)
	// * * * * * * * * * * * * * * * * *
	dom_AdvancedMenu: {
		type: 'string',
		default: 'advanced-menu',
		nullable: false
	},
	dom_AdvancedMenuButton: {
		type: 'string',
		default: 'advanced-menu-button',
		nullable: false
	},
	dom_ApplyCustomColorButton: {
		type: 'string',
		default: 'apply-custom-color-button',
		nullable: false
	},
	dom_ClearCustomColorButton: {
		type: 'string',
		default: 'clear-custom-color-button',
		nullable: false
	},
	dom_CloseCustomColorMenuButton: {
		type: 'string',
		default: 'close-custom-color-menu-button',
		nullable: false
	},
	dom_CloseDeveloperMenuButton: {
		type: 'string',
		default: 'close-developer-menu-button',
		nullable: false
	},
	dom_CloseHelpMenuButton: {
		type: 'string',
		default: 'close-help-menu-button',
		nullable: false
	},
	dom_CloseHistoryMenuButton: {
		type: 'string',
		default: 'close-history-menu-button',
		nullable: false
	},
	dom_CustomColorDisplay: {
		type: 'string',
		default: 'custom-color-display',
		nullable: false
	},
	dom_CustomColorInput: {
		type: 'string',
		default: 'custom-color-input',
		nullable: false
	},
	dom_CustomColorMenu: {
		type: 'string',
		default: 'custom-color-menu',
		nullable: false
	},
	dom_CustomColorMenuButton: {
		type: 'string',
		default: 'custom-color-menu-button',
		nullable: false
	},
	dom_DesaturateButton: {
		type: 'string',
		default: 'desaturate-button',
		nullable: false
	},
	dom_DeveloperMenu: {
		type: 'string',
		default: 'developer-menu',
		nullable: false
	},
	dom_DeveloperMenuButton: {
		type: 'string',
		default: 'developer-menu-button',
		nullable: false
	},
	dom_EnableAlphaCheckbox: {
		type: 'string',
		default: 'enable-alpha-checkbox',
		nullable: false
	},
	dom_GenerateButton: {
		type: 'string',
		default: 'generate-button',
		nullable: false
	},
	dom_HelpMenu: { type: 'string', default: 'help-menu', nullable: false },
	dom_HelpMenuButton: {
		type: 'string',
		default: 'help-menu-button',
		nullable: false
	},
	dom_HistoryMenu: {
		type: 'string',
		default: 'history-menu',
		nullable: false
	},
	dom_HistoryMenuButton: {
		type: 'string',
		default: 'history-menu-button',
		nullable: false
	},
	dom_LimitDarknessCheckbox: {
		type: 'string',
		default: 'limit-darkness-checkbox',
		nullable: false
	},
	dom_LimitGraynessCheckbox: {
		type: 'string',
		default: 'limit-grayness-checkbox',
		nullable: false
	},
	dom_LimitLightnessCheckbox: {
		type: 'string',
		default: 'limit-lightness-checkbox',
		nullable: false
	},
	dom_PaletteNumberOptions: {
		type: 'string',
		default: 'palette-number-options',
		nullable: false
	},
	dom_PaletteTypeOptions: {
		type: 'string',
		default: 'palette-type-options',
		nullable: false
	},
	dom_ResetButton: {
		type: 'string',
		default: 'reset-button',
		nullable: false
	},
	dom_SaturateButton: {
		type: 'string',
		default: 'saturate-button',
		nullable: false
	},
	dom_SelectedColorOption: {
		type: 'string',
		default: 'selected-color-option',
		nullable: false
	},
	dom_ShowAsCMYKButton: {
		type: 'string',
		default: 'show-as-cmyk-button',
		nullable: false
	},
	dom_ShowAsHexButton: {
		type: 'string',
		default: 'show-as-hex-button',
		nullable: false
	},
	dom_ShowAsHSLButton: {
		type: 'string',
		default: 'show-as-hsl-button',
		nullable: false
	},
	dom_ShowAsHSVButton: {
		type: 'string',
		default: 'show-as-hsv-button',
		nullable: false
	},
	dom_ShowAsLABButton: {
		type: 'string',
		default: 'show-as-lab-button',
		nullable: false
	},
	dom_ShowAsRGBButton: {
		type: 'string',
		default: 'show-as-rgb-button',
		nullable: false
	},
	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	// 5. Color Settings and Palette Generation Settings (colors.env)
	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	compPaletteHueShiftRange: { type: 'number', default: 10, nullable: true },
	compPaletteLightShiftRange: {
		type: 'number',
		default: null,
		nullable: true
	},
	compPaletteSatShiftRange: { type: 'number', default: null, nullable: true },
	diadicPaletteHueShiftRange: { type: 'number', default: 30, nullable: true },
	diadicPaletteLightShiftRange: {
		type: 'number',
		default: 30,
		nullable: true
	},
	diadicPaletteSatShiftRange: { type: 'number', default: 30, nullable: true },
	hexadPaletteHueShiftRange: {
		type: 'number',
		default: null,
		nullable: true
	},
	hexadPaletteLightShiftRange: {
		type: 'number',
		default: 30,
		nullable: true
	},
	hexadPaletteSatShiftRange: { type: 'number', default: 30, nullable: true },
	randomPaletteHueShiftRange: {
		type: 'number',
		default: null,
		nullable: true
	},
	randomPaletteLightShiftRange: {
		type: 'number',
		default: null,
		nullable: true
	},
	randomPaletteSatShiftRange: {
		type: 'number',
		default: null,
		nullable: true
	},
	splitCompPaletteHueShiftRange: {
		type: 'number',
		default: 30,
		nullable: true
	},
	splitCompPaletteLightShiftRange: {
		type: 'number',
		default: 30,
		nullable: true
	},
	splitCompPaletteSatShiftRange: {
		type: 'number',
		default: 30,
		nullable: true
	},
	tetraPaletteHueShiftRange: {
		type: 'number',
		default: null,
		nullable: true
	},
	tetraPaletteLightShiftRange: {
		type: 'number',
		default: 30,
		nullable: true
	},
	tetraPaletteSatShiftRange: { type: 'number', default: 30, nullable: true },
	triadPaletteHueShiftRange: {
		type: 'number',
		default: null,
		nullable: true
	},
	triadPaletteLightShiftRange: {
		type: 'number',
		default: 30,
		nullable: true
	},
	triadPaletteSatShiftRange: { type: 'number', default: 30, nullable: true },
	darkThreshold: { type: 'number', default: 25, nullable: false },
	grayThreshold: { type: 'number', default: 20, nullable: false },
	lightThreshold: { type: 'number', default: 75, nullable: false },
	slaValueAdjustment: { type: 'number', default: 10, nullable: false },
	xyzMaxX: { type: 'number', default: 95.047, nullable: false },
	xyzMaxY: { type: 'number', default: 100.0, nullable: false },
	xyzMaxZ: { type: 'number', default: 108.883, nullable: false },
	xyzMinX: { type: 'number', default: 0.0, nullable: false },
	xyzMinY: { type: 'number', default: 0.0, nullable: false },
	xyzMinZ: { type: 'number', default: 0.0, nullable: false },
	// * * * * * * * * * * * * * * * * * * * * * * * *
	// 6. Probability Settings (probabilities.env)
	// * * * * * * * * * * * * * * * * * * * * * * * *
	probabilities_Value_1: { type: 'number', default: 40, nullable: false },
	probabilities_Value_2: { type: 'number', default: 45, nullable: false },
	probabilities_Value_3: { type: 'number', default: 50, nullable: false },
	probabilities_Value_4: { type: 'number', default: 55, nullable: false },
	probabilities_Value_5: { type: 'number', default: 60, nullable: false },
	probabilities_Value_6: { type: 'number', default: 65, nullable: false },
	probabilities_Value_7: { type: 'number', default: 70, nullable: false },
	probabilities_Weight_1: { type: 'number', default: 0.1, nullable: false },
	probabilities_Weight_2: { type: 'number', default: 0.15, nullable: false },
	probabilities_Weight_3: { type: 'number', default: 0.2, nullable: false },
	probabilities_Weight_4: { type: 'number', default: 0.3, nullable: false },
	probabilities_Weight_5: { type: 'number', default: 0.15, nullable: false },
	probabilities_Weight_6: { type: 'number', default: 0.05, nullable: false },
	probabilities_Weight_7: { type: 'number', default: 0.05, nullable: false }
};
