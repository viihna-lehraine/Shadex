import"./index-Bu01b8jX.js";import{d as v,a as y}from"./dom-RIiXtj4p.js";const B=v.ids;function R(w,d,C,g){const{data:{deepClone:S},dom:{getElement:a,getAllElements:E}}=d,{errors:i,log:l}=C;function b(t,e){return i.handleSync(()=>{p(t);const o=document.createElement("div");return o.classList.add("tooltip"),o.textContent=e,document.body.appendChild(o),u(t,o),t.dataset.tooltipId=o.id,setTimeout(()=>{o.style.opacity="1"},y.tooltipFadeOut),o},"[utils.dom.createTooltip]: Error occurred while creating tooltip.")}function x(t,e,o){return i.handleSync(()=>{const r=new Blob([t],{type:o}),n=URL.createObjectURL(r),c=document.createElement("a");c.href=n,c.download=e,c.click(),URL.revokeObjectURL(n)},"[utils.dom.downloadFile]: Error occurred while downloading file.")}function I(t,e){return i.handleSync(()=>{const o=document.getElementById(v.ids.inputs.paletteColumn);if(!o){l.error("paletteColumnSelector not found","utils.dom.enforceMinimumSwatches"),console.trace("enforceMinimumSwatches stack trace");return}const r=parseInt(o.value,10);let n=r;if(r<t?n=t:e!==void 0&&r>e&&(n=e),n!==r){o.value=n.toString();const c=new Event("change",{bubbles:!0});try{o.dispatchEvent(c)}catch(s){throw l.error(`Failed to dispatch change event to palette-number-options dropdown menu: ${s}`,"utils.dom.enforceMinimumSwatches"),new Error(`Failed to dispatch change event: ${s}`)}}},"Error occurred while enforcing swatch rules.")}function T(){return i.handleSync(()=>{const t=a(".tooltip");t&&(t.style.opacity="0",setTimeout(()=>{t.style.visibility="hidden",t.remove()},y.tooltipFadeOut))},"[utils.dom.hideTooltip]: Error occurred while hiding tooltip.")}function u(t,e){return i.handleSync(()=>{const o=t.getBoundingClientRect();e.style.position="absolute",e.style.left=`${o.left+window.scrollX}px`,e.style.top=`${o.top+window.scrollY-e.offsetHeight-5}px`,e.style.zIndex="1000",e.style.pointerEvents="none",e.style.opacity="0",e.style.transition="opacity 0.2s ease-in-out"},"[utils.dom.positionTooltip]: Error occurred while positioning tooltip.")}function p(t){return i.handleSync(()=>{const e=t.dataset.tooltipId;if(!e)return;const o=document.getElementById(e);o&&(o.style.opacity="0",setTimeout(()=>{o==null||o.remove()},300)),delete t.dataset.tooltipId},"[utils.dom.removeTooltip]: Error occurred while removing tooltip.")}function M(t){return i.handleAsync(async()=>new Promise((e,o)=>{const r=new FileReader;r.onload=()=>e(r.result),r.onerror=()=>o(r.error),r.readAsText(t)}),"Error occurred while reading file.")}function O(t){return i.handleSync(()=>{const e=Array.from(E(".color-text-output-box"));for(const o of e){const r=o,n=r.colorValues;if(!n||!g.colorValue(n)){l.error("Invalid color values. Cannot display toast.","utils.dom.switchColorSpaceInDOM");continue}const c=r.getAttribute("data-format");l.info(`Converting from ${c} to ${t}`,"utils.dom.switchColorSpaceInDOM");const s=d.color.getConversionFn(c,t);if(!s){l.error(`Conversion from ${c} to ${t} is not supported.`,"utils.dom.switchColorSpaceInDOM");continue}const f=S(n);if(!d.typeGuards.isConvertibleColor(f)){l.error("Cannot convert from SL, SV, or XYZ color spaces. Please convert to a supported format first.","utils.dom.switchColorSpaceInDOM");continue}const h=s(f);if(!h){l.error(`Conversion to ${t} failed.`,"utils.dom.switchColorSpaceInDOM");continue}r.value=String(h),r.setAttribute("data-format",t)}},"[utils.dom.switchColorSpaceInDOM]: Error occurred while converting colors.")}function $(t,e){return i.handleSync(()=>{const o=d.dom.getElement(e);o&&(o.style.backgroundColor=w.formatColorAsCSS(t))},"[utils.dom.updateColorBox]: Error occurred while updating color box.")}function L(t){return i.handleSync(()=>{const e=a(B.divs.paletteHistory);e&&(e.innerHTML="",t.forEach(o=>{var n;const r=document.createElement("div");r.classList.add("history-item"),r.id=`palette_${o.id}`,r.innerHTML=`
				<p>Palette #${o.metadata.name||o.id}</p>
				<div class="color-preview">
					${o.items.map(c=>`<span class="color-box" style="background: ${c.css.hex};"></span>`).join(" ")}
				</div>
				<button class="remove-history-item" data-id="${o.id}-history-remove-btn">Remove</button>
			`,(n=r.querySelector(".remove-history-item"))==null||n.addEventListener("click",async()=>{}),e.appendChild(r)}))},"[domUtils > updateHistory]: Error occurred while updating history.")}const m={createTooltip:b,downloadFile:x,enforceSwatchRules:I,hideTooltip:T,positionTooltip:u,removeTooltip:p,readFile:M,switchColorSpaceInDOM:O,updateColorBox:$,updateHistory:L};return i.handleSync(()=>m,"Error occurred while creating partial DOM utilities group.",{context:{domUtilitiesPartial:m}})}export{R as partialDOMUtilitiesFactory};
