const a=e=>({getConversionFn(i,c){try{const n=`${i}To${c[0].toUpperCase()+c.slice(1)}`;if(!(n in e.color))return;const r=e.color[n];return t=>structuredClone(r(t))}catch(n){throw new Error(`Error getting conversion function: ${n instanceof Error?n.message:"Unknown error"}`)}},hueToRGB(i,c,n){try{const r=e.data.deepClone(i),t=e.data.deepClone(c);let o=e.data.deepClone(n);return o<0&&(o+=1),o>1&&(o-=1),o<.16666666666666666?r+(t-r)*6*o:o<.5?t:o<.6666666666666666?r+(t-r)*(.6666666666666666-o)*6:r}catch(r){throw new Error(`Error converting hue to RGB: ${r instanceof Error?r.message:"Unknown error"}`)}}});export{a as colorHelpersFactory};
